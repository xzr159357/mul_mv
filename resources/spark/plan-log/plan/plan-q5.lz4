== Physical Plan ==
TakeOrderedAndProject (78)
+- * HashAggregate (77)
   +- Exchange (76)
      +- * HashAggregate (75)
         +- * Expand (74)
            +- Union (73)
               :- * HashAggregate (25)
               :  +- Exchange (24)
               :     +- * HashAggregate (23)
               :        +- * Project (22)
               :           +- * BroadcastHashJoin Inner BuildRight (21)
               :              :- * Project (16)
               :              :  +- * BroadcastHashJoin Inner BuildRight (15)
               :              :     :- Union (9)
               :              :     :  :- * Project (4)
               :              :     :  :  +- * Filter (3)
               :              :     :  :     +- * ColumnarToRow (2)
               :              :     :  :        +- Scan parquet tpcds_1.store_sales (1)
               :              :     :  +- * Project (8)
               :              :     :     +- * Filter (7)
               :              :     :        +- * ColumnarToRow (6)
               :              :     :           +- Scan parquet tpcds_1.store_returns (5)
               :              :     +- BroadcastExchange (14)
               :              :        +- * Project (13)
               :              :           +- * Filter (12)
               :              :              +- * ColumnarToRow (11)
               :              :                 +- Scan parquet tpcds_1.date_dim (10)
               :              +- BroadcastExchange (20)
               :                 +- * Filter (19)
               :                    +- * ColumnarToRow (18)
               :                       +- Scan parquet tpcds_1.store (17)
               :- * HashAggregate (46)
               :  +- Exchange (45)
               :     +- * HashAggregate (44)
               :        +- * Project (43)
               :           +- * BroadcastHashJoin Inner BuildRight (42)
               :              :- * Project (37)
               :              :  +- * BroadcastHashJoin Inner BuildRight (36)
               :              :     :- Union (34)
               :              :     :  :- * Project (29)
               :              :     :  :  +- * Filter (28)
               :              :     :  :     +- * ColumnarToRow (27)
               :              :     :  :        +- Scan parquet tpcds_1.catalog_sales (26)
               :              :     :  +- * Project (33)
               :              :     :     +- * Filter (32)
               :              :     :        +- * ColumnarToRow (31)
               :              :     :           +- Scan parquet tpcds_1.catalog_returns (30)
               :              :     +- ReusedExchange (35)
               :              +- BroadcastExchange (41)
               :                 +- * Filter (40)
               :                    +- * ColumnarToRow (39)
               :                       +- Scan parquet tpcds_1.catalog_page (38)
               +- * HashAggregate (72)
                  +- Exchange (71)
                     +- * HashAggregate (70)
                        +- * Project (69)
                           +- * BroadcastHashJoin Inner BuildRight (68)
                              :- * Project (63)
                              :  +- * BroadcastHashJoin Inner BuildRight (62)
                              :     :- Union (60)
                              :     :  :- * Project (50)
                              :     :  :  +- * Filter (49)
                              :     :  :     +- * ColumnarToRow (48)
                              :     :  :        +- Scan parquet tpcds_1.web_sales (47)
                              :     :  +- * Project (59)
                              :     :     +- * BroadcastHashJoin Inner BuildLeft (58)
                              :     :        :- BroadcastExchange (54)
                              :     :        :  +- * Filter (53)
                              :     :        :     +- * ColumnarToRow (52)
                              :     :        :        +- Scan parquet tpcds_1.web_returns (51)
                              :     :        +- * Filter (57)
                              :     :           +- * ColumnarToRow (56)
                              :     :              +- Scan parquet tpcds_1.web_sales (55)
                              :     +- ReusedExchange (61)
                              +- BroadcastExchange (67)
                                 +- * Filter (66)
                                    +- * ColumnarToRow (65)
                                       +- Scan parquet tpcds_1.web_site (64)


(1) Scan parquet tpcds_1.store_sales
Output [4]: [ss_sold_date_sk#60, ss_store_sk#67, ss_ext_sales_price#75, ss_net_profit#82]
Batched: true
Location: InMemoryFileIndex [file:/home/daily/spark_tune/environment/spark-3.1.1/benchmarks/tpcds/data/1/store_sales]
PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)]
ReadSchema: struct<ss_sold_date_sk:int,ss_store_sk:int,ss_ext_sales_price:decimal(7,2),ss_net_profit:decimal(7,2)>

(2) ColumnarToRow [codegen id : 1]
Input [4]: [ss_sold_date_sk#60, ss_store_sk#67, ss_ext_sales_price#75, ss_net_profit#82]

(3) Filter [codegen id : 1]
Input [4]: [ss_sold_date_sk#60, ss_store_sk#67, ss_ext_sales_price#75, ss_net_profit#82]
Condition : (isnotnull(ss_sold_date_sk#60) AND isnotnull(ss_store_sk#67))

(4) Project [codegen id : 1]
Output [6]: [ss_store_sk#67 AS store_sk#12, ss_sold_date_sk#60 AS date_sk#13, ss_ext_sales_price#75 AS sales_price#14, ss_net_profit#82 AS profit#15, 0.00 AS return_amt#16, 0.00 AS net_loss#17]
Input [4]: [ss_sold_date_sk#60, ss_store_sk#67, ss_ext_sales_price#75, ss_net_profit#82]

(5) Scan parquet tpcds_1.store_returns
Output [4]: [sr_returned_date_sk#83, sr_store_sk#90, sr_return_amt#94, sr_net_loss#102]
Batched: true
Location: InMemoryFileIndex [file:/home/daily/spark_tune/environment/spark-3.1.1/benchmarks/tpcds/data/1/store_returns]
PushedFilters: [IsNotNull(sr_returned_date_sk), IsNotNull(sr_store_sk)]
ReadSchema: struct<sr_returned_date_sk:int,sr_store_sk:int,sr_return_amt:decimal(7,2),sr_net_loss:decimal(7,2)>

(6) ColumnarToRow [codegen id : 2]
Input [4]: [sr_returned_date_sk#83, sr_store_sk#90, sr_return_amt#94, sr_net_loss#102]

(7) Filter [codegen id : 2]
Input [4]: [sr_returned_date_sk#83, sr_store_sk#90, sr_return_amt#94, sr_net_loss#102]
Condition : (isnotnull(sr_returned_date_sk#83) AND isnotnull(sr_store_sk#90))

(8) Project [codegen id : 2]
Output [6]: [sr_store_sk#90 AS store_sk#18, sr_returned_date_sk#83 AS date_sk#19, 0.00 AS sales_price#20, 0.00 AS profit#21, sr_return_amt#94 AS return_amt#22, sr_net_loss#102 AS net_loss#23]
Input [4]: [sr_returned_date_sk#83, sr_store_sk#90, sr_return_amt#94, sr_net_loss#102]

(9) Union

(10) Scan parquet tpcds_1.date_dim
Output [2]: [d_date_sk#103, d_date#105]
Batched: true
Location: InMemoryFileIndex [file:/home/daily/spark_tune/environment/spark-3.1.1/benchmarks/tpcds/data/1/date_dim]
PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-08-23), LessThanOrEqual(d_date,2000-09-06), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(11) ColumnarToRow [codegen id : 3]
Input [2]: [d_date_sk#103, d_date#105]

(12) Filter [codegen id : 3]
Input [2]: [d_date_sk#103, d_date#105]
Condition : (((isnotnull(d_date#105) AND (d_date#105 >= 11192)) AND (d_date#105 <= 11206)) AND isnotnull(d_date_sk#103))

(13) Project [codegen id : 3]
Output [1]: [d_date_sk#103]
Input [2]: [d_date_sk#103, d_date#105]

(14) BroadcastExchange
Input [1]: [d_date_sk#103]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#367]

(15) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [date_sk#13]
Right keys [1]: [d_date_sk#103]
Join condition: None

(16) Project [codegen id : 5]
Output [5]: [store_sk#12, sales_price#14, profit#15, return_amt#16, net_loss#17]
Input [7]: [store_sk#12, date_sk#13, sales_price#14, profit#15, return_amt#16, net_loss#17, d_date_sk#103]

(17) Scan parquet tpcds_1.store
Output [2]: [s_store_sk#131, s_store_id#132]
Batched: true
Location: InMemoryFileIndex [file:/home/daily/spark_tune/environment/spark-3.1.1/benchmarks/tpcds/data/1/store]
PushedFilters: [IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:int,s_store_id:string>

(18) ColumnarToRow [codegen id : 4]
Input [2]: [s_store_sk#131, s_store_id#132]

(19) Filter [codegen id : 4]
Input [2]: [s_store_sk#131, s_store_id#132]
Condition : isnotnull(s_store_sk#131)

(20) BroadcastExchange
Input [2]: [s_store_sk#131, s_store_id#132]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#375]

(21) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [store_sk#12]
Right keys [1]: [s_store_sk#131]
Join condition: None

(22) Project [codegen id : 5]
Output [5]: [sales_price#14, profit#15, return_amt#16, net_loss#17, s_store_id#132]
Input [7]: [store_sk#12, sales_price#14, profit#15, return_amt#16, net_loss#17, s_store_sk#131, s_store_id#132]

(23) HashAggregate [codegen id : 5]
Input [5]: [sales_price#14, profit#15, return_amt#16, net_loss#17, s_store_id#132]
Keys [1]: [s_store_id#132]
Functions [4]: [partial_sum(UnscaledValue(sales_price#14)), partial_sum(UnscaledValue(return_amt#16)), partial_sum(UnscaledValue(profit#15)), partial_sum(UnscaledValue(net_loss#17))]
Aggregate Attributes [4]: [sum#357L, sum#358L, sum#359L, sum#360L]
Results [5]: [s_store_id#132, sum#361L, sum#362L, sum#363L, sum#364L]

(24) Exchange
Input [5]: [s_store_id#132, sum#361L, sum#362L, sum#363L, sum#364L]
Arguments: hashpartitioning(s_store_id#132, 200), ENSURE_REQUIREMENTS, [id=#381]

(25) HashAggregate [codegen id : 6]
Input [5]: [s_store_id#132, sum#361L, sum#362L, sum#363L, sum#364L]
Keys [1]: [s_store_id#132]
Functions [4]: [sum(UnscaledValue(sales_price#14)), sum(UnscaledValue(return_amt#16)), sum(UnscaledValue(profit#15)), sum(UnscaledValue(net_loss#17))]
Aggregate Attributes [4]: [sum(UnscaledValue(sales_price#14))#314L, sum(UnscaledValue(return_amt#16))#316L, sum(UnscaledValue(profit#15))#315L, sum(UnscaledValue(net_loss#17))#317L]
Results [5]: [MakeDecimal(sum(UnscaledValue(sales_price#14))#314L,17,2) AS sales#24, MakeDecimal(sum(UnscaledValue(return_amt#16))#316L,17,2) AS RETURNS#26, CheckOverflow((promote_precision(cast(MakeDecimal(sum(UnscaledValue(profit#15))#315L,17,2) as decimal(18,2))) - promote_precision(cast(MakeDecimal(sum(UnscaledValue(net_loss#17))#317L,17,2) as decimal(18,2)))), DecimalType(18,2), true) AS profit#2, store channel AS channel#329, concat(store, s_store_id#132) AS id#330]

(26) Scan parquet tpcds_1.catalog_sales
Output [4]: [cs_sold_date_sk#160, cs_catalog_page_sk#172, cs_ext_sales_price#183, cs_net_profit#193]
Batched: true
Location: InMemoryFileIndex [file:/home/daily/spark_tune/environment/spark-3.1.1/benchmarks/tpcds/data/1/catalog_sales]
PushedFilters: [IsNotNull(cs_sold_date_sk), IsNotNull(cs_catalog_page_sk)]
ReadSchema: struct<cs_sold_date_sk:int,cs_catalog_page_sk:int,cs_ext_sales_price:decimal(7,2),cs_net_profit:decimal(7,2)>

(27) ColumnarToRow [codegen id : 7]
Input [4]: [cs_sold_date_sk#160, cs_catalog_page_sk#172, cs_ext_sales_price#183, cs_net_profit#193]

(28) Filter [codegen id : 7]
Input [4]: [cs_sold_date_sk#160, cs_catalog_page_sk#172, cs_ext_sales_price#183, cs_net_profit#193]
Condition : (isnotnull(cs_sold_date_sk#160) AND isnotnull(cs_catalog_page_sk#172))

(29) Project [codegen id : 7]
Output [6]: [cs_catalog_page_sk#172 AS page_sk#28, cs_sold_date_sk#160 AS date_sk#29, cs_ext_sales_price#183 AS sales_price#30, cs_net_profit#193 AS profit#31, 0.00 AS return_amt#32, 0.00 AS net_loss#33]
Input [4]: [cs_sold_date_sk#160, cs_catalog_page_sk#172, cs_ext_sales_price#183, cs_net_profit#193]

(30) Scan parquet tpcds_1.catalog_returns
Output [4]: [cr_returned_date_sk#194, cr_catalog_page_sk#206, cr_return_amount#212, cr_net_loss#220]
Batched: true
Location: InMemoryFileIndex [file:/home/daily/spark_tune/environment/spark-3.1.1/benchmarks/tpcds/data/1/catalog_returns]
PushedFilters: [IsNotNull(cr_returned_date_sk), IsNotNull(cr_catalog_page_sk)]
ReadSchema: struct<cr_returned_date_sk:int,cr_catalog_page_sk:int,cr_return_amount:decimal(7,2),cr_net_loss:decimal(7,2)>

(31) ColumnarToRow [codegen id : 8]
Input [4]: [cr_returned_date_sk#194, cr_catalog_page_sk#206, cr_return_amount#212, cr_net_loss#220]

(32) Filter [codegen id : 8]
Input [4]: [cr_returned_date_sk#194, cr_catalog_page_sk#206, cr_return_amount#212, cr_net_loss#220]
Condition : (isnotnull(cr_returned_date_sk#194) AND isnotnull(cr_catalog_page_sk#206))

(33) Project [codegen id : 8]
Output [6]: [cr_catalog_page_sk#206 AS page_sk#34, cr_returned_date_sk#194 AS date_sk#35, 0.00 AS sales_price#36, 0.00 AS profit#37, cr_return_amount#212 AS return_amt#38, cr_net_loss#220 AS net_loss#39]
Input [4]: [cr_returned_date_sk#194, cr_catalog_page_sk#206, cr_return_amount#212, cr_net_loss#220]

(34) Union

(35) ReusedExchange [Reuses operator id: 14]
Output [1]: [d_date_sk#103]

(36) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [date_sk#29]
Right keys [1]: [d_date_sk#103]
Join condition: None

(37) Project [codegen id : 11]
Output [5]: [page_sk#28, sales_price#30, profit#31, return_amt#32, net_loss#33]
Input [7]: [page_sk#28, date_sk#29, sales_price#30, profit#31, return_amt#32, net_loss#33, d_date_sk#103]

(38) Scan parquet tpcds_1.catalog_page
Output [2]: [cp_catalog_page_sk#221, cp_catalog_page_id#222]
Batched: true
Location: InMemoryFileIndex [file:/home/daily/spark_tune/environment/spark-3.1.1/benchmarks/tpcds/data/1/catalog_page]
PushedFilters: [IsNotNull(cp_catalog_page_sk)]
ReadSchema: struct<cp_catalog_page_sk:int,cp_catalog_page_id:string>

(39) ColumnarToRow [codegen id : 10]
Input [2]: [cp_catalog_page_sk#221, cp_catalog_page_id#222]

(40) Filter [codegen id : 10]
Input [2]: [cp_catalog_page_sk#221, cp_catalog_page_id#222]
Condition : isnotnull(cp_catalog_page_sk#221)

(41) BroadcastExchange
Input [2]: [cp_catalog_page_sk#221, cp_catalog_page_id#222]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#410]

(42) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [page_sk#28]
Right keys [1]: [cp_catalog_page_sk#221]
Join condition: None

(43) Project [codegen id : 11]
Output [5]: [sales_price#30, profit#31, return_amt#32, net_loss#33, cp_catalog_page_id#222]
Input [7]: [page_sk#28, sales_price#30, profit#31, return_amt#32, net_loss#33, cp_catalog_page_sk#221, cp_catalog_page_id#222]

(44) HashAggregate [codegen id : 11]
Input [5]: [sales_price#30, profit#31, return_amt#32, net_loss#33, cp_catalog_page_id#222]
Keys [1]: [cp_catalog_page_id#222]
Functions [4]: [partial_sum(UnscaledValue(sales_price#30)), partial_sum(UnscaledValue(return_amt#32)), partial_sum(UnscaledValue(profit#31)), partial_sum(UnscaledValue(net_loss#33))]
Aggregate Attributes [4]: [sum#365L, sum#366L, sum#367L, sum#368L]
Results [5]: [cp_catalog_page_id#222, sum#369L, sum#370L, sum#371L, sum#372L]

(45) Exchange
Input [5]: [cp_catalog_page_id#222, sum#369L, sum#370L, sum#371L, sum#372L]
Arguments: hashpartitioning(cp_catalog_page_id#222, 200), ENSURE_REQUIREMENTS, [id=#498]

(46) HashAggregate [codegen id : 12]
Input [5]: [cp_catalog_page_id#222, sum#369L, sum#370L, sum#371L, sum#372L]
Keys [1]: [cp_catalog_page_id#222]
Functions [4]: [sum(UnscaledValue(sales_price#30)), sum(UnscaledValue(return_amt#32)), sum(UnscaledValue(profit#31)), sum(UnscaledValue(net_loss#33))]
Aggregate Attributes [4]: [sum(UnscaledValue(sales_price#30))#318L, sum(UnscaledValue(return_amt#32))#320L, sum(UnscaledValue(profit#31))#319L, sum(UnscaledValue(net_loss#33))#321L]
Results [5]: [MakeDecimal(sum(UnscaledValue(sales_price#30))#318L,17,2) AS sales#40, MakeDecimal(sum(UnscaledValue(return_amt#32))#320L,17,2) AS RETURNS#42, CheckOverflow((promote_precision(cast(MakeDecimal(sum(UnscaledValue(profit#31))#319L,17,2) as decimal(18,2))) - promote_precision(cast(MakeDecimal(sum(UnscaledValue(net_loss#33))#321L,17,2) as decimal(18,2)))), DecimalType(18,2), true) AS profit#5, catalog channel AS channel#341, concat(catalog_page, cp_catalog_page_id#222) AS id#342]

(47) Scan parquet tpcds_1.web_sales
Output [4]: [ws_sold_date_sk#230, ws_web_site_sk#243, ws_ext_sales_price#253, ws_net_profit#263]
Batched: true
Location: InMemoryFileIndex [file:/home/daily/spark_tune/environment/spark-3.1.1/benchmarks/tpcds/data/1/web_sales]
PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_web_site_sk)]
ReadSchema: struct<ws_sold_date_sk:int,ws_web_site_sk:int,ws_ext_sales_price:decimal(7,2),ws_net_profit:decimal(7,2)>

(48) ColumnarToRow [codegen id : 13]
Input [4]: [ws_sold_date_sk#230, ws_web_site_sk#243, ws_ext_sales_price#253, ws_net_profit#263]

(49) Filter [codegen id : 13]
Input [4]: [ws_sold_date_sk#230, ws_web_site_sk#243, ws_ext_sales_price#253, ws_net_profit#263]
Condition : (isnotnull(ws_sold_date_sk#230) AND isnotnull(ws_web_site_sk#243))

(50) Project [codegen id : 13]
Output [6]: [ws_web_site_sk#243 AS wsr_web_site_sk#44, ws_sold_date_sk#230 AS date_sk#45, ws_ext_sales_price#253 AS sales_price#46, ws_net_profit#263 AS profit#47, 0.00 AS return_amt#48, 0.00 AS net_loss#49]
Input [4]: [ws_sold_date_sk#230, ws_web_site_sk#243, ws_ext_sales_price#253, ws_net_profit#263]

(51) Scan parquet tpcds_1.web_returns
Output [5]: [wr_returned_date_sk#264, wr_item_sk#266, wr_order_number#277, wr_return_amt#279, wr_net_loss#287]
Batched: true
Location: InMemoryFileIndex [file:/home/daily/spark_tune/environment/spark-3.1.1/benchmarks/tpcds/data/1/web_returns]
PushedFilters: [IsNotNull(wr_returned_date_sk)]
ReadSchema: struct<wr_returned_date_sk:int,wr_item_sk:int,wr_order_number:int,wr_return_amt:decimal(7,2),wr_net_loss:decimal(7,2)>

(52) ColumnarToRow [codegen id : 14]
Input [5]: [wr_returned_date_sk#264, wr_item_sk#266, wr_order_number#277, wr_return_amt#279, wr_net_loss#287]

(53) Filter [codegen id : 14]
Input [5]: [wr_returned_date_sk#264, wr_item_sk#266, wr_order_number#277, wr_return_amt#279, wr_net_loss#287]
Condition : isnotnull(wr_returned_date_sk#264)

(54) BroadcastExchange
Input [5]: [wr_returned_date_sk#264, wr_item_sk#266, wr_order_number#277, wr_return_amt#279, wr_net_loss#287]
Arguments: HashedRelationBroadcastMode(List((shiftleft(cast(input[1, int, true] as bigint), 32) | (cast(input[2, int, true] as bigint) & 4294967295))),false), [id=#429]

(55) Scan parquet tpcds_1.web_sales
Output [3]: [ws_item_sk#233, ws_web_site_sk#243, ws_order_number#247]
Batched: true
Location: InMemoryFileIndex [file:/home/daily/spark_tune/environment/spark-3.1.1/benchmarks/tpcds/data/1/web_sales]
PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_order_number), IsNotNull(ws_web_site_sk)]
ReadSchema: struct<ws_item_sk:int,ws_web_site_sk:int,ws_order_number:int>

(56) ColumnarToRow
Input [3]: [ws_item_sk#233, ws_web_site_sk#243, ws_order_number#247]

(57) Filter
Input [3]: [ws_item_sk#233, ws_web_site_sk#243, ws_order_number#247]
Condition : ((isnotnull(ws_item_sk#233) AND isnotnull(ws_order_number#247)) AND isnotnull(ws_web_site_sk#243))

(58) BroadcastHashJoin [codegen id : 15]
Left keys [2]: [wr_item_sk#266, wr_order_number#277]
Right keys [2]: [ws_item_sk#233, ws_order_number#247]
Join condition: None

(59) Project [codegen id : 15]
Output [6]: [ws_web_site_sk#243 AS wsr_web_site_sk#50, wr_returned_date_sk#264 AS date_sk#51, 0.00 AS sales_price#52, 0.00 AS profit#53, wr_return_amt#279 AS return_amt#54, wr_net_loss#287 AS net_loss#55]
Input [8]: [wr_returned_date_sk#264, wr_item_sk#266, wr_order_number#277, wr_return_amt#279, wr_net_loss#287, ws_item_sk#233, ws_web_site_sk#243, ws_order_number#247]

(60) Union

(61) ReusedExchange [Reuses operator id: 14]
Output [1]: [d_date_sk#103]

(62) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [date_sk#45]
Right keys [1]: [d_date_sk#103]
Join condition: None

(63) Project [codegen id : 18]
Output [5]: [wsr_web_site_sk#44, sales_price#46, profit#47, return_amt#48, net_loss#49]
Input [7]: [wsr_web_site_sk#44, date_sk#45, sales_price#46, profit#47, return_amt#48, net_loss#49, d_date_sk#103]

(64) Scan parquet tpcds_1.web_site
Output [2]: [web_site_sk#288, web_site_id#289]
Batched: true
Location: InMemoryFileIndex [file:/home/daily/spark_tune/environment/spark-3.1.1/benchmarks/tpcds/data/1/web_site]
PushedFilters: [IsNotNull(web_site_sk)]
ReadSchema: struct<web_site_sk:int,web_site_id:string>

(65) ColumnarToRow [codegen id : 17]
Input [2]: [web_site_sk#288, web_site_id#289]

(66) Filter [codegen id : 17]
Input [2]: [web_site_sk#288, web_site_id#289]
Condition : isnotnull(web_site_sk#288)

(67) BroadcastExchange
Input [2]: [web_site_sk#288, web_site_id#289]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#452]

(68) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [wsr_web_site_sk#44]
Right keys [1]: [web_site_sk#288]
Join condition: None

(69) Project [codegen id : 18]
Output [5]: [sales_price#46, profit#47, return_amt#48, net_loss#49, web_site_id#289]
Input [7]: [wsr_web_site_sk#44, sales_price#46, profit#47, return_amt#48, net_loss#49, web_site_sk#288, web_site_id#289]

(70) HashAggregate [codegen id : 18]
Input [5]: [sales_price#46, profit#47, return_amt#48, net_loss#49, web_site_id#289]
Keys [1]: [web_site_id#289]
Functions [4]: [partial_sum(UnscaledValue(sales_price#46)), partial_sum(UnscaledValue(return_amt#48)), partial_sum(UnscaledValue(profit#47)), partial_sum(UnscaledValue(net_loss#49))]
Aggregate Attributes [4]: [sum#373L, sum#374L, sum#375L, sum#376L]
Results [5]: [web_site_id#289, sum#377L, sum#378L, sum#379L, sum#380L]

(71) Exchange
Input [5]: [web_site_id#289, sum#377L, sum#378L, sum#379L, sum#380L]
Arguments: hashpartitioning(web_site_id#289, 200), ENSURE_REQUIREMENTS, [id=#519]

(72) HashAggregate [codegen id : 19]
Input [5]: [web_site_id#289, sum#377L, sum#378L, sum#379L, sum#380L]
Keys [1]: [web_site_id#289]
Functions [4]: [sum(UnscaledValue(sales_price#46)), sum(UnscaledValue(return_amt#48)), sum(UnscaledValue(profit#47)), sum(UnscaledValue(net_loss#49))]
Aggregate Attributes [4]: [sum(UnscaledValue(sales_price#46))#322L, sum(UnscaledValue(return_amt#48))#324L, sum(UnscaledValue(profit#47))#323L, sum(UnscaledValue(net_loss#49))#325L]
Results [5]: [MakeDecimal(sum(UnscaledValue(sales_price#46))#322L,17,2) AS sales#56, MakeDecimal(sum(UnscaledValue(return_amt#48))#324L,17,2) AS RETURNS#58, CheckOverflow((promote_precision(cast(MakeDecimal(sum(UnscaledValue(profit#47))#323L,17,2) as decimal(18,2))) - promote_precision(cast(MakeDecimal(sum(UnscaledValue(net_loss#49))#325L,17,2) as decimal(18,2)))), DecimalType(18,2), true) AS profit#8, web channel AS channel#343, concat(web_site, web_site_id#289) AS id#344]

(73) Union

(74) Expand [codegen id : 20]
Input [5]: [sales#24, RETURNS#26, profit#2, channel#329, id#330]
Arguments: [List(sales#24, returns#26, profit#2, channel#329, id#330, 0), List(sales#24, returns#26, profit#2, channel#329, null, 1), List(sales#24, returns#26, profit#2, null, null, 3)], [sales#24, returns#26, profit#2, channel#332, id#333, spark_grouping_id#331L]

(75) HashAggregate [codegen id : 20]
Input [6]: [sales#24, returns#26, profit#2, channel#332, id#333, spark_grouping_id#331L]
Keys [3]: [channel#332, id#333, spark_grouping_id#331L]
Functions [3]: [partial_sum(sales#24), partial_sum(returns#26), partial_sum(profit#2)]
Aggregate Attributes [6]: [sum#345, isEmpty#346, sum#347, isEmpty#348, sum#349, isEmpty#350]
Results [9]: [channel#332, id#333, spark_grouping_id#331L, sum#351, isEmpty#352, sum#353, isEmpty#354, sum#355, isEmpty#356]

(76) Exchange
Input [9]: [channel#332, id#333, spark_grouping_id#331L, sum#351, isEmpty#352, sum#353, isEmpty#354, sum#355, isEmpty#356]
Arguments: hashpartitioning(channel#332, id#333, spark_grouping_id#331L, 200), ENSURE_REQUIREMENTS, [id=#528]

(77) HashAggregate [codegen id : 21]
Input [9]: [channel#332, id#333, spark_grouping_id#331L, sum#351, isEmpty#352, sum#353, isEmpty#354, sum#355, isEmpty#356]
Keys [3]: [channel#332, id#333, spark_grouping_id#331L]
Functions [3]: [sum(sales#24), sum(returns#26), sum(profit#2)]
Aggregate Attributes [3]: [sum(sales#24)#326, sum(returns#26)#327, sum(profit#2)#328]
Results [5]: [channel#332, id#333, sum(sales#24)#326 AS sales#9, sum(returns#26)#327 AS returns#10, sum(profit#2)#328 AS profit#11]

(78) TakeOrderedAndProject
Input [5]: [channel#332, id#333, sales#9, returns#10, profit#11]
Arguments: 100, [channel#332 ASC NULLS FIRST, id#333 ASC NULLS FIRST], [channel#332, id#333, sales#9, returns#10, profit#11]


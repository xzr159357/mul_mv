1,"select info_type.id AS id, info_type.info AS info, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'top 250 rank') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv1 as select info_type.id AS id, info_type.info AS info, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'top 250 rank') And (movie_info_idx.info_type_id = info_type.id)"
2,"select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_type, movie_companies
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%')  And  (((movie_companies.note like '%(co-production)%')) Or ((movie_companies.note like '%(presents)%')))","create materialized view if not exists mv2 as select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_type, movie_companies
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%')  And  (((movie_companies.note like '%(co-production)%')) Or ((movie_companies.note like '%(presents)%')))"
3,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_type, info_type, movie_companies, movie_info_idx
 where (company_type.kind = 'production companies') And (info_type.info = 'top 250 rank') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%')  And  (((movie_companies.note like '%(co-production)%')) Or ((movie_companies.note like '%(presents)%'))) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_companies.movie_id)","create materialized view if not exists mv3 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_type, info_type, movie_companies, movie_info_idx
 where (company_type.kind = 'production companies') And (info_type.info = 'top 250 rank') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%')  And  (((movie_companies.note like '%(co-production)%')) Or ((movie_companies.note like '%(presents)%'))) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_companies.movie_id)"
4,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
from company_type, info_type, movie_companies, movie_info_idx, title
 where (company_type.kind = 'production companies') And (info_type.info = 'top 250 rank') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = title.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%')  And  (((movie_companies.note like '%(co-production)%')) Or ((movie_companies.note like '%(presents)%'))) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_companies.movie_id) And (title.id = movie_companies.movie_id)","create materialized view if not exists mv4 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
from company_type, info_type, movie_companies, movie_info_idx, title
 where (company_type.kind = 'production companies') And (info_type.info = 'top 250 rank') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = title.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%')  And  (((movie_companies.note like '%(co-production)%')) Or ((movie_companies.note like '%(presents)%'))) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_companies.movie_id) And (title.id = movie_companies.movie_id)"
5,"select info_type.id AS id, info_type.info AS info, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'bottom 10 rank') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv5 as select info_type.id AS id, info_type.info AS info, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'bottom 10 rank') And (movie_info_idx.info_type_id = info_type.id)"
6,"select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_type, movie_companies
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%')","create materialized view if not exists mv6 as select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_type, movie_companies
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%')"
7,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_type, info_type, movie_companies, movie_info_idx
 where (company_type.kind = 'production companies') And (info_type.info = 'bottom 10 rank') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_companies.movie_id)","create materialized view if not exists mv7 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_type, info_type, movie_companies, movie_info_idx
 where (company_type.kind = 'production companies') And (info_type.info = 'bottom 10 rank') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_companies.movie_id)"
8,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
from company_type, info_type, movie_companies, movie_info_idx, title
 where (company_type.kind = 'production companies') And (info_type.info = 'bottom 10 rank') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = title.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_companies.movie_id) And (title.id = movie_companies.movie_id)","create materialized view if not exists mv8 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
from company_type, info_type, movie_companies, movie_info_idx, title
 where (company_type.kind = 'production companies') And (info_type.info = 'bottom 10 rank') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = title.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_companies.movie_id) And (title.id = movie_companies.movie_id)"
9,"select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_type, movie_companies
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%')  And  (movie_companies.note like '%(co-production)%')","create materialized view if not exists mv9 as select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_type, movie_companies
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%')  And  (movie_companies.note like '%(co-production)%')"
10,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_type, info_type, movie_companies, movie_info_idx
 where (company_type.kind = 'production companies') And (info_type.info = 'top 250 rank') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%')  And  (movie_companies.note like '%(co-production)%') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_companies.movie_id)","create materialized view if not exists mv10 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_type, info_type, movie_companies, movie_info_idx
 where (company_type.kind = 'production companies') And (info_type.info = 'top 250 rank') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%')  And  (movie_companies.note like '%(co-production)%') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_companies.movie_id)"
11,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
from company_type, info_type, movie_companies, movie_info_idx, title
 where (company_type.kind = 'production companies') And (info_type.info = 'top 250 rank') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = title.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%')  And  (movie_companies.note like '%(co-production)%') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_companies.movie_id) And (title.id = movie_companies.movie_id)","create materialized view if not exists mv11 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
from company_type, info_type, movie_companies, movie_info_idx, title
 where (company_type.kind = 'production companies') And (info_type.info = 'top 250 rank') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = title.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%')  And  (movie_companies.note like '%(co-production)%') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_companies.movie_id) And (title.id = movie_companies.movie_id)"
12,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
from keyword, movie_keyword
 where (keyword.keyword = 'character-name-in-title') And (movie_keyword.keyword_id = keyword.id)","create materialized view if not exists mv12 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
from keyword, movie_keyword
 where (keyword.keyword = 'character-name-in-title') And (movie_keyword.keyword_id = keyword.id)"
13,"select company_name.country_code AS country_code, company_name.id AS id, movie_companies.movie_id AS movie_id
from company_name, movie_companies
 where (company_name.country_code = '[de]') And (movie_companies.company_id = company_name.id)","create materialized view if not exists mv13 as select company_name.country_code AS country_code, company_name.id AS id, movie_companies.movie_id AS movie_id
from company_name, movie_companies
 where (company_name.country_code = '[de]') And (movie_companies.company_id = company_name.id)"
14,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id
from company_name, keyword, movie_companies, movie_keyword
 where (company_name.country_code = '[de]') And (keyword.keyword = 'character-name-in-title') And (movie_companies.company_id = company_name.id) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id)","create materialized view if not exists mv14 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id
from company_name, keyword, movie_companies, movie_keyword
 where (company_name.country_code = '[de]') And (keyword.keyword = 'character-name-in-title') And (movie_companies.company_id = company_name.id) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id)"
15,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id, title.title AS title
from company_name, keyword, movie_companies, movie_keyword, title
 where (company_name.country_code = '[de]') And (keyword.keyword = 'character-name-in-title') And (movie_companies.company_id = company_name.id) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv15 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id, title.title AS title
from company_name, keyword, movie_companies, movie_keyword, title
 where (company_name.country_code = '[de]') And (keyword.keyword = 'character-name-in-title') And (movie_companies.company_id = company_name.id) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id) And (title.id = movie_keyword.movie_id)"
16,"select company_name.country_code AS country_code, company_name.id AS id, company_name.name AS name, movie_companies.movie_id AS movie_id
from company_name, movie_companies
 where (company_name.country_code = '[nl]') And (movie_companies.company_id = company_name.id)","create materialized view if not exists mv16 as select company_name.country_code AS country_code, company_name.id AS id, company_name.name AS name, movie_companies.movie_id AS movie_id
from company_name, movie_companies
 where (company_name.country_code = '[nl]') And (movie_companies.company_id = company_name.id)"
17,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id
from company_name, keyword, movie_companies, movie_keyword
 where (company_name.country_code = '[nl]') And (keyword.keyword = 'character-name-in-title') And (movie_companies.company_id = company_name.id) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id)","create materialized view if not exists mv17 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id
from company_name, keyword, movie_companies, movie_keyword
 where (company_name.country_code = '[nl]') And (keyword.keyword = 'character-name-in-title') And (movie_companies.company_id = company_name.id) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id)"
18,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id, title.title AS title
from company_name, keyword, movie_companies, movie_keyword, title
 where (company_name.country_code = '[nl]') And (keyword.keyword = 'character-name-in-title') And (movie_companies.company_id = company_name.id) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv18 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id, title.title AS title
from company_name, keyword, movie_companies, movie_keyword, title
 where (company_name.country_code = '[nl]') And (keyword.keyword = 'character-name-in-title') And (movie_companies.company_id = company_name.id) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id) And (title.id = movie_keyword.movie_id)"
19,"select company_name.country_code AS country_code, company_name.id AS id, movie_companies.movie_id AS movie_id
from company_name, movie_companies
 where (company_name.country_code = '[sm]') And (movie_companies.company_id = company_name.id)","create materialized view if not exists mv19 as select company_name.country_code AS country_code, company_name.id AS id, movie_companies.movie_id AS movie_id
from company_name, movie_companies
 where (company_name.country_code = '[sm]') And (movie_companies.company_id = company_name.id)"
20,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id
from company_name, keyword, movie_companies, movie_keyword
 where (company_name.country_code = '[sm]') And (keyword.keyword = 'character-name-in-title') And (movie_companies.company_id = company_name.id) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id)","create materialized view if not exists mv20 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id
from company_name, keyword, movie_companies, movie_keyword
 where (company_name.country_code = '[sm]') And (keyword.keyword = 'character-name-in-title') And (movie_companies.company_id = company_name.id) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id)"
21,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id, title.title AS title
from company_name, keyword, movie_companies, movie_keyword, title
 where (company_name.country_code = '[sm]') And (keyword.keyword = 'character-name-in-title') And (movie_companies.company_id = company_name.id) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv21 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id, title.title AS title
from company_name, keyword, movie_companies, movie_keyword, title
 where (company_name.country_code = '[sm]') And (keyword.keyword = 'character-name-in-title') And (movie_companies.company_id = company_name.id) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id) And (title.id = movie_keyword.movie_id)"
22,"select company_name.country_code AS country_code, company_name.id AS id, company_name.name AS name, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id
from company_name, movie_companies
 where (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id)","create materialized view if not exists mv22 as select company_name.country_code AS country_code, company_name.id AS id, company_name.name AS name, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id
from company_name, movie_companies
 where (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id)"
23,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id
from company_name, keyword, movie_companies, movie_keyword
 where (company_name.country_code = '[us]') And (keyword.keyword = 'character-name-in-title') And (movie_companies.company_id = company_name.id) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id)","create materialized view if not exists mv23 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id
from company_name, keyword, movie_companies, movie_keyword
 where (company_name.country_code = '[us]') And (keyword.keyword = 'character-name-in-title') And (movie_companies.company_id = company_name.id) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id)"
24,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id, title.episode_nr AS episode_nr, title.title AS title
from company_name, keyword, movie_companies, movie_keyword, title
 where (company_name.country_code = '[us]') And (keyword.keyword = 'character-name-in-title') And (movie_companies.company_id = company_name.id) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv24 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id, title.episode_nr AS episode_nr, title.title AS title
from company_name, keyword, movie_companies, movie_keyword, title
 where (company_name.country_code = '[us]') And (keyword.keyword = 'character-name-in-title') And (movie_companies.company_id = company_name.id) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id) And (title.id = movie_keyword.movie_id)"
25,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
from keyword, movie_keyword
 where (keyword.keyword like '%sequel%') And (movie_keyword.keyword_id = keyword.id)","create materialized view if not exists mv25 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
from keyword, movie_keyword
 where (keyword.keyword like '%sequel%') And (movie_keyword.keyword_id = keyword.id)"
26,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from keyword, movie_keyword, title
 where (keyword.keyword like '%sequel%') And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv26 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from keyword, movie_keyword, title
 where (keyword.keyword like '%sequel%') And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id)"
27,"select keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from keyword, movie_info, movie_keyword, title
 where (keyword.keyword like '%sequel%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')) And (movie_info.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv27 as select keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from keyword, movie_info, movie_keyword, title
 where (keyword.keyword like '%sequel%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')) And (movie_info.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id)"
28,"select keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.movie_id AS movie_id
from keyword, movie_info, movie_keyword
 where (keyword.keyword like '%sequel%') And (movie_info.info = 'Bulgaria') And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id)","create materialized view if not exists mv28 as select keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.movie_id AS movie_id
from keyword, movie_info, movie_keyword
 where (keyword.keyword like '%sequel%') And (movie_info.info = 'Bulgaria') And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id)"
29,"select keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from keyword, movie_info, movie_keyword, title
 where (keyword.keyword like '%sequel%') And (movie_info.info = 'Bulgaria') And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv29 as select keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from keyword, movie_info, movie_keyword, title
 where (keyword.keyword like '%sequel%') And (movie_info.info = 'Bulgaria') And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id)"
30,"select keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from keyword, movie_info, movie_keyword, title
 where (keyword.keyword like '%sequel%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv30 as select keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from keyword, movie_info, movie_keyword, title
 where (keyword.keyword like '%sequel%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id)"
31,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'rating') And (movie_info_idx.info > '5.0') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv31 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'rating') And (movie_info_idx.info > '5.0') And (movie_info_idx.info_type_id = info_type.id)"
32,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id
from info_type, keyword, movie_info_idx, movie_keyword
 where (info_type.info = 'rating') And (keyword.keyword like '%sequel%') And (movie_info_idx.info > '5.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id)","create materialized view if not exists mv32 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id
from info_type, keyword, movie_info_idx, movie_keyword
 where (info_type.info = 'rating') And (keyword.keyword like '%sequel%') And (movie_info_idx.info > '5.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id)"
33,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from info_type, keyword, movie_info_idx, movie_keyword, title
 where (info_type.info = 'rating') And (keyword.keyword like '%sequel%') And (movie_info_idx.info > '5.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv33 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from info_type, keyword, movie_info_idx, movie_keyword, title
 where (info_type.info = 'rating') And (keyword.keyword like '%sequel%') And (movie_info_idx.info > '5.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id)"
34,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'rating') And (movie_info_idx.info > '9.0') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv34 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'rating') And (movie_info_idx.info > '9.0') And (movie_info_idx.info_type_id = info_type.id)"
35,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id, movie_keyword.keyword_id AS keyword_id
from info_type, movie_info_idx, movie_keyword
 where (info_type.info = 'rating') And (movie_info_idx.info > '9.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = movie_info_idx.movie_id)","create materialized view if not exists mv35 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id, movie_keyword.keyword_id AS keyword_id
from info_type, movie_info_idx, movie_keyword
 where (info_type.info = 'rating') And (movie_info_idx.info > '9.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = movie_info_idx.movie_id)"
36,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id
from info_type, keyword, movie_info_idx, movie_keyword
 where (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (movie_info_idx.info > '9.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = movie_info_idx.movie_id)","create materialized view if not exists mv36 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id
from info_type, keyword, movie_info_idx, movie_keyword
 where (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (movie_info_idx.info > '9.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = movie_info_idx.movie_id)"
37,"select info_type.id AS id, info_type.info AS info_type_info_1, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_3, movie_info_idx.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from info_type, keyword, movie_info_idx, movie_keyword, title
 where (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (movie_info_idx.info > '9.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv37 as select info_type.id AS id, info_type.info AS info_type_info_1, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_3, movie_info_idx.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from info_type, keyword, movie_info_idx, movie_keyword, title
 where (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (movie_info_idx.info > '9.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id)"
38,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'rating') And (movie_info_idx.info > '2.0') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv38 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'rating') And (movie_info_idx.info > '2.0') And (movie_info_idx.info_type_id = info_type.id)"
39,"select info_type.id AS id, info_type.info AS info_type_info_1, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_3, movie_info_idx.movie_id AS movie_id
from info_type, keyword, movie_info_idx, movie_keyword
 where (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (keyword.keyword like '%sequel%') And (movie_info_idx.info > '2.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_info_idx.movie_id)","create materialized view if not exists mv39 as select info_type.id AS id, info_type.info AS info_type_info_1, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_3, movie_info_idx.movie_id AS movie_id
from info_type, keyword, movie_info_idx, movie_keyword
 where (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (keyword.keyword like '%sequel%') And (movie_info_idx.info > '2.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_info_idx.movie_id)"
40,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from info_type, keyword, movie_info_idx, movie_keyword, title
 where (info_type.info = 'rating') And (keyword.keyword like '%sequel%') And (movie_info_idx.info > '2.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv40 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from info_type, keyword, movie_info_idx, movie_keyword, title
 where (info_type.info = 'rating') And (keyword.keyword like '%sequel%') And (movie_info_idx.info > '2.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id)"
41,"select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_type, movie_companies
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note like '%(theatrical)%')  And  (movie_companies.note like '%(France)%')","create materialized view if not exists mv41 as select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_type, movie_companies
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note like '%(theatrical)%')  And  (movie_companies.note like '%(France)%')"
42,"select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, movie_info.info_type_id AS info_type_id
from company_type, movie_companies, movie_info
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note like '%(theatrical)%')  And  (movie_companies.note like '%(France)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')) And (movie_info.movie_id = movie_companies.movie_id)","create materialized view if not exists mv42 as select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, movie_info.info_type_id AS info_type_id
from company_type, movie_companies, movie_info
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note like '%(theatrical)%')  And  (movie_companies.note like '%(France)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')) And (movie_info.movie_id = movie_companies.movie_id)"
43,"select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, movie_info.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from company_type, movie_companies, movie_info, title
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note like '%(theatrical)%')  And  (movie_companies.note like '%(France)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')) And (movie_info.movie_id = movie_companies.movie_id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv43 as select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, movie_info.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from company_type, movie_companies, movie_info, title
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note like '%(theatrical)%')  And  (movie_companies.note like '%(France)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')) And (movie_info.movie_id = movie_companies.movie_id) And (title.id = movie_info.movie_id)"
44,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.production_year AS production_year, title.title AS title
from company_type, info_type, movie_companies, movie_info, title
 where (company_type.kind = 'production companies') And (info_type.id = movie_info.info_type_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note like '%(theatrical)%')  And  (movie_companies.note like '%(France)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')) And (movie_info.movie_id = movie_companies.movie_id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv44 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.production_year AS production_year, title.title AS title
from company_type, info_type, movie_companies, movie_info, title
 where (company_type.kind = 'production companies') And (info_type.id = movie_info.info_type_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note like '%(theatrical)%')  And  (movie_companies.note like '%(France)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')) And (movie_info.movie_id = movie_companies.movie_id) And (title.id = movie_info.movie_id)"
45,"select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_type, movie_companies
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note like '%(VHS)%')  And  (movie_companies.note like '%(USA)%')  And  (movie_companies.note like '%(1994)%')","create materialized view if not exists mv45 as select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_type, movie_companies
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note like '%(VHS)%')  And  (movie_companies.note like '%(USA)%')  And  (movie_companies.note like '%(1994)%')"
46,"select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, movie_info.info_type_id AS info_type_id
from company_type, movie_companies, movie_info
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note like '%(VHS)%')  And  (movie_companies.note like '%(USA)%')  And  (movie_companies.note like '%(1994)%') And (movie_info.info in ('USA', 'America')) And (movie_info.movie_id = movie_companies.movie_id)","create materialized view if not exists mv46 as select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, movie_info.info_type_id AS info_type_id
from company_type, movie_companies, movie_info
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note like '%(VHS)%')  And  (movie_companies.note like '%(USA)%')  And  (movie_companies.note like '%(1994)%') And (movie_info.info in ('USA', 'America')) And (movie_info.movie_id = movie_companies.movie_id)"
47,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info
from company_type, info_type, movie_companies, movie_info
 where (company_type.kind = 'production companies') And (info_type.id = movie_info.info_type_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note like '%(VHS)%')  And  (movie_companies.note like '%(USA)%')  And  (movie_companies.note like '%(1994)%') And (movie_info.info in ('USA', 'America')) And (movie_info.movie_id = movie_companies.movie_id)","create materialized view if not exists mv47 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info
from company_type, info_type, movie_companies, movie_info
 where (company_type.kind = 'production companies') And (info_type.id = movie_info.info_type_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note like '%(VHS)%')  And  (movie_companies.note like '%(USA)%')  And  (movie_companies.note like '%(1994)%') And (movie_info.info in ('USA', 'America')) And (movie_info.movie_id = movie_companies.movie_id)"
48,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.production_year AS production_year, title.title AS title
from company_type, info_type, movie_companies, movie_info, title
 where (company_type.kind = 'production companies') And (info_type.id = movie_info.info_type_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note like '%(VHS)%')  And  (movie_companies.note like '%(USA)%')  And  (movie_companies.note like '%(1994)%') And (movie_info.info in ('USA', 'America')) And (movie_info.movie_id = movie_companies.movie_id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv48 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.production_year AS production_year, title.title AS title
from company_type, info_type, movie_companies, movie_info, title
 where (company_type.kind = 'production companies') And (info_type.id = movie_info.info_type_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note like '%(VHS)%')  And  (movie_companies.note like '%(USA)%')  And  (movie_companies.note like '%(1994)%') And (movie_info.info in ('USA', 'America')) And (movie_info.movie_id = movie_companies.movie_id) And (title.id = movie_info.movie_id)"
49,"select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_type, movie_companies
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(TV)%')  And  (movie_companies.note like '%(USA)%')","create materialized view if not exists mv49 as select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_type, movie_companies
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(TV)%')  And  (movie_companies.note like '%(USA)%')"
50,"select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, movie_info.info_type_id AS info_type_id
from company_type, movie_companies, movie_info
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(TV)%')  And  (movie_companies.note like '%(USA)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = movie_companies.movie_id)","create materialized view if not exists mv50 as select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, movie_info.info_type_id AS info_type_id
from company_type, movie_companies, movie_info
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(TV)%')  And  (movie_companies.note like '%(USA)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = movie_companies.movie_id)"
51,"select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, movie_info.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from company_type, movie_companies, movie_info, title
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(TV)%')  And  (movie_companies.note like '%(USA)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = movie_companies.movie_id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv51 as select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, movie_info.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from company_type, movie_companies, movie_info, title
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(TV)%')  And  (movie_companies.note like '%(USA)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = movie_companies.movie_id) And (title.id = movie_info.movie_id)"
52,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.production_year AS production_year, title.title AS title
from company_type, info_type, movie_companies, movie_info, title
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(TV)%')  And  (movie_companies.note like '%(USA)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_companies.movie_id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv52 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.production_year AS production_year, title.title AS title
from company_type, info_type, movie_companies, movie_info, title
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(TV)%')  And  (movie_companies.note like '%(USA)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_companies.movie_id) And (title.id = movie_info.movie_id)"
53,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, name.name AS name
from cast_info, name
 where (cast_info.person_id = name.id) And (name.name like '%Downey%Robert%')","create materialized view if not exists mv53 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, name.name AS name
from cast_info, name
 where (cast_info.person_id = name.id) And (name.name like '%Downey%Robert%')"
54,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
from keyword, movie_keyword
 where (keyword.keyword = 'marvel-cinematic-universe') And (movie_keyword.keyword_id = keyword.id)","create materialized view if not exists mv54 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
from keyword, movie_keyword
 where (keyword.keyword = 'marvel-cinematic-universe') And (movie_keyword.keyword_id = keyword.id)"
55,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, name.name AS name
from cast_info, keyword, movie_keyword, name
 where (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.person_id = name.id) And (keyword.keyword = 'marvel-cinematic-universe') And (movie_keyword.keyword_id = keyword.id) And (name.name like '%Downey%Robert%')","create materialized view if not exists mv55 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, name.name AS name
from cast_info, keyword, movie_keyword, name
 where (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.person_id = name.id) And (keyword.keyword = 'marvel-cinematic-universe') And (movie_keyword.keyword_id = keyword.id) And (name.name like '%Downey%Robert%')"
56,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, name.name AS name, title.production_year AS production_year, title.title AS title
from cast_info, keyword, movie_keyword, name, title
 where (cast_info.person_id = name.id) And (keyword.keyword = 'marvel-cinematic-universe') And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = title.id) And (name.name like '%Downey%Robert%') And (title.id = cast_info.movie_id)","create materialized view if not exists mv56 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, name.name AS name, title.production_year AS production_year, title.title AS title
from cast_info, keyword, movie_keyword, name, title
 where (cast_info.person_id = name.id) And (keyword.keyword = 'marvel-cinematic-universe') And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = title.id) And (name.name like '%Downey%Robert%') And (title.id = cast_info.movie_id)"
57,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, title.production_year AS production_year, title.title AS title
from cast_info, title
 where (cast_info.movie_id = title.id) And (title.production_year > 2014)","create materialized view if not exists mv57 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, title.production_year AS production_year, title.title AS title
from cast_info, title
 where (cast_info.movie_id = title.id) And (title.production_year > 2014)"
58,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, name.name AS name, title.production_year AS production_year, title.title AS title
from cast_info, name, title
 where (cast_info.movie_id = title.id) And (name.id = cast_info.person_id) And (title.production_year > 2014)","create materialized view if not exists mv58 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, name.name AS name, title.production_year AS production_year, title.title AS title
from cast_info, name, title
 where (cast_info.movie_id = title.id) And (name.id = cast_info.person_id) And (title.production_year > 2014)"
59,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, movie_keyword.keyword_id AS keyword_id, name.name AS name, title.production_year AS production_year, title.title AS title
from cast_info, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.production_year > 2014)","create materialized view if not exists mv59 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, movie_keyword.keyword_id AS keyword_id, name.name AS name, title.production_year AS production_year, title.title AS title
from cast_info, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.production_year > 2014)"
60,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.keyword AS keyword, name.name AS name, title.production_year AS production_year, title.title AS title
from cast_info, keyword, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (keyword.id = movie_keyword.keyword_id) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.production_year > 2014)","create materialized view if not exists mv60 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.keyword AS keyword, name.name AS name, title.production_year AS production_year, title.title AS title
from cast_info, keyword, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (keyword.id = movie_keyword.keyword_id) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.production_year > 2014)"
61,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from keyword, movie_keyword, title
 where (keyword.keyword = 'marvel-cinematic-universe') And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv61 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from keyword, movie_keyword, title
 where (keyword.keyword = 'marvel-cinematic-universe') And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id)"
62,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, title.production_year AS production_year, title.title AS title
from cast_info, keyword, movie_keyword, title
 where (cast_info.movie_id = title.id) And (keyword.keyword = 'marvel-cinematic-universe') And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv62 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, title.production_year AS production_year, title.title AS title
from cast_info, keyword, movie_keyword, title
 where (cast_info.movie_id = title.id) And (keyword.keyword = 'marvel-cinematic-universe') And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id)"
63,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, name.name AS name, title.production_year AS production_year, title.title AS title
from cast_info, keyword, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (keyword.keyword = 'marvel-cinematic-universe') And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv63 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, name.name AS name, title.production_year AS production_year, title.title AS title
from cast_info, keyword, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (keyword.keyword = 'marvel-cinematic-universe') And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_keyword.movie_id)"
64,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
from keyword, movie_keyword
 where (keyword.keyword in ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')) And (movie_keyword.keyword_id = keyword.id)","create materialized view if not exists mv64 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
from keyword, movie_keyword
 where (keyword.keyword in ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')) And (movie_keyword.keyword_id = keyword.id)"
65,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, name.name AS name, title.production_year AS production_year, title.title AS title
from cast_info, name, title
 where (cast_info.person_id = name.id) And (name.name like '%Downey%Robert%') And (title.id = cast_info.movie_id)","create materialized view if not exists mv65 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, name.name AS name, title.production_year AS production_year, title.title AS title
from cast_info, name, title
 where (cast_info.person_id = name.id) And (name.name like '%Downey%Robert%') And (title.id = cast_info.movie_id)"
66,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, name.name AS name, title.production_year AS production_year, title.title AS title
from cast_info, keyword, movie_keyword, name, title
 where (cast_info.person_id = name.id) And (keyword.keyword in ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = title.id) And (name.name like '%Downey%Robert%') And (title.id = cast_info.movie_id)","create materialized view if not exists mv66 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, name.name AS name, title.production_year AS production_year, title.title AS title
from cast_info, keyword, movie_keyword, name, title
 where (cast_info.person_id = name.id) And (keyword.keyword in ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = title.id) And (name.name like '%Downey%Robert%') And (title.id = cast_info.movie_id)"
67,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, name.name AS name
from cast_info, name
 where (cast_info.person_id = name.id)","create materialized view if not exists mv67 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, name.name AS name
from cast_info, name
 where (cast_info.person_id = name.id)"
68,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from keyword, movie_keyword, title
 where (keyword.keyword in ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')) And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv68 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from keyword, movie_keyword, title
 where (keyword.keyword in ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')) And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id)"
69,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, name.name AS name, title.production_year AS production_year, title.title AS title
from cast_info, keyword, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (keyword.keyword in ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv69 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, name.name AS name, title.production_year AS production_year, title.title AS title
from cast_info, keyword, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (keyword.keyword in ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_keyword.movie_id)"
70,"select info_type.id AS id, info_type.info AS info, person_info.note AS note, person_info.person_id AS person_id
from info_type, person_info
 where (info_type.info = 'mini biography') And (person_info.info_type_id = info_type.id) And (person_info.note = 'Volker Boehm')","create materialized view if not exists mv70 as select info_type.id AS id, info_type.info AS info, person_info.note AS note, person_info.person_id AS person_id
from info_type, person_info
 where (info_type.info = 'mini biography') And (person_info.info_type_id = info_type.id) And (person_info.note = 'Volker Boehm')"
71,"select aka_name.name AS name, aka_name.person_id AS person_id, info_type.id AS id, info_type.info AS info, person_info.note AS note
from aka_name, info_type, person_info
 where (aka_name.name like '%a%') And (aka_name.person_id = person_info.person_id) And (info_type.info = 'mini biography') And (person_info.info_type_id = info_type.id) And (person_info.note = 'Volker Boehm')","create materialized view if not exists mv71 as select aka_name.name AS name, aka_name.person_id AS person_id, info_type.id AS id, info_type.info AS info, person_info.note AS note
from aka_name, info_type, person_info
 where (aka_name.name like '%a%') And (aka_name.person_id = person_info.person_id) And (info_type.info = 'mini biography') And (person_info.info_type_id = info_type.id) And (person_info.note = 'Volker Boehm')"
72,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, info_type.id AS id, info_type.info AS info, name.gender AS gender, name.name AS name_name_5, name.name_pcode_cf AS name_pcode_cf, person_info.note AS note
from aka_name, info_type, name, person_info
 where (aka_name.name like '%a%') And (aka_name.person_id = person_info.person_id) And (info_type.info = 'mini biography') And (name.id = aka_name.person_id) And (person_info.info_type_id = info_type.id) And (person_info.note = 'Volker Boehm')","create materialized view if not exists mv72 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, info_type.id AS id, info_type.info AS info, name.gender AS gender, name.name AS name_name_5, name.name_pcode_cf AS name_pcode_cf, person_info.note AS note
from aka_name, info_type, name, person_info
 where (aka_name.name like '%a%') And (aka_name.person_id = person_info.person_id) And (info_type.info = 'mini biography') And (name.id = aka_name.person_id) And (person_info.info_type_id = info_type.id) And (person_info.note = 'Volker Boehm')"
73,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, info_type.info AS info, name.gender AS gender, name.name AS name_name_5, name.name_pcode_cf AS name_pcode_cf, person_info.info_type_id AS info_type_id, person_info.note AS note
from aka_name, cast_info, info_type, name, person_info
 where (aka_name.name like '%a%') And (aka_name.person_id = person_info.person_id) And (cast_info.person_id = name.id) And (info_type.info = 'mini biography') And (name.id = aka_name.person_id) And (person_info.info_type_id = info_type.id) And (person_info.note = 'Volker Boehm')","create materialized view if not exists mv73 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, info_type.info AS info, name.gender AS gender, name.name AS name_name_5, name.name_pcode_cf AS name_pcode_cf, person_info.info_type_id AS info_type_id, person_info.note AS note
from aka_name, cast_info, info_type, name, person_info
 where (aka_name.name like '%a%') And (aka_name.person_id = person_info.person_id) And (cast_info.person_id = name.id) And (info_type.info = 'mini biography') And (name.id = aka_name.person_id) And (person_info.info_type_id = info_type.id) And (person_info.note = 'Volker Boehm')"
74,"select link_type.id AS id, link_type.link AS link, movie_link.linked_movie_id AS linked_movie_id
from link_type, movie_link
 where (link_type.link = 'features') And (movie_link.link_type_id = link_type.id)","create materialized view if not exists mv74 as select link_type.id AS id, link_type.link AS link, movie_link.linked_movie_id AS linked_movie_id
from link_type, movie_link
 where (link_type.link = 'features') And (movie_link.link_type_id = link_type.id)"
75,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, info_type.info AS info, link_type.id AS id, link_type.link AS link, name.gender AS gender, name.name AS name_name_7, name.name_pcode_cf AS name_pcode_cf, person_info.info_type_id AS info_type_id, person_info.note AS note
from aka_name, cast_info, info_type, link_type, movie_link, name, person_info
 where (aka_name.name like '%a%') And (aka_name.person_id = person_info.person_id) And (cast_info.person_id = name.id) And (info_type.info = 'mini biography') And (link_type.link = 'features') And (movie_link.link_type_id = link_type.id) And (movie_link.linked_movie_id = cast_info.movie_id) And (name.id = aka_name.person_id) And (person_info.info_type_id = info_type.id) And (person_info.note = 'Volker Boehm')","create materialized view if not exists mv75 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, info_type.info AS info, link_type.id AS id, link_type.link AS link, name.gender AS gender, name.name AS name_name_7, name.name_pcode_cf AS name_pcode_cf, person_info.info_type_id AS info_type_id, person_info.note AS note
from aka_name, cast_info, info_type, link_type, movie_link, name, person_info
 where (aka_name.name like '%a%') And (aka_name.person_id = person_info.person_id) And (cast_info.person_id = name.id) And (info_type.info = 'mini biography') And (link_type.link = 'features') And (movie_link.link_type_id = link_type.id) And (movie_link.linked_movie_id = cast_info.movie_id) And (name.id = aka_name.person_id) And (person_info.info_type_id = info_type.id) And (person_info.note = 'Volker Boehm')"
76,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, info_type.info AS info, link_type.id AS link_type_id_4, link_type.link AS link, name.gender AS gender, name.name AS name_name_7, name.name_pcode_cf AS name_pcode_cf, person_info.info_type_id AS info_type_id, person_info.note AS note, title.id AS title_id_11, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, info_type, link_type, movie_link, name, person_info, title
 where (aka_name.name like '%a%') And (aka_name.person_id = person_info.person_id) And (cast_info.person_id = name.id) And (info_type.info = 'mini biography') And (link_type.link = 'features') And (movie_link.link_type_id = link_type.id) And (movie_link.linked_movie_id = cast_info.movie_id) And (name.id = aka_name.person_id) And (person_info.info_type_id = info_type.id) And (person_info.note = 'Volker Boehm') And (title.id = cast_info.movie_id)","create materialized view if not exists mv76 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, info_type.info AS info, link_type.id AS link_type_id_4, link_type.link AS link, name.gender AS gender, name.name AS name_name_7, name.name_pcode_cf AS name_pcode_cf, person_info.info_type_id AS info_type_id, person_info.note AS note, title.id AS title_id_11, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, info_type, link_type, movie_link, name, person_info, title
 where (aka_name.name like '%a%') And (aka_name.person_id = person_info.person_id) And (cast_info.person_id = name.id) And (info_type.info = 'mini biography') And (link_type.link = 'features') And (movie_link.link_type_id = link_type.id) And (movie_link.linked_movie_id = cast_info.movie_id) And (name.id = aka_name.person_id) And (person_info.info_type_id = info_type.id) And (person_info.note = 'Volker Boehm') And (title.id = cast_info.movie_id)"
77,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, info_type.info AS info, name.gender AS gender, name.name AS name_name_5, name.name_pcode_cf AS name_pcode_cf, person_info.info_type_id AS info_type_id, person_info.note AS note, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, info_type, name, person_info, title
 where (aka_name.name like '%a%') And (aka_name.person_id = person_info.person_id) And (cast_info.person_id = name.id) And (info_type.info = 'mini biography') And (name.id = aka_name.person_id) And (person_info.info_type_id = info_type.id) And (person_info.note = 'Volker Boehm') And (title.id = cast_info.movie_id)","create materialized view if not exists mv77 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, info_type.info AS info, name.gender AS gender, name.name AS name_name_5, name.name_pcode_cf AS name_pcode_cf, person_info.info_type_id AS info_type_id, person_info.note AS note, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, info_type, name, person_info, title
 where (aka_name.name like '%a%') And (aka_name.person_id = person_info.person_id) And (cast_info.person_id = name.id) And (info_type.info = 'mini biography') And (name.id = aka_name.person_id) And (person_info.info_type_id = info_type.id) And (person_info.note = 'Volker Boehm') And (title.id = cast_info.movie_id)"
78,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, info_type.info AS info, link_type.id AS id, link_type.link AS link, name.gender AS gender, name.name AS name_name_7, name.name_pcode_cf AS name_pcode_cf, person_info.info_type_id AS info_type_id, person_info.note AS note, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, info_type, link_type, movie_link, name, person_info, title
 where (aka_name.name like '%a%') And (aka_name.person_id = person_info.person_id) And (cast_info.person_id = name.id) And (info_type.info = 'mini biography') And (link_type.link = 'features') And (movie_link.link_type_id = link_type.id) And (movie_link.linked_movie_id = title.id) And (name.id = aka_name.person_id) And (person_info.info_type_id = info_type.id) And (person_info.note = 'Volker Boehm') And (title.id = cast_info.movie_id)","create materialized view if not exists mv78 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, info_type.info AS info, link_type.id AS id, link_type.link AS link, name.gender AS gender, name.name AS name_name_7, name.name_pcode_cf AS name_pcode_cf, person_info.info_type_id AS info_type_id, person_info.note AS note, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, info_type, link_type, movie_link, name, person_info, title
 where (aka_name.name like '%a%') And (aka_name.person_id = person_info.person_id) And (cast_info.person_id = name.id) And (info_type.info = 'mini biography') And (link_type.link = 'features') And (movie_link.link_type_id = link_type.id) And (movie_link.linked_movie_id = title.id) And (name.id = aka_name.person_id) And (person_info.info_type_id = info_type.id) And (person_info.note = 'Volker Boehm') And (title.id = cast_info.movie_id)"
79,"select info_type.id AS id, info_type.info AS info_type_info_1, person_info.info AS person_info_info_2, person_info.note AS note, person_info.person_id AS person_id
from info_type, person_info
 where (info_type.info = 'mini biography') And (person_info.info_type_id = info_type.id) And (person_info.note IS NOT NULL)","create materialized view if not exists mv79 as select info_type.id AS id, info_type.info AS info_type_info_1, person_info.info AS person_info_info_2, person_info.note AS note, person_info.person_id AS person_id
from info_type, person_info
 where (info_type.info = 'mini biography') And (person_info.info_type_id = info_type.id) And (person_info.note IS NOT NULL)"
80,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, name.gender AS gender, name.id AS name_id_3, name.name AS name, name.name_pcode_cf AS name_pcode_cf, person_info.info AS person_info_info_6, person_info.note AS note
from info_type, name, person_info
 where (info_type.info = 'mini biography') And (name.id = person_info.person_id) And (person_info.info_type_id = info_type.id) And (person_info.note IS NOT NULL)","create materialized view if not exists mv80 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, name.gender AS gender, name.id AS name_id_3, name.name AS name, name.name_pcode_cf AS name_pcode_cf, person_info.info AS person_info_info_6, person_info.note AS note
from info_type, name, person_info
 where (info_type.info = 'mini biography') And (name.id = person_info.person_id) And (person_info.info_type_id = info_type.id) And (person_info.note IS NOT NULL)"
81,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_3, name.gender AS gender, name.name AS name, name.name_pcode_cf AS name_pcode_cf, person_info.info AS person_info_info_7, person_info.note AS note
from cast_info, info_type, name, person_info
 where (cast_info.person_id = name.id) And (info_type.info = 'mini biography') And (name.id = person_info.person_id) And (person_info.info_type_id = info_type.id) And (person_info.note IS NOT NULL)","create materialized view if not exists mv81 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_3, name.gender AS gender, name.name AS name, name.name_pcode_cf AS name_pcode_cf, person_info.info AS person_info_info_7, person_info.note AS note
from cast_info, info_type, name, person_info
 where (cast_info.person_id = name.id) And (info_type.info = 'mini biography') And (name.id = person_info.person_id) And (person_info.info_type_id = info_type.id) And (person_info.note IS NOT NULL)"
82,"select link_type.id AS id, link_type.link AS link, movie_link.linked_movie_id AS linked_movie_id
from link_type, movie_link
 where (link_type.link in ('references', 'referenced in', 'features', 'featured in')) And (movie_link.link_type_id = link_type.id)","create materialized view if not exists mv82 as select link_type.id AS id, link_type.link AS link, movie_link.linked_movie_id AS linked_movie_id
from link_type, movie_link
 where (link_type.link in ('references', 'referenced in', 'features', 'featured in')) And (movie_link.link_type_id = link_type.id)"
83,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, link_type.id AS link_type_id_4, link_type.link AS link, name.gender AS gender, name.name AS name, name.name_pcode_cf AS name_pcode_cf, person_info.info AS person_info_info_9, person_info.note AS note
from cast_info, info_type, link_type, movie_link, name, person_info
 where (cast_info.movie_id = movie_link.linked_movie_id) And (cast_info.person_id = name.id) And (info_type.info = 'mini biography') And (link_type.link in ('references', 'referenced in', 'features', 'featured in')) And (movie_link.link_type_id = link_type.id) And (name.id = person_info.person_id) And (person_info.info_type_id = info_type.id) And (person_info.note IS NOT NULL)","create materialized view if not exists mv83 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, link_type.id AS link_type_id_4, link_type.link AS link, name.gender AS gender, name.name AS name, name.name_pcode_cf AS name_pcode_cf, person_info.info AS person_info_info_9, person_info.note AS note
from cast_info, info_type, link_type, movie_link, name, person_info
 where (cast_info.movie_id = movie_link.linked_movie_id) And (cast_info.person_id = name.id) And (info_type.info = 'mini biography') And (link_type.link in ('references', 'referenced in', 'features', 'featured in')) And (movie_link.link_type_id = link_type.id) And (name.id = person_info.person_id) And (person_info.info_type_id = info_type.id) And (person_info.note IS NOT NULL)"
84,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, link_type.id AS link_type_id_4, link_type.link AS link, name.gender AS gender, name.name AS name, name.name_pcode_cf AS name_pcode_cf, person_info.info AS person_info_info_9, person_info.note AS note, title.production_year AS production_year
from cast_info, info_type, link_type, movie_link, name, person_info, title
 where (cast_info.movie_id = movie_link.linked_movie_id) And (cast_info.person_id = name.id) And (info_type.info = 'mini biography') And (link_type.link in ('references', 'referenced in', 'features', 'featured in')) And (movie_link.link_type_id = link_type.id) And (name.id = person_info.person_id) And (person_info.info_type_id = info_type.id) And (person_info.note IS NOT NULL) And (title.id = cast_info.movie_id)","create materialized view if not exists mv84 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, link_type.id AS link_type_id_4, link_type.link AS link, name.gender AS gender, name.name AS name, name.name_pcode_cf AS name_pcode_cf, person_info.info AS person_info_info_9, person_info.note AS note, title.production_year AS production_year
from cast_info, info_type, link_type, movie_link, name, person_info, title
 where (cast_info.movie_id = movie_link.linked_movie_id) And (cast_info.person_id = name.id) And (info_type.info = 'mini biography') And (link_type.link in ('references', 'referenced in', 'features', 'featured in')) And (movie_link.link_type_id = link_type.id) And (name.id = person_info.person_id) And (person_info.info_type_id = info_type.id) And (person_info.note IS NOT NULL) And (title.id = cast_info.movie_id)"
85,"select aka_name.name AS aka_name_name_0, info_type.info AS info_type_info_1, link_type.id AS link_type_id_2, link_type.link AS link, name.gender AS gender, name.name AS name_name_5, name.name_pcode_cf AS name_pcode_cf, person_info.info AS person_info_info_7, person_info.info_type_id AS info_type_id, person_info.note AS note, title.id AS title_id_10, title.production_year AS production_year
from aka_name, cast_info, info_type, link_type, movie_link, name, person_info, title
 where (aka_name.name IS NOT NULL)  And  (((aka_name.name like '%a%')) Or ((aka_name.name like 'A%'))) And (aka_name.person_id = name.id) And (cast_info.movie_id = movie_link.linked_movie_id) And (cast_info.person_id = name.id) And (info_type.info = 'mini biography') And (link_type.link in ('references', 'referenced in', 'features', 'featured in')) And (movie_link.link_type_id = link_type.id) And (movie_link.linked_movie_id = cast_info.movie_id) And (name.id = aka_name.person_id) And (name.id = person_info.person_id) And (person_info.info_type_id = info_type.id) And (person_info.note IS NOT NULL) And (title.id = cast_info.movie_id)","create materialized view if not exists mv85 as select aka_name.name AS aka_name_name_0, info_type.info AS info_type_info_1, link_type.id AS link_type_id_2, link_type.link AS link, name.gender AS gender, name.name AS name_name_5, name.name_pcode_cf AS name_pcode_cf, person_info.info AS person_info_info_7, person_info.info_type_id AS info_type_id, person_info.note AS note, title.id AS title_id_10, title.production_year AS production_year
from aka_name, cast_info, info_type, link_type, movie_link, name, person_info, title
 where (aka_name.name IS NOT NULL)  And  (((aka_name.name like '%a%')) Or ((aka_name.name like 'A%'))) And (aka_name.person_id = name.id) And (cast_info.movie_id = movie_link.linked_movie_id) And (cast_info.person_id = name.id) And (info_type.info = 'mini biography') And (link_type.link in ('references', 'referenced in', 'features', 'featured in')) And (movie_link.link_type_id = link_type.id) And (movie_link.linked_movie_id = cast_info.movie_id) And (name.id = aka_name.person_id) And (name.id = person_info.person_id) And (person_info.info_type_id = info_type.id) And (person_info.note IS NOT NULL) And (title.id = cast_info.movie_id)"
86,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.role_id AS role_id, role_type.role AS role
from cast_info, role_type
 where (cast_info.note = '(voice: English version)') And (cast_info.role_id = role_type.id) And (role_type.role = 'actress')","create materialized view if not exists mv86 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.role_id AS role_id, role_type.role AS role
from cast_info, role_type
 where (cast_info.note = '(voice: English version)') And (cast_info.role_id = role_type.id) And (role_type.role = 'actress')"
87,"select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, cast_info.role_id AS role_id, movie_companies.company_id AS company_id, movie_companies.note AS movie_companies_note_5, role_type.role AS role
from cast_info, movie_companies, role_type
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice: English version)') And (cast_info.role_id = role_type.id) And (movie_companies.note like '%(Japan)%')  And  (movie_companies.note not like '%(USA)%') And (role_type.role = 'actress')","create materialized view if not exists mv87 as select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, cast_info.role_id AS role_id, movie_companies.company_id AS company_id, movie_companies.note AS movie_companies_note_5, role_type.role AS role
from cast_info, movie_companies, role_type
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice: English version)') And (cast_info.role_id = role_type.id) And (movie_companies.note like '%(Japan)%')  And  (movie_companies.note not like '%(USA)%') And (role_type.role = 'actress')"
88,"select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.note AS movie_companies_note_6, role_type.role AS role
from cast_info, company_name, movie_companies, role_type
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice: English version)') And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(Japan)%')  And  (movie_companies.note not like '%(USA)%') And (role_type.role = 'actress')","create materialized view if not exists mv88 as select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.note AS movie_companies_note_6, role_type.role AS role
from cast_info, company_name, movie_companies, role_type
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice: English version)') And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(Japan)%')  And  (movie_companies.note not like '%(USA)%') And (role_type.role = 'actress')"
89,"select aka_name.name AS name, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.note AS movie_companies_note_7, role_type.role AS role
from aka_name, cast_info, company_name, movie_companies, role_type
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice: English version)') And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(Japan)%')  And  (movie_companies.note not like '%(USA)%') And (role_type.role = 'actress')","create materialized view if not exists mv89 as select aka_name.name AS name, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.note AS movie_companies_note_7, role_type.role AS role
from aka_name, cast_info, company_name, movie_companies, role_type
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice: English version)') And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(Japan)%')  And  (movie_companies.note not like '%(USA)%') And (role_type.role = 'actress')"
90,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.note AS movie_companies_note_7, name.name AS name_name_8, role_type.role AS role
from aka_name, cast_info, company_name, movie_companies, name, role_type
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice: English version)') And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(Japan)%')  And  (movie_companies.note not like '%(USA)%') And (name.id = aka_name.person_id) And (role_type.role = 'actress')","create materialized view if not exists mv90 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.note AS movie_companies_note_7, name.name AS name_name_8, role_type.role AS role
from aka_name, cast_info, company_name, movie_companies, name, role_type
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice: English version)') And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(Japan)%')  And  (movie_companies.note not like '%(USA)%') And (name.id = aka_name.person_id) And (role_type.role = 'actress')"
91,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.note AS movie_companies_note_7, name.name AS name_name_8, role_type.role AS role, title.title AS title
from aka_name, cast_info, company_name, movie_companies, name, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice: English version)') And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(Japan)%')  And  (movie_companies.note not like '%(USA)%') And (name.id = aka_name.person_id) And (role_type.role = 'actress') And (title.id = cast_info.movie_id)","create materialized view if not exists mv91 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.note AS movie_companies_note_7, name.name AS name_name_8, role_type.role AS role, title.title AS title
from aka_name, cast_info, company_name, movie_companies, name, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice: English version)') And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(Japan)%')  And  (movie_companies.note not like '%(USA)%') And (name.id = aka_name.person_id) And (role_type.role = 'actress') And (title.id = cast_info.movie_id)"
92,"select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, cast_info.role_id AS role_id, movie_companies.company_id AS company_id, movie_companies.note AS movie_companies_note_5, role_type.role AS role
from cast_info, movie_companies, role_type
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice: English version)') And (cast_info.role_id = role_type.id) And (movie_companies.note like '%(Japan)%')  And  (movie_companies.note not like '%(USA)%')  And  (((movie_companies.note like '%(2006)%')) Or ((movie_companies.note like '%(2007)%'))) And (role_type.role = 'actress')","create materialized view if not exists mv92 as select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, cast_info.role_id AS role_id, movie_companies.company_id AS company_id, movie_companies.note AS movie_companies_note_5, role_type.role AS role
from cast_info, movie_companies, role_type
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice: English version)') And (cast_info.role_id = role_type.id) And (movie_companies.note like '%(Japan)%')  And  (movie_companies.note not like '%(USA)%')  And  (((movie_companies.note like '%(2006)%')) Or ((movie_companies.note like '%(2007)%'))) And (role_type.role = 'actress')"
93,"select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.note AS movie_companies_note_6, role_type.role AS role
from cast_info, company_name, movie_companies, role_type
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice: English version)') And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(Japan)%')  And  (movie_companies.note not like '%(USA)%')  And  (((movie_companies.note like '%(2006)%')) Or ((movie_companies.note like '%(2007)%'))) And (role_type.role = 'actress')","create materialized view if not exists mv93 as select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.note AS movie_companies_note_6, role_type.role AS role
from cast_info, company_name, movie_companies, role_type
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice: English version)') And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(Japan)%')  And  (movie_companies.note not like '%(USA)%')  And  (((movie_companies.note like '%(2006)%')) Or ((movie_companies.note like '%(2007)%'))) And (role_type.role = 'actress')"
94,"select aka_name.name AS name, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.note AS movie_companies_note_7, role_type.role AS role
from aka_name, cast_info, company_name, movie_companies, role_type
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice: English version)') And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(Japan)%')  And  (movie_companies.note not like '%(USA)%')  And  (((movie_companies.note like '%(2006)%')) Or ((movie_companies.note like '%(2007)%'))) And (role_type.role = 'actress')","create materialized view if not exists mv94 as select aka_name.name AS name, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.note AS movie_companies_note_7, role_type.role AS role
from aka_name, cast_info, company_name, movie_companies, role_type
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice: English version)') And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(Japan)%')  And  (movie_companies.note not like '%(USA)%')  And  (((movie_companies.note like '%(2006)%')) Or ((movie_companies.note like '%(2007)%'))) And (role_type.role = 'actress')"
95,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.note AS movie_companies_note_7, name.name AS name_name_8, role_type.role AS role
from aka_name, cast_info, company_name, movie_companies, name, role_type
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice: English version)') And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(Japan)%')  And  (movie_companies.note not like '%(USA)%')  And  (((movie_companies.note like '%(2006)%')) Or ((movie_companies.note like '%(2007)%'))) And (name.id = aka_name.person_id) And (role_type.role = 'actress')","create materialized view if not exists mv95 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.note AS movie_companies_note_7, name.name AS name_name_8, role_type.role AS role
from aka_name, cast_info, company_name, movie_companies, name, role_type
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice: English version)') And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(Japan)%')  And  (movie_companies.note not like '%(USA)%')  And  (((movie_companies.note like '%(2006)%')) Or ((movie_companies.note like '%(2007)%'))) And (name.id = aka_name.person_id) And (role_type.role = 'actress')"
96,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.note AS movie_companies_note_7, name.name AS name_name_8, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, company_name, movie_companies, name, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice: English version)') And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(Japan)%')  And  (movie_companies.note not like '%(USA)%')  And  (((movie_companies.note like '%(2006)%')) Or ((movie_companies.note like '%(2007)%'))) And (name.id = aka_name.person_id) And (role_type.role = 'actress') And (title.id = cast_info.movie_id)","create materialized view if not exists mv96 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.note AS movie_companies_note_7, name.name AS name_name_8, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, company_name, movie_companies, name, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice: English version)') And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(Japan)%')  And  (movie_companies.note not like '%(USA)%')  And  (((movie_companies.note like '%(2006)%')) Or ((movie_companies.note like '%(2007)%'))) And (name.id = aka_name.person_id) And (role_type.role = 'actress') And (title.id = cast_info.movie_id)"
97,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, role_type.role AS role
from cast_info, role_type
 where (cast_info.role_id = role_type.id) And (role_type.role = 'writer')","create materialized view if not exists mv97 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, role_type.role AS role
from cast_info, role_type
 where (cast_info.role_id = role_type.id) And (role_type.role = 'writer')"
98,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, role_type.role AS role
from cast_info, company_name, movie_companies, role_type
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.role_id = role_type.id) And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (role_type.role = 'writer')","create materialized view if not exists mv98 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, role_type.role AS role
from cast_info, company_name, movie_companies, role_type
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.role_id = role_type.id) And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (role_type.role = 'writer')"
99,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, role_type.role AS role
from cast_info, company_name, movie_companies, name, role_type
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.role_id = role_type.id) And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (name.id = cast_info.person_id) And (role_type.role = 'writer')","create materialized view if not exists mv99 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, role_type.role AS role
from cast_info, company_name, movie_companies, name, role_type
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.role_id = role_type.id) And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (name.id = cast_info.person_id) And (role_type.role = 'writer')"
100,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, role_type.role AS role, title.title AS title
from cast_info, company_name, movie_companies, name, role_type, title
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.role_id = role_type.id) And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (name.id = cast_info.person_id) And (role_type.role = 'writer') And (title.id = cast_info.movie_id)","create materialized view if not exists mv100 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, role_type.role AS role, title.title AS title
from cast_info, company_name, movie_companies, name, role_type, title
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.role_id = role_type.id) And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (name.id = cast_info.person_id) And (role_type.role = 'writer') And (title.id = cast_info.movie_id)"
101,"select aka_name.name AS name, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_3, movie_companies.movie_id AS movie_id, role_type.id AS role_type_id_5, role_type.role AS role, title.title AS title
from aka_name, cast_info, company_name, movie_companies, name, role_type, title
 where (aka_name.person_id = name.id) And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.role_id = role_type.id) And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (name.id = aka_name.person_id) And (name.id = cast_info.person_id) And (role_type.role = 'writer') And (title.id = cast_info.movie_id)","create materialized view if not exists mv101 as select aka_name.name AS name, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_3, movie_companies.movie_id AS movie_id, role_type.id AS role_type_id_5, role_type.role AS role, title.title AS title
from aka_name, cast_info, company_name, movie_companies, name, role_type, title
 where (aka_name.person_id = name.id) And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.role_id = role_type.id) And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (name.id = aka_name.person_id) And (name.id = cast_info.person_id) And (role_type.role = 'writer') And (title.id = cast_info.movie_id)"
102,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, role_type.role AS role
from cast_info, role_type
 where (cast_info.role_id = role_type.id) And (role_type.role = 'costume designer')","create materialized view if not exists mv102 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, role_type.role AS role
from cast_info, role_type
 where (cast_info.role_id = role_type.id) And (role_type.role = 'costume designer')"
103,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, role_type.role AS role
from cast_info, company_name, movie_companies, role_type
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.role_id = role_type.id) And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (role_type.role = 'costume designer')","create materialized view if not exists mv103 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, role_type.role AS role
from cast_info, company_name, movie_companies, role_type
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.role_id = role_type.id) And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (role_type.role = 'costume designer')"
104,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, role_type.role AS role
from cast_info, company_name, movie_companies, name, role_type
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.role_id = role_type.id) And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (name.id = cast_info.person_id) And (role_type.role = 'costume designer')","create materialized view if not exists mv104 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, role_type.role AS role
from cast_info, company_name, movie_companies, name, role_type
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.role_id = role_type.id) And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (name.id = cast_info.person_id) And (role_type.role = 'costume designer')"
105,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, role_type.role AS role, title.title AS title
from cast_info, company_name, movie_companies, name, role_type, title
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.role_id = role_type.id) And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (name.id = cast_info.person_id) And (role_type.role = 'costume designer') And (title.id = cast_info.movie_id)","create materialized view if not exists mv105 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, role_type.role AS role, title.title AS title
from cast_info, company_name, movie_companies, name, role_type, title
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.role_id = role_type.id) And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (name.id = cast_info.person_id) And (role_type.role = 'costume designer') And (title.id = cast_info.movie_id)"
106,"select aka_name.name AS name, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_3, movie_companies.movie_id AS movie_id, role_type.id AS role_type_id_5, role_type.role AS role, title.title AS title
from aka_name, cast_info, company_name, movie_companies, name, role_type, title
 where (aka_name.person_id = name.id) And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.role_id = role_type.id) And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (name.id = aka_name.person_id) And (name.id = cast_info.person_id) And (role_type.role = 'costume designer') And (title.id = cast_info.movie_id)","create materialized view if not exists mv106 as select aka_name.name AS name, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_3, movie_companies.movie_id AS movie_id, role_type.id AS role_type_id_5, role_type.role AS role, title.title AS title
from aka_name, cast_info, company_name, movie_companies, name, role_type, title
 where (aka_name.person_id = name.id) And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.role_id = role_type.id) And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (name.id = aka_name.person_id) And (name.id = cast_info.person_id) And (role_type.role = 'costume designer') And (title.id = cast_info.movie_id)"
107,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, role_type.role AS role
from cast_info, role_type
 where (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress')","create materialized view if not exists mv107 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, role_type.role AS role
from cast_info, role_type
 where (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress')"
108,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, name.gender AS gender, name.name AS name, role_type.role AS role
from cast_info, name, role_type
 where (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (name.id = cast_info.person_id) And (role_type.role = 'actress')","create materialized view if not exists mv108 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, name.gender AS gender, name.name AS name, role_type.role AS role
from cast_info, name, role_type
 where (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (name.id = cast_info.person_id) And (role_type.role = 'actress')"
109,"select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, movie_companies.company_id AS company_id, movie_companies.note AS movie_companies_note_6, name.gender AS gender, name.name AS name, role_type.role AS role
from cast_info, movie_companies, name, role_type
 where (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (name.id = cast_info.person_id) And (role_type.role = 'actress')","create materialized view if not exists mv109 as select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, movie_companies.company_id AS company_id, movie_companies.note AS movie_companies_note_6, name.gender AS gender, name.name AS name, role_type.role AS role
from cast_info, movie_companies, name, role_type
 where (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (name.id = cast_info.person_id) And (role_type.role = 'actress')"
110,"select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.note AS movie_companies_note_7, name.gender AS gender, name.name AS name, role_type.role AS role
from cast_info, company_name, movie_companies, name, role_type
 where (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (name.id = cast_info.person_id) And (role_type.role = 'actress')","create materialized view if not exists mv110 as select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.note AS movie_companies_note_7, name.gender AS gender, name.name AS name, role_type.role AS role
from cast_info, company_name, movie_companies, name, role_type
 where (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (name.id = cast_info.person_id) And (role_type.role = 'actress')"
111,"select aka_name.name AS aka_name_name_0, cast_info.note AS cast_info_note_1, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.movie_id AS movie_id, movie_companies.note AS movie_companies_note_7, name.gender AS gender, name.name AS name_name_9, role_type.role AS role
from aka_name, cast_info, company_name, movie_companies, name, role_type
 where (aka_name.person_id = name.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (name.id = aka_name.person_id) And (name.id = cast_info.person_id) And (role_type.role = 'actress')","create materialized view if not exists mv111 as select aka_name.name AS aka_name_name_0, cast_info.note AS cast_info_note_1, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.movie_id AS movie_id, movie_companies.note AS movie_companies_note_7, name.gender AS gender, name.name AS name_name_9, role_type.role AS role
from aka_name, cast_info, company_name, movie_companies, name, role_type
 where (aka_name.person_id = name.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (name.id = aka_name.person_id) And (name.id = cast_info.person_id) And (role_type.role = 'actress')"
112,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.role_id AS role_id, char_name.id AS char_name_id_5, char_name.name AS char_name_name_6, company_name.country_code AS country_code, company_name.id AS company_name_id_8, movie_companies.note AS movie_companies_note_9, name.gender AS gender, name.name AS name_name_11, role_type.role AS role
from aka_name, cast_info, char_name, company_name, movie_companies, name, role_type
 where (aka_name.person_id = name.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (name.id = cast_info.person_id) And (role_type.role = 'actress')","create materialized view if not exists mv112 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.role_id AS role_id, char_name.id AS char_name_id_5, char_name.name AS char_name_name_6, company_name.country_code AS country_code, company_name.id AS company_name_id_8, movie_companies.note AS movie_companies_note_9, name.gender AS gender, name.name AS name_name_11, role_type.role AS role
from aka_name, cast_info, char_name, company_name, movie_companies, name, role_type
 where (aka_name.person_id = name.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (name.id = cast_info.person_id) And (role_type.role = 'actress')"
113,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.role_id AS role_id, char_name.id AS char_name_id_5, char_name.name AS char_name_name_6, company_name.country_code AS country_code, company_name.id AS company_name_id_8, movie_companies.note AS movie_companies_note_9, name.gender AS gender, name.name AS name_name_11, role_type.role AS role, title.id AS title_id_13, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, company_name, movie_companies, name, role_type, title
 where (aka_name.person_id = name.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (name.id = cast_info.person_id) And (role_type.role = 'actress') And (title.id = cast_info.movie_id)","create materialized view if not exists mv113 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.role_id AS role_id, char_name.id AS char_name_id_5, char_name.name AS char_name_name_6, company_name.country_code AS country_code, company_name.id AS company_name_id_8, movie_companies.note AS movie_companies_note_9, name.gender AS gender, name.name AS name_name_11, role_type.role AS role, title.id AS title_id_13, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, company_name, movie_companies, name, role_type, title
 where (aka_name.person_id = name.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (name.id = cast_info.person_id) And (role_type.role = 'actress') And (title.id = cast_info.movie_id)"
114,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, role_type.role AS role
from cast_info, role_type
 where (cast_info.note = '(voice)') And (cast_info.role_id = role_type.id) And (role_type.role = 'actress')","create materialized view if not exists mv114 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, role_type.role AS role
from cast_info, role_type
 where (cast_info.note = '(voice)') And (cast_info.role_id = role_type.id) And (role_type.role = 'actress')"
115,"select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, movie_companies.company_id AS company_id, movie_companies.note AS movie_companies_note_6, role_type.role AS role
from cast_info, movie_companies, role_type
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice)') And (cast_info.role_id = role_type.id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (role_type.role = 'actress')","create materialized view if not exists mv115 as select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, movie_companies.company_id AS company_id, movie_companies.note AS movie_companies_note_6, role_type.role AS role
from cast_info, movie_companies, role_type
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice)') And (cast_info.role_id = role_type.id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (role_type.role = 'actress')"
116,"select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.note AS movie_companies_note_7, role_type.role AS role
from cast_info, company_name, movie_companies, role_type
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice)') And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (role_type.role = 'actress')","create materialized view if not exists mv116 as select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.note AS movie_companies_note_7, role_type.role AS role
from cast_info, company_name, movie_companies, role_type
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice)') And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (role_type.role = 'actress')"
117,"select aka_name.name AS name, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.note AS movie_companies_note_8, role_type.role AS role
from aka_name, cast_info, company_name, movie_companies, role_type
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice)') And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (role_type.role = 'actress')","create materialized view if not exists mv117 as select aka_name.name AS name, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.note AS movie_companies_note_8, role_type.role AS role
from aka_name, cast_info, company_name, movie_companies, role_type
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice)') And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (role_type.role = 'actress')"
118,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.note AS cast_info_note_2, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.note AS movie_companies_note_7, name.gender AS gender, name.name AS name_name_9, role_type.role AS role
from aka_name, cast_info, company_name, movie_companies, name, role_type
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice)') And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (name.id = aka_name.person_id) And (role_type.role = 'actress')","create materialized view if not exists mv118 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.note AS cast_info_note_2, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.note AS movie_companies_note_7, name.gender AS gender, name.name AS name_name_9, role_type.role AS role
from aka_name, cast_info, company_name, movie_companies, name, role_type
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice)') And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (name.id = aka_name.person_id) And (role_type.role = 'actress')"
119,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.note AS cast_info_note_2, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, company_name.country_code AS country_code, company_name.id AS id, movie_companies.note AS movie_companies_note_8, name.gender AS gender, name.name AS name_name_10, role_type.role AS role
from aka_name, cast_info, char_name, company_name, movie_companies, name, role_type
 where (aka_name.person_id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice)') And (cast_info.person_id = name.id) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (name.id = aka_name.person_id) And (name.id = cast_info.person_id) And (role_type.role = 'actress')","create materialized view if not exists mv119 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.note AS cast_info_note_2, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, company_name.country_code AS country_code, company_name.id AS id, movie_companies.note AS movie_companies_note_8, name.gender AS gender, name.name AS name_name_10, role_type.role AS role
from aka_name, cast_info, char_name, company_name, movie_companies, name, role_type
 where (aka_name.person_id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice)') And (cast_info.person_id = name.id) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (name.id = aka_name.person_id) And (name.id = cast_info.person_id) And (role_type.role = 'actress')"
120,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.note AS cast_info_note_2, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, company_name.country_code AS country_code, company_name.id AS company_name_id_7, movie_companies.note AS movie_companies_note_8, name.gender AS gender, name.name AS name_name_10, role_type.role AS role, title.id AS title_id_12, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, company_name, movie_companies, name, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice)') And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (name.id = aka_name.person_id) And (name.id = cast_info.person_id) And (role_type.role = 'actress') And (title.id = cast_info.movie_id)","create materialized view if not exists mv120 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.note AS cast_info_note_2, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, company_name.country_code AS country_code, company_name.id AS company_name_id_7, movie_companies.note AS movie_companies_note_8, name.gender AS gender, name.name AS name_name_10, role_type.role AS role, title.id AS title_id_12, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, company_name, movie_companies, name, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note = '(voice)') And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (name.id = aka_name.person_id) And (name.id = cast_info.person_id) And (role_type.role = 'actress') And (title.id = cast_info.movie_id)"
121,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, role_type.role AS role
from cast_info, company_name, movie_companies, role_type
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (role_type.role = 'actress')","create materialized view if not exists mv121 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, role_type.role AS role
from cast_info, company_name, movie_companies, role_type
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (role_type.role = 'actress')"
122,"select cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, name.gender AS gender, name.name AS name, role_type.role AS role
from cast_info, company_name, movie_companies, name, role_type
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = cast_info.movie_id) And (name.id = cast_info.person_id) And (role_type.role = 'actress')","create materialized view if not exists mv122 as select cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, name.gender AS gender, name.name AS name, role_type.role AS role
from cast_info, company_name, movie_companies, name, role_type
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = cast_info.movie_id) And (name.id = cast_info.person_id) And (role_type.role = 'actress')"
123,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, company_name.country_code AS country_code, company_name.id AS id, name.gender AS gender, name.name AS name_name_9, role_type.role AS role
from cast_info, char_name, company_name, movie_companies, name, role_type
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (name.id = cast_info.person_id) And (role_type.role = 'actress')","create materialized view if not exists mv123 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, company_name.country_code AS country_code, company_name.id AS id, name.gender AS gender, name.name AS name_name_9, role_type.role AS role
from cast_info, char_name, company_name, movie_companies, name, role_type
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (name.id = cast_info.person_id) And (role_type.role = 'actress')"
124,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, company_name.country_code AS country_code, company_name.id AS id, name.gender AS gender, name.name AS name_name_9, role_type.role AS role, title.title AS title
from cast_info, char_name, company_name, movie_companies, name, role_type, title
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (name.id = cast_info.person_id) And (role_type.role = 'actress') And (title.id = movie_companies.movie_id)","create materialized view if not exists mv124 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, company_name.country_code AS country_code, company_name.id AS id, name.gender AS gender, name.name AS name_name_9, role_type.role AS role, title.title AS title
from cast_info, char_name, company_name, movie_companies, name, role_type, title
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (name.id = cast_info.person_id) And (role_type.role = 'actress') And (title.id = movie_companies.movie_id)"
125,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.note AS note, cast_info.role_id AS role_id, char_name.id AS char_name_id_4, char_name.name AS char_name_name_5, company_name.country_code AS country_code, company_name.id AS company_name_id_7, name.gender AS gender, name.name AS name_name_9, role_type.role AS role, title.id AS title_id_11, title.title AS title
from aka_name, cast_info, char_name, company_name, movie_companies, name, role_type, title
 where (aka_name.person_id = name.id) And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = cast_info.movie_id) And (name.id = cast_info.person_id) And (role_type.role = 'actress') And (title.id = cast_info.movie_id) And (title.id = movie_companies.movie_id)","create materialized view if not exists mv125 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.note AS note, cast_info.role_id AS role_id, char_name.id AS char_name_id_4, char_name.name AS char_name_name_5, company_name.country_code AS country_code, company_name.id AS company_name_id_7, name.gender AS gender, name.name AS name_name_9, role_type.role AS role, title.id AS title_id_11, title.title AS title
from aka_name, cast_info, char_name, company_name, movie_companies, name, role_type, title
 where (aka_name.person_id = name.id) And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = cast_info.movie_id) And (name.id = cast_info.person_id) And (role_type.role = 'actress') And (title.id = cast_info.movie_id) And (title.id = movie_companies.movie_id)"
126,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, role_type.role AS role
from cast_info, role_type
 where (cast_info.note like '%(voice)%')  And  (cast_info.note like '%(uncredited)%') And (role_type.id = cast_info.role_id)","create materialized view if not exists mv126 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, role_type.role AS role
from cast_info, role_type
 where (cast_info.note like '%(voice)%')  And  (cast_info.note like '%(uncredited)%') And (role_type.id = cast_info.role_id)"
127,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, role_type.role AS role
from cast_info, movie_companies, role_type
 where (cast_info.note like '%(voice)%')  And  (cast_info.note like '%(uncredited)%') And (movie_companies.movie_id = cast_info.movie_id) And (role_type.id = cast_info.role_id)","create materialized view if not exists mv127 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, role_type.role AS role
from cast_info, movie_companies, role_type
 where (cast_info.note like '%(voice)%')  And  (cast_info.note like '%(uncredited)%') And (movie_companies.movie_id = cast_info.movie_id) And (role_type.id = cast_info.role_id)"
128,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, role_type.role AS role
from cast_info, char_name, movie_companies, role_type
 where (cast_info.note like '%(voice)%')  And  (cast_info.note like '%(uncredited)%') And (char_name.id = cast_info.person_role_id) And (movie_companies.movie_id = cast_info.movie_id) And (role_type.id = cast_info.role_id)","create materialized view if not exists mv128 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, role_type.role AS role
from cast_info, char_name, movie_companies, role_type
 where (cast_info.note like '%(voice)%')  And  (cast_info.note like '%(uncredited)%') And (char_name.id = cast_info.person_role_id) And (movie_companies.movie_id = cast_info.movie_id) And (role_type.id = cast_info.role_id)"
129,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS id, movie_companies.company_type_id AS company_type_id, role_type.role AS role
from cast_info, char_name, company_name, movie_companies, role_type
 where (cast_info.note like '%(voice)%')  And  (cast_info.note like '%(uncredited)%') And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (movie_companies.movie_id = cast_info.movie_id) And (role_type.id = cast_info.role_id)","create materialized view if not exists mv129 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS id, movie_companies.company_type_id AS company_type_id, role_type.role AS role
from cast_info, char_name, company_name, movie_companies, role_type
 where (cast_info.note like '%(voice)%')  And  (cast_info.note like '%(uncredited)%') And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (movie_companies.movie_id = cast_info.movie_id) And (role_type.id = cast_info.role_id)"
130,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS company_name_id_6, company_type.id AS company_type_id_7, role_type.role AS role
from cast_info, char_name, company_name, company_type, movie_companies, role_type
 where (cast_info.note like '%(voice)%')  And  (cast_info.note like '%(uncredited)%') And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (movie_companies.movie_id = cast_info.movie_id) And (role_type.id = cast_info.role_id)","create materialized view if not exists mv130 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS company_name_id_6, company_type.id AS company_type_id_7, role_type.role AS role
from cast_info, char_name, company_name, company_type, movie_companies, role_type
 where (cast_info.note like '%(voice)%')  And  (cast_info.note like '%(uncredited)%') And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (movie_companies.movie_id = cast_info.movie_id) And (role_type.id = cast_info.role_id)"
131,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS company_name_id_6, company_type.id AS company_type_id_7, role_type.role AS role, title.production_year AS production_year, title.title AS title
from cast_info, char_name, company_name, company_type, movie_companies, role_type, title
 where (cast_info.note like '%(voice)%')  And  (cast_info.note like '%(uncredited)%') And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (movie_companies.movie_id = cast_info.movie_id) And (role_type.id = cast_info.role_id) And (title.id = movie_companies.movie_id)","create materialized view if not exists mv131 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS company_name_id_6, company_type.id AS company_type_id_7, role_type.role AS role, title.production_year AS production_year, title.title AS title
from cast_info, char_name, company_name, company_type, movie_companies, role_type, title
 where (cast_info.note like '%(voice)%')  And  (cast_info.note like '%(uncredited)%') And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (movie_companies.movie_id = cast_info.movie_id) And (role_type.id = cast_info.role_id) And (title.id = movie_companies.movie_id)"
132,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, role_type.role AS role
from cast_info, role_type
 where (cast_info.note like '%(producer)%') And (cast_info.role_id = role_type.id) And (role_type.role = 'actor')","create materialized view if not exists mv132 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, role_type.role AS role
from cast_info, role_type
 where (cast_info.note like '%(producer)%') And (cast_info.role_id = role_type.id) And (role_type.role = 'actor')"
133,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, role_type.role AS role
from cast_info, movie_companies, role_type
 where (cast_info.note like '%(producer)%') And (cast_info.role_id = role_type.id) And (movie_companies.movie_id = cast_info.movie_id) And (role_type.role = 'actor')","create materialized view if not exists mv133 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, role_type.role AS role
from cast_info, movie_companies, role_type
 where (cast_info.note like '%(producer)%') And (cast_info.role_id = role_type.id) And (movie_companies.movie_id = cast_info.movie_id) And (role_type.role = 'actor')"
134,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.company_type_id AS company_type_id, role_type.role AS role
from cast_info, company_name, movie_companies, role_type
 where (cast_info.note like '%(producer)%') And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (movie_companies.movie_id = cast_info.movie_id) And (role_type.role = 'actor')","create materialized view if not exists mv134 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.company_type_id AS company_type_id, role_type.role AS role
from cast_info, company_name, movie_companies, role_type
 where (cast_info.note like '%(producer)%') And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (movie_companies.movie_id = cast_info.movie_id) And (role_type.role = 'actor')"
135,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS id, movie_companies.company_type_id AS company_type_id, role_type.role AS role
from cast_info, char_name, company_name, movie_companies, role_type
 where (cast_info.note like '%(producer)%') And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (movie_companies.movie_id = cast_info.movie_id) And (role_type.role = 'actor')","create materialized view if not exists mv135 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS id, movie_companies.company_type_id AS company_type_id, role_type.role AS role
from cast_info, char_name, company_name, movie_companies, role_type
 where (cast_info.note like '%(producer)%') And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (movie_companies.movie_id = cast_info.movie_id) And (role_type.role = 'actor')"
136,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS company_name_id_6, company_type.id AS company_type_id_7, role_type.role AS role
from cast_info, char_name, company_name, company_type, movie_companies, role_type
 where (cast_info.note like '%(producer)%') And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (movie_companies.movie_id = cast_info.movie_id) And (role_type.role = 'actor')","create materialized view if not exists mv136 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS company_name_id_6, company_type.id AS company_type_id_7, role_type.role AS role
from cast_info, char_name, company_name, company_type, movie_companies, role_type
 where (cast_info.note like '%(producer)%') And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (movie_companies.movie_id = cast_info.movie_id) And (role_type.role = 'actor')"
137,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS company_name_id_6, company_type.id AS company_type_id_7, role_type.role AS role, title.production_year AS production_year, title.title AS title
from cast_info, char_name, company_name, company_type, movie_companies, role_type, title
 where (cast_info.note like '%(producer)%') And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (movie_companies.movie_id = cast_info.movie_id) And (role_type.role = 'actor') And (title.id = movie_companies.movie_id)","create materialized view if not exists mv137 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS company_name_id_6, company_type.id AS company_type_id_7, role_type.role AS role, title.production_year AS production_year, title.title AS title
from cast_info, char_name, company_name, company_type, movie_companies, role_type, title
 where (cast_info.note like '%(producer)%') And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (movie_companies.movie_id = cast_info.movie_id) And (role_type.role = 'actor') And (title.id = movie_companies.movie_id)"
138,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.company_type_id AS company_type_id
from cast_info, company_name, movie_companies
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note like '%(producer)%') And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id)","create materialized view if not exists mv138 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.company_type_id AS company_type_id
from cast_info, company_name, movie_companies
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note like '%(producer)%') And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id)"
139,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.company_type_id AS company_type_id, title.production_year AS production_year, title.title AS title
from cast_info, company_name, movie_companies, title
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note like '%(producer)%') And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (title.id = movie_companies.movie_id)","create materialized view if not exists mv139 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.company_type_id AS company_type_id, title.production_year AS production_year, title.title AS title
from cast_info, company_name, movie_companies, title
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note like '%(producer)%') And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (title.id = movie_companies.movie_id)"
140,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS id, movie_companies.company_type_id AS company_type_id, title.production_year AS production_year, title.title AS title
from cast_info, char_name, company_name, movie_companies, title
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note like '%(producer)%') And (char_name.id = cast_info.person_role_id) And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (title.id = movie_companies.movie_id)","create materialized view if not exists mv140 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS id, movie_companies.company_type_id AS company_type_id, title.production_year AS production_year, title.title AS title
from cast_info, char_name, company_name, movie_companies, title
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note like '%(producer)%') And (char_name.id = cast_info.person_role_id) And (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (title.id = movie_companies.movie_id)"
141,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS company_name_id_6, company_type.id AS company_type_id_7, title.production_year AS production_year, title.title AS title
from cast_info, char_name, company_name, company_type, movie_companies, title
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note like '%(producer)%') And (char_name.id = cast_info.person_role_id) And (company_name.country_code = '[us]') And (company_type.id = movie_companies.company_type_id) And (movie_companies.company_id = company_name.id) And (title.id = movie_companies.movie_id)","create materialized view if not exists mv141 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS company_name_id_6, company_type.id AS company_type_id_7, title.production_year AS production_year, title.title AS title
from cast_info, char_name, company_name, company_type, movie_companies, title
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note like '%(producer)%') And (char_name.id = cast_info.person_role_id) And (company_name.country_code = '[us]') And (company_type.id = movie_companies.company_type_id) And (movie_companies.company_id = company_name.id) And (title.id = movie_companies.movie_id)"
142,"select cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS company_name_id_5, company_type.id AS company_type_id_6, title.production_year AS production_year, title.title AS title
from cast_info, char_name, company_name, company_type, movie_companies, role_type, title
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note like '%(producer)%') And (char_name.id = cast_info.person_role_id) And (company_name.country_code = '[us]') And (company_type.id = movie_companies.company_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = cast_info.movie_id) And (role_type.id = cast_info.role_id) And (title.id = movie_companies.movie_id)","create materialized view if not exists mv142 as select cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS company_name_id_5, company_type.id AS company_type_id_6, title.production_year AS production_year, title.title AS title
from cast_info, char_name, company_name, company_type, movie_companies, role_type, title
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note like '%(producer)%') And (char_name.id = cast_info.person_role_id) And (company_name.country_code = '[us]') And (company_type.id = movie_companies.company_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = cast_info.movie_id) And (role_type.id = cast_info.role_id) And (title.id = movie_companies.movie_id)"
143,"select company_type.id AS id, company_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_type, movie_companies
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL)","create materialized view if not exists mv143 as select company_type.id AS id, company_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_type, movie_companies
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL)"
144,"select link_type.id AS id, link_type.link AS link, movie_link.movie_id AS movie_id
from link_type, movie_link
 where (link_type.link like '%follow%') And (movie_link.link_type_id = link_type.id)","create materialized view if not exists mv144 as select link_type.id AS id, link_type.link AS link, movie_link.movie_id AS movie_id
from link_type, movie_link
 where (link_type.link like '%follow%') And (movie_link.link_type_id = link_type.id)"
145,"select company_type.id AS company_type_id_0, company_type.kind AS kind, link_type.id AS link_type_id_2, link_type.link AS link, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_type, link_type, movie_companies, movie_link
 where (company_type.kind = 'production companies') And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_link.link_type_id = link_type.id)","create materialized view if not exists mv145 as select company_type.id AS company_type_id_0, company_type.kind AS kind, link_type.id AS link_type_id_2, link_type.link AS link, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_type, link_type, movie_companies, movie_link
 where (company_type.kind = 'production companies') And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_link.link_type_id = link_type.id)"
146,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, link_type.id AS link_type_id_5, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_name, company_type, link_type, movie_companies, movie_link
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_link.link_type_id = link_type.id)","create materialized view if not exists mv146 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, link_type.id AS link_type_id_5, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_name, company_type, link_type, movie_companies, movie_link
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_link.link_type_id = link_type.id)"
147,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, link_type.id AS link_type_id_5, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id
from company_name, company_type, link_type, movie_companies, movie_keyword, movie_link
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id)","create materialized view if not exists mv147 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, link_type.id AS link_type_id_5, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id
from company_name, company_type, link_type, movie_companies, movie_keyword, movie_link
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id)"
148,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_name, company_type, keyword, link_type, movie_companies, movie_keyword, movie_link
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (keyword.id = movie_keyword.keyword_id) And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id)","create materialized view if not exists mv148 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_name, company_type, keyword, link_type, movie_companies, movie_keyword, movie_link
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (keyword.id = movie_keyword.keyword_id) And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id)"
149,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
from company_name, company_type, keyword, link_type, movie_companies, movie_keyword, movie_link, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (keyword.id = movie_keyword.keyword_id) And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id) And (movie_link.movie_id = title.id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv149 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
from company_name, company_type, keyword, link_type, movie_companies, movie_keyword, movie_link, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (keyword.id = movie_keyword.keyword_id) And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id) And (movie_link.movie_id = title.id) And (title.id = movie_keyword.movie_id)"
150,"select movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
from movie_companies, title
 where (movie_companies.movie_id = title.id) And (movie_companies.note IS NULL) And (title.title like '%Money%')  And  (title.production_year = 1998)","create materialized view if not exists mv150 as select movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
from movie_companies, title
 where (movie_companies.movie_id = title.id) And (movie_companies.note IS NULL) And (title.title like '%Money%')  And  (title.production_year = 1998)"
151,"select movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from movie_companies, movie_keyword, title
 where (movie_companies.movie_id = title.id) And (movie_companies.note IS NULL) And (title.id = movie_keyword.movie_id) And (title.title like '%Money%')  And  (title.production_year = 1998)","create materialized view if not exists mv151 as select movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from movie_companies, movie_keyword, title
 where (movie_companies.movie_id = title.id) And (movie_companies.note IS NULL) And (title.id = movie_keyword.movie_id) And (title.title like '%Money%')  And  (title.production_year = 1998)"
152,"select link_type.id AS id, link_type.link AS link, movie_link.movie_id AS movie_id
from link_type, movie_link
 where (link_type.link like '%follows%') And (movie_link.link_type_id = link_type.id)","create materialized view if not exists mv152 as select link_type.id AS id, link_type.link AS link, movie_link.movie_id AS movie_id
from link_type, movie_link
 where (link_type.link like '%follows%') And (movie_link.link_type_id = link_type.id)"
153,"select link_type.id AS id, link_type.link AS link, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_companies_movie_id_4, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id, movie_link.movie_id AS movie_link_movie_id_7, title.production_year AS production_year, title.title AS title
from link_type, movie_companies, movie_keyword, movie_link, title
 where (link_type.link like '%follows%') And (movie_companies.movie_id = title.id) And (movie_companies.note IS NULL) And (movie_link.link_type_id = link_type.id) And (title.id = movie_keyword.movie_id) And (title.id = movie_link.movie_id) And (title.title like '%Money%')  And  (title.production_year = 1998)","create materialized view if not exists mv153 as select link_type.id AS id, link_type.link AS link, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_companies_movie_id_4, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id, movie_link.movie_id AS movie_link_movie_id_7, title.production_year AS production_year, title.title AS title
from link_type, movie_companies, movie_keyword, movie_link, title
 where (link_type.link like '%follows%') And (movie_companies.movie_id = title.id) And (movie_companies.note IS NULL) And (movie_link.link_type_id = link_type.id) And (title.id = movie_keyword.movie_id) And (title.id = movie_link.movie_id) And (title.title like '%Money%')  And  (title.production_year = 1998)"
154,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, link_type.id AS link_type_id_3, link_type.link AS link, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_companies_movie_id_6, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id, movie_link.movie_id AS movie_link_movie_id_9, title.production_year AS production_year, title.title AS title
from company_name, link_type, movie_companies, movie_keyword, movie_link, title
 where (company_name.id = movie_companies.company_id) And (link_type.link like '%follows%') And (movie_companies.movie_id = title.id) And (movie_companies.note IS NULL) And (movie_link.link_type_id = link_type.id) And (title.id = movie_keyword.movie_id) And (title.id = movie_link.movie_id) And (title.title like '%Money%')  And  (title.production_year = 1998)","create materialized view if not exists mv154 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, link_type.id AS link_type_id_3, link_type.link AS link, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_companies_movie_id_6, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id, movie_link.movie_id AS movie_link_movie_id_9, title.production_year AS production_year, title.title AS title
from company_name, link_type, movie_companies, movie_keyword, movie_link, title
 where (company_name.id = movie_companies.company_id) And (link_type.link like '%follows%') And (movie_companies.movie_id = title.id) And (movie_companies.note IS NULL) And (movie_link.link_type_id = link_type.id) And (title.id = movie_keyword.movie_id) And (title.id = movie_link.movie_id) And (title.title like '%Money%')  And  (title.production_year = 1998)"
155,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, link_type.id AS link_type_id_5, link_type.link AS link, movie_companies.movie_id AS movie_companies_movie_id_7, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id, movie_link.movie_id AS movie_link_movie_id_10, title.production_year AS production_year, title.title AS title
from company_name, company_type, link_type, movie_companies, movie_keyword, movie_link, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (link_type.link like '%follows%') And (movie_companies.movie_id = title.id) And (movie_companies.note IS NULL) And (movie_link.link_type_id = link_type.id) And (title.id = movie_keyword.movie_id) And (title.id = movie_link.movie_id) And (title.title like '%Money%')  And  (title.production_year = 1998)","create materialized view if not exists mv155 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, link_type.id AS link_type_id_5, link_type.link AS link, movie_companies.movie_id AS movie_companies_movie_id_7, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id, movie_link.movie_id AS movie_link_movie_id_10, title.production_year AS production_year, title.title AS title
from company_name, company_type, link_type, movie_companies, movie_keyword, movie_link, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (link_type.link like '%follows%') And (movie_companies.movie_id = title.id) And (movie_companies.note IS NULL) And (movie_link.link_type_id = link_type.id) And (title.id = movie_keyword.movie_id) And (title.id = movie_link.movie_id) And (title.title like '%Money%')  And  (title.production_year = 1998)"
156,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_companies_movie_id_9, movie_companies.note AS note, movie_link.movie_id AS movie_link_movie_id_11, title.production_year AS production_year, title.title AS title
from company_name, company_type, keyword, link_type, movie_companies, movie_keyword, movie_link, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (keyword.id = movie_keyword.keyword_id) And (link_type.link like '%follows%') And (movie_companies.movie_id = title.id) And (movie_companies.note IS NULL) And (movie_link.link_type_id = link_type.id) And (title.id = movie_keyword.movie_id) And (title.id = movie_link.movie_id) And (title.title like '%Money%')  And  (title.production_year = 1998)","create materialized view if not exists mv156 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_companies_movie_id_9, movie_companies.note AS note, movie_link.movie_id AS movie_link_movie_id_11, title.production_year AS production_year, title.title AS title
from company_name, company_type, keyword, link_type, movie_companies, movie_keyword, movie_link, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (keyword.id = movie_keyword.keyword_id) And (link_type.link like '%follows%') And (movie_companies.movie_id = title.id) And (movie_companies.note IS NULL) And (movie_link.link_type_id = link_type.id) And (title.id = movie_keyword.movie_id) And (title.id = movie_link.movie_id) And (title.title like '%Money%')  And  (title.production_year = 1998)"
157,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
from keyword, movie_keyword
 where (keyword.keyword in ('sequel', 'revenge', 'based-on-novel')) And (movie_keyword.keyword_id = keyword.id)","create materialized view if not exists mv157 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
from keyword, movie_keyword
 where (keyword.keyword in ('sequel', 'revenge', 'based-on-novel')) And (movie_keyword.keyword_id = keyword.id)"
158,"select company_name.country_code AS country_code, company_name.id AS id, company_name.name AS name, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_name, movie_companies
 where (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name = '__LIKE__20th Century Fox%')) Or ((company_name.name = '__LIKE__Twentieth Century Fox%'))) And (movie_companies.company_id = company_name.id) And (movie_companies.note IS NOT NULL)","create materialized view if not exists mv158 as select company_name.country_code AS country_code, company_name.id AS id, company_name.name AS name, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_name, movie_companies
 where (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name = '__LIKE__20th Century Fox%')) Or ((company_name.name = '__LIKE__Twentieth Century Fox%'))) And (movie_companies.company_id = company_name.id) And (movie_companies.note IS NOT NULL)"
159,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, keyword.id AS keyword_id_3, keyword.keyword AS keyword, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_name, keyword, movie_companies, movie_keyword
 where (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name = '__LIKE__20th Century Fox%')) Or ((company_name.name = '__LIKE__Twentieth Century Fox%'))) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel')) And (movie_companies.company_id = company_name.id) And (movie_companies.note IS NOT NULL) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id)","create materialized view if not exists mv159 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, keyword.id AS keyword_id_3, keyword.keyword AS keyword, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_name, keyword, movie_companies, movie_keyword
 where (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name = '__LIKE__20th Century Fox%')) Or ((company_name.name = '__LIKE__Twentieth Century Fox%'))) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel')) And (movie_companies.company_id = company_name.id) And (movie_companies.note IS NOT NULL) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id)"
160,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_name, company_type, keyword, movie_companies, movie_keyword
 where (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name = '__LIKE__20th Century Fox%')) Or ((company_name.name = '__LIKE__Twentieth Century Fox%'))) And (company_type.kind IS NOT NULL)  And  (company_type.kind = '__NOTEQUAL__production companies') And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel')) And (movie_companies.company_id = company_name.id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NOT NULL) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id)","create materialized view if not exists mv160 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_name, company_type, keyword, movie_companies, movie_keyword
 where (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name = '__LIKE__20th Century Fox%')) Or ((company_name.name = '__LIKE__Twentieth Century Fox%'))) And (company_type.kind IS NOT NULL)  And  (company_type.kind = '__NOTEQUAL__production companies') And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel')) And (movie_companies.company_id = company_name.id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NOT NULL) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id)"
161,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_link.link_type_id AS link_type_id
from company_name, company_type, keyword, movie_companies, movie_keyword, movie_link
 where (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name = '__LIKE__20th Century Fox%')) Or ((company_name.name = '__LIKE__Twentieth Century Fox%'))) And (company_type.kind IS NOT NULL)  And  (company_type.kind = '__NOTEQUAL__production companies') And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel')) And (movie_companies.company_id = company_name.id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NOT NULL) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_link.movie_id)","create materialized view if not exists mv161 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_link.link_type_id AS link_type_id
from company_name, company_type, keyword, movie_companies, movie_keyword, movie_link
 where (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name = '__LIKE__20th Century Fox%')) Or ((company_name.name = '__LIKE__Twentieth Century Fox%'))) And (company_type.kind IS NOT NULL)  And  (company_type.kind = '__NOTEQUAL__production companies') And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel')) And (movie_companies.company_id = company_name.id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NOT NULL) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_link.movie_id)"
162,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_link.link_type_id AS link_type_id, title.production_year AS production_year, title.title AS title
from company_name, company_type, keyword, movie_companies, movie_keyword, movie_link, title
 where (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name = '__LIKE__20th Century Fox%')) Or ((company_name.name = '__LIKE__Twentieth Century Fox%'))) And (company_type.kind IS NOT NULL)  And  (company_type.kind = '__NOTEQUAL__production companies') And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel')) And (movie_companies.company_id = company_name.id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NOT NULL) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.movie_id = title.id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv162 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_link.link_type_id AS link_type_id, title.production_year AS production_year, title.title AS title
from company_name, company_type, keyword, movie_companies, movie_keyword, movie_link, title
 where (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name = '__LIKE__20th Century Fox%')) Or ((company_name.name = '__LIKE__Twentieth Century Fox%'))) And (company_type.kind IS NOT NULL)  And  (company_type.kind = '__NOTEQUAL__production companies') And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel')) And (movie_companies.company_id = company_name.id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NOT NULL) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.movie_id = title.id) And (title.id = movie_keyword.movie_id)"
163,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.keyword AS keyword, link_type.id AS link_type_id_6, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
from company_name, company_type, keyword, link_type, movie_companies, movie_keyword, movie_link, title
 where (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name = '__LIKE__20th Century Fox%')) Or ((company_name.name = '__LIKE__Twentieth Century Fox%'))) And (company_type.kind IS NOT NULL)  And  (company_type.kind = '__NOTEQUAL__production companies') And (keyword.id = movie_keyword.keyword_id) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel')) And (movie_companies.company_id = company_name.id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NOT NULL) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id) And (movie_link.movie_id = title.id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv163 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.keyword AS keyword, link_type.id AS link_type_id_6, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
from company_name, company_type, keyword, link_type, movie_companies, movie_keyword, movie_link, title
 where (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name = '__LIKE__20th Century Fox%')) Or ((company_name.name = '__LIKE__Twentieth Century Fox%'))) And (company_type.kind IS NOT NULL)  And  (company_type.kind = '__NOTEQUAL__production companies') And (keyword.id = movie_keyword.keyword_id) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel')) And (movie_companies.company_id = company_name.id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NOT NULL) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id) And (movie_link.movie_id = title.id) And (title.id = movie_keyword.movie_id)"
164,"select movie_link.link_type_id AS link_type_id, movie_link.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from movie_link, title
 where (title.id = movie_link.movie_id) And (title.production_year > 1950)","create materialized view if not exists mv164 as select movie_link.link_type_id AS link_type_id, movie_link.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from movie_link, title
 where (title.id = movie_link.movie_id) And (title.production_year > 1950)"
165,"select keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from keyword, movie_companies, movie_keyword
 where (keyword.keyword in ('sequel', 'revenge', 'based-on-novel')) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NOT NULL) And (movie_keyword.keyword_id = keyword.id)","create materialized view if not exists mv165 as select keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from keyword, movie_companies, movie_keyword
 where (keyword.keyword in ('sequel', 'revenge', 'based-on-novel')) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NOT NULL) And (movie_keyword.keyword_id = keyword.id)"
166,"select keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_link.link_type_id AS link_type_id, title.production_year AS production_year, title.title AS title
from keyword, movie_companies, movie_keyword, movie_link, title
 where (keyword.keyword in ('sequel', 'revenge', 'based-on-novel')) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NOT NULL) And (movie_keyword.keyword_id = keyword.id) And (movie_link.movie_id = movie_keyword.movie_id) And (title.id = movie_link.movie_id) And (title.production_year > 1950)","create materialized view if not exists mv166 as select keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_link.link_type_id AS link_type_id, title.production_year AS production_year, title.title AS title
from keyword, movie_companies, movie_keyword, movie_link, title
 where (keyword.keyword in ('sequel', 'revenge', 'based-on-novel')) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NOT NULL) And (movie_keyword.keyword_id = keyword.id) And (movie_link.movie_id = movie_keyword.movie_id) And (title.id = movie_link.movie_id) And (title.production_year > 1950)"
167,"select company_type.id AS company_type_id_0, company_type.kind AS kind, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_link.link_type_id AS link_type_id, title.production_year AS production_year, title.title AS title
from company_type, keyword, movie_companies, movie_keyword, movie_link, title
 where (company_type.kind IS NOT NULL)  And  (company_type.kind = '__NOTEQUAL__production companies') And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel')) And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NOT NULL) And (movie_keyword.keyword_id = keyword.id) And (movie_link.movie_id = movie_keyword.movie_id) And (title.id = movie_link.movie_id) And (title.production_year > 1950)","create materialized view if not exists mv167 as select company_type.id AS company_type_id_0, company_type.kind AS kind, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_link.link_type_id AS link_type_id, title.production_year AS production_year, title.title AS title
from company_type, keyword, movie_companies, movie_keyword, movie_link, title
 where (company_type.kind IS NOT NULL)  And  (company_type.kind = '__NOTEQUAL__production companies') And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel')) And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NOT NULL) And (movie_keyword.keyword_id = keyword.id) And (movie_link.movie_id = movie_keyword.movie_id) And (title.id = movie_link.movie_id) And (title.production_year > 1950)"
168,"select company_type.id AS company_type_id_0, company_type.kind AS kind, keyword.id AS keyword_id_2, keyword.keyword AS keyword, link_type.id AS link_type_id_4, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
from company_type, keyword, link_type, movie_companies, movie_keyword, movie_link, title
 where (company_type.kind IS NOT NULL)  And  (company_type.kind = '__NOTEQUAL__production companies') And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel')) And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NOT NULL) And (movie_keyword.keyword_id = keyword.id) And (movie_link.link_type_id = link_type.id) And (movie_link.movie_id = movie_keyword.movie_id) And (title.id = movie_link.movie_id) And (title.production_year > 1950)","create materialized view if not exists mv168 as select company_type.id AS company_type_id_0, company_type.kind AS kind, keyword.id AS keyword_id_2, keyword.keyword AS keyword, link_type.id AS link_type_id_4, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
from company_type, keyword, link_type, movie_companies, movie_keyword, movie_link, title
 where (company_type.kind IS NOT NULL)  And  (company_type.kind = '__NOTEQUAL__production companies') And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel')) And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NOT NULL) And (movie_keyword.keyword_id = keyword.id) And (movie_link.link_type_id = link_type.id) And (movie_link.movie_id = movie_keyword.movie_id) And (title.id = movie_link.movie_id) And (title.production_year > 1950)"
169,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
from company_name, company_type, keyword, link_type, movie_companies, movie_keyword, movie_link, title
 where (company_name.country_code = '__NOTEQUAL__[pl]') And (company_type.kind IS NOT NULL)  And  (company_type.kind = '__NOTEQUAL__production companies') And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel')) And (movie_companies.company_id = company_name.id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NOT NULL) And (movie_keyword.keyword_id = keyword.id) And (movie_link.link_type_id = link_type.id) And (movie_link.movie_id = movie_keyword.movie_id) And (title.id = movie_link.movie_id) And (title.production_year > 1950)","create materialized view if not exists mv169 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
from company_name, company_type, keyword, link_type, movie_companies, movie_keyword, movie_link, title
 where (company_name.country_code = '__NOTEQUAL__[pl]') And (company_type.kind IS NOT NULL)  And  (company_type.kind = '__NOTEQUAL__production companies') And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel')) And (movie_companies.company_id = company_name.id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NOT NULL) And (movie_keyword.keyword_id = keyword.id) And (movie_link.link_type_id = link_type.id) And (movie_link.movie_id = movie_keyword.movie_id) And (title.id = movie_link.movie_id) And (title.production_year > 1950)"
170,"select company_type.id AS id, company_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id
from company_type, movie_companies
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id)","create materialized view if not exists mv170 as select company_type.id AS id, company_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id
from company_type, movie_companies
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id)"
171,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
from info_type, movie_info
 where (info_type.info = 'genres') And (movie_info.info in ('Drama', 'Horror')) And (movie_info.info_type_id = info_type.id)","create materialized view if not exists mv171 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
from info_type, movie_info
 where (info_type.info = 'genres') And (movie_info.info in ('Drama', 'Horror')) And (movie_info.info_type_id = info_type.id)"
172,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'rating') And (movie_info_idx.info > '8.0') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv172 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'rating') And (movie_info_idx.info > '8.0') And (movie_info_idx.info_type_id = info_type.id)"
173,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'genres') And (info_type.info = 'rating') And (movie_info.info in ('Drama', 'Horror')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '8.0') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv173 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'genres') And (info_type.info = 'rating') And (movie_info.info in ('Drama', 'Horror')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '8.0') And (movie_info_idx.info_type_id = info_type.id)"
174,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id
from company_type, info_type, movie_companies, movie_info, movie_info_idx
 where (company_type.kind = 'production companies') And (info_type.info = 'genres') And (info_type.info = 'rating') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Drama', 'Horror')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '8.0') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv174 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id
from company_type, info_type, movie_companies, movie_info, movie_info_idx
 where (company_type.kind = 'production companies') And (info_type.info = 'genres') And (info_type.info = 'rating') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Drama', 'Horror')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '8.0') And (movie_info_idx.info_type_id = info_type.id)"
175,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id
from company_name, company_type, info_type, movie_companies, movie_info, movie_info_idx
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'genres') And (info_type.info = 'rating') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Drama', 'Horror')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '8.0') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv175 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id
from company_name, company_type, info_type, movie_companies, movie_info, movie_info_idx
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'genres') And (info_type.info = 'rating') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Drama', 'Horror')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '8.0') And (movie_info_idx.info_type_id = info_type.id)"
176,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, movie_companies, movie_info, movie_info_idx, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'genres') And (info_type.info = 'rating') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Drama', 'Horror')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info > '8.0') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_companies.movie_id)","create materialized view if not exists mv176 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, movie_companies, movie_info, movie_info_idx, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'genres') And (info_type.info = 'rating') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Drama', 'Horror')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info > '8.0') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_companies.movie_id)"
177,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
from info_type, movie_info
 where (info_type.info = 'budget') And (movie_info.info_type_id = info_type.id)","create materialized view if not exists mv177 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
from info_type, movie_info
 where (info_type.info = 'budget') And (movie_info.info_type_id = info_type.id)"
178,"select company_type.id AS id, company_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id
from company_type, movie_companies
 where (company_type.kind IS NOT NULL)  And  (((company_type.kind = 'production companies')) Or ((company_type.kind = 'distributors'))) And (movie_companies.company_type_id = company_type.id)","create materialized view if not exists mv178 as select company_type.id AS id, company_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id
from company_type, movie_companies
 where (company_type.kind IS NOT NULL)  And  (((company_type.kind = 'production companies')) Or ((company_type.kind = 'distributors'))) And (movie_companies.company_type_id = company_type.id)"
179,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id
from company_type, info_type, movie_companies, movie_info_idx
 where (company_type.kind IS NOT NULL)  And  (((company_type.kind = 'production companies')) Or ((company_type.kind = 'distributors'))) And (info_type.info = 'bottom 10 rank') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv179 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id
from company_type, info_type, movie_companies, movie_info_idx
 where (company_type.kind IS NOT NULL)  And  (((company_type.kind = 'production companies')) Or ((company_type.kind = 'distributors'))) And (info_type.info = 'bottom 10 rank') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)"
180,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_6, movie_info_idx.info_type_id AS info_type_id
from company_type, info_type, movie_companies, movie_info, movie_info_idx
 where (company_type.kind IS NOT NULL)  And  (((company_type.kind = 'production companies')) Or ((company_type.kind = 'distributors'))) And (info_type.info = 'bottom 10 rank') And (info_type.info = 'budget') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv180 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_6, movie_info_idx.info_type_id AS info_type_id
from company_type, info_type, movie_companies, movie_info, movie_info_idx
 where (company_type.kind IS NOT NULL)  And  (((company_type.kind = 'production companies')) Or ((company_type.kind = 'distributors'))) And (info_type.info = 'bottom 10 rank') And (info_type.info = 'budget') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)"
181,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, company_type.kind AS kind, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_7, movie_info_idx.info_type_id AS info_type_id
from company_name, company_type, info_type, movie_companies, movie_info, movie_info_idx
 where (company_name.id = movie_companies.company_id) And (company_type.kind IS NOT NULL)  And  (((company_type.kind = 'production companies')) Or ((company_type.kind = 'distributors'))) And (info_type.info = 'bottom 10 rank') And (info_type.info = 'budget') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv181 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, company_type.kind AS kind, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_7, movie_info_idx.info_type_id AS info_type_id
from company_name, company_type, info_type, movie_companies, movie_info, movie_info_idx
 where (company_name.id = movie_companies.company_id) And (company_type.kind IS NOT NULL)  And  (((company_type.kind = 'production companies')) Or ((company_type.kind = 'distributors'))) And (info_type.info = 'bottom 10 rank') And (info_type.info = 'budget') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)"
182,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, company_type.kind AS kind, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_7, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, movie_companies, movie_info, movie_info_idx, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind IS NOT NULL)  And  (((company_type.kind = 'production companies')) Or ((company_type.kind = 'distributors'))) And (info_type.info = 'bottom 10 rank') And (info_type.info = 'budget') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv182 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, company_type.kind AS kind, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_7, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, movie_companies, movie_info, movie_info_idx, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind IS NOT NULL)  And  (((company_type.kind = 'production companies')) Or ((company_type.kind = 'distributors'))) And (info_type.info = 'bottom 10 rank') And (info_type.info = 'budget') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id)"
183,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
from info_type, movie_info
 where (info_type.info = 'genres') And (movie_info.info in ('Drama', 'Horror', 'Western', 'Family')) And (movie_info.info_type_id = info_type.id)","create materialized view if not exists mv183 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
from info_type, movie_info
 where (info_type.info = 'genres') And (movie_info.info in ('Drama', 'Horror', 'Western', 'Family')) And (movie_info.info_type_id = info_type.id)"
184,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'rating') And (movie_info_idx.info > '7.0') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv184 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'rating') And (movie_info_idx.info > '7.0') And (movie_info_idx.info_type_id = info_type.id)"
185,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'genres') And (info_type.info = 'rating') And (movie_info.info in ('Drama', 'Horror', 'Western', 'Family')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '7.0') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv185 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'genres') And (info_type.info = 'rating') And (movie_info.info in ('Drama', 'Horror', 'Western', 'Family')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '7.0') And (movie_info_idx.info_type_id = info_type.id)"
186,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id
from company_type, info_type, movie_companies, movie_info, movie_info_idx
 where (company_type.kind = 'production companies') And (info_type.info = 'genres') And (info_type.info = 'rating') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Drama', 'Horror', 'Western', 'Family')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '7.0') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv186 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id
from company_type, info_type, movie_companies, movie_info, movie_info_idx
 where (company_type.kind = 'production companies') And (info_type.info = 'genres') And (info_type.info = 'rating') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Drama', 'Horror', 'Western', 'Family')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '7.0') And (movie_info_idx.info_type_id = info_type.id)"
187,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id
from company_name, company_type, info_type, movie_companies, movie_info, movie_info_idx
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'genres') And (info_type.info = 'rating') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Drama', 'Horror', 'Western', 'Family')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '7.0') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv187 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id
from company_name, company_type, info_type, movie_companies, movie_info, movie_info_idx
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'genres') And (info_type.info = 'rating') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Drama', 'Horror', 'Western', 'Family')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '7.0') And (movie_info_idx.info_type_id = info_type.id)"
188,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, movie_companies, movie_info, movie_info_idx, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'genres') And (info_type.info = 'rating') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Drama', 'Horror', 'Western', 'Family')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info > '7.0') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_companies.movie_id)","create materialized view if not exists mv188 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, movie_companies, movie_info, movie_info_idx, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'genres') And (info_type.info = 'rating') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Drama', 'Horror', 'Western', 'Family')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info > '7.0') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_companies.movie_id)"
189,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
from info_type, movie_info
 where (info_type.info = 'release dates') And (movie_info.info_type_id = info_type.id)","create materialized view if not exists mv189 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
from info_type, movie_info
 where (info_type.info = 'release dates') And (movie_info.info_type_id = info_type.id)"
190,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'rating') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv190 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'rating') And (movie_info_idx.info_type_id = info_type.id)"
191,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6
from company_type, info_type, movie_companies, movie_info_idx
 where (company_type.kind = 'production companies') And (info_type.info = 'rating') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv191 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6
from company_type, info_type, movie_companies, movie_info_idx
 where (company_type.kind = 'production companies') And (info_type.info = 'rating') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)"
192,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id
from company_type, info_type, movie_companies, movie_info, movie_info_idx
 where (company_type.kind = 'production companies') And (info_type.info = 'rating') And (info_type.info = 'release dates') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv192 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id
from company_type, info_type, movie_companies, movie_info, movie_info_idx
 where (company_type.kind = 'production companies') And (info_type.info = 'rating') And (info_type.info = 'release dates') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info_idx.info_type_id = info_type.id)"
193,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id
from company_name, company_type, info_type, movie_companies, movie_info, movie_info_idx
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'rating') And (info_type.info = 'release dates') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv193 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id
from company_name, company_type, info_type, movie_companies, movie_info, movie_info_idx
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'rating') And (info_type.info = 'release dates') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info_idx.info_type_id = info_type.id)"
194,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id, title.kind_id AS kind_id, title.title AS title
from company_name, company_type, info_type, movie_companies, movie_info, movie_info_idx, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'rating') And (info_type.info = 'release dates') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv194 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id, title.kind_id AS kind_id, title.title AS title
from company_name, company_type, info_type, movie_companies, movie_info, movie_info_idx, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'rating') And (info_type.info = 'release dates') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id)"
195,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS company_type_kind_4, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, title.title AS title
from company_name, company_type, info_type, kind_type, movie_companies, movie_info, movie_info_idx, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'rating') And (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv195 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS company_type_kind_4, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, title.title AS title
from company_name, company_type, info_type, kind_type, movie_companies, movie_info, movie_info_idx, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'rating') And (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id)"
196,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
from info_type, movie_info
 where (info_type.info = 'countries') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id)","create materialized view if not exists mv196 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
from info_type, movie_info
 where (info_type.info = 'countries') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id)"
197,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'rating') And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv197 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'rating') And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id)"
198,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv198 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id)"
199,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from info_type, movie_info, movie_info_idx, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv199 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from info_type, movie_info, movie_info_idx, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id)"
200,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_info.info AS movie_info_info_4, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_info, movie_info_idx, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv200 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_info.info AS movie_info_info_4, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_info, movie_info_idx, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)"
201,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_info.info AS movie_info_info_4, movie_info.movie_id AS movie_info_movie_id_5, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_9, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_info, movie_info_idx, movie_keyword, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv201 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_info.info AS movie_info_info_4, movie_info.movie_id AS movie_info_movie_id_5, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_9, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_info, movie_info_idx, movie_keyword, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)"
202,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, movie_info.info AS movie_info_info_6, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_8, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from info_type, keyword, kind_type, movie_info, movie_info_idx, movie_keyword, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv202 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, movie_info.info AS movie_info_info_6, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_8, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from info_type, keyword, kind_type, movie_info, movie_info_idx, movie_keyword, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)"
203,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'rating') And (movie_info_idx.info > '6.0') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv203 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'rating') And (movie_info_idx.info > '6.0') And (movie_info_idx.info_type_id = info_type.id)"
204,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '6.0') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv204 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '6.0') And (movie_info_idx.info_type_id = info_type.id)"
205,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from info_type, movie_info, movie_info_idx, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info > '6.0') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv205 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from info_type, movie_info, movie_info_idx, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info > '6.0') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id)"
206,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from info_type, movie_info, movie_info_idx, movie_keyword, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '6.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv206 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from info_type, movie_info, movie_info_idx, movie_keyword, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '6.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)"
207,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info.info AS movie_info_info_4, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from info_type, keyword, movie_info, movie_info_idx, movie_keyword, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '6.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv207 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info.info AS movie_info_info_4, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from info_type, keyword, movie_info, movie_info_idx, movie_keyword, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '6.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)"
208,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, movie_info.info AS movie_info_info_6, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_8, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from info_type, keyword, kind_type, movie_info, movie_info_idx, movie_keyword, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info > '6.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv208 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, movie_info.info AS movie_info_info_6, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_8, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from info_type, keyword, kind_type, movie_info, movie_info_idx, movie_keyword, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info > '6.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)"
209,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
from info_type, movie_info
 where (info_type.info = 'countries') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id)","create materialized view if not exists mv209 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
from info_type, movie_info
 where (info_type.info = 'countries') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id)"
210,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv210 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id)"
211,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from info_type, movie_info, movie_info_idx, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv211 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from info_type, movie_info, movie_info_idx, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id) And (title.id = movie_info_idx.movie_id)"
212,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_info.info AS movie_info_info_4, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_info, movie_info_idx, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv212 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_info.info AS movie_info_info_4, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_info, movie_info_idx, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)"
213,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_info.info AS movie_info_info_4, movie_info.movie_id AS movie_info_movie_id_5, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_9, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_info, movie_info_idx, movie_keyword, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv213 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_info.info AS movie_info_info_4, movie_info.movie_id AS movie_info_movie_id_5, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_9, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_info, movie_info_idx, movie_keyword, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)"
214,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, movie_info.info AS movie_info_info_6, movie_info.movie_id AS movie_info_movie_id_7, movie_info_idx.info AS movie_info_idx_info_8, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_10, title.production_year AS production_year, title.title AS title
from info_type, keyword, kind_type, movie_info, movie_info_idx, movie_keyword, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv214 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, movie_info.info AS movie_info_info_6, movie_info.movie_id AS movie_info_movie_id_7, movie_info_idx.info AS movie_info_idx_info_8, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_10, title.production_year AS production_year, title.title AS title
from info_type, keyword, kind_type, movie_info, movie_info_idx, movie_keyword, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)"
215,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info.note AS note
from info_type, movie_info
 where (info_type.info = 'release dates') And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%')","create materialized view if not exists mv215 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info.note AS note
from info_type, movie_info
 where (info_type.info = 'release dates') And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%')"
216,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS movie_companies_note_5, movie_info.info AS movie_info_info_6, movie_info.note AS movie_info_note_7
from info_type, movie_companies, movie_info
 where (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%')","create materialized view if not exists mv216 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS movie_companies_note_5, movie_info.info AS movie_info_info_6, movie_info.note AS movie_info_note_7
from info_type, movie_companies, movie_info
 where (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%')"
217,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS movie_companies_note_6, movie_info.info AS movie_info_info_7, movie_info.note AS movie_info_note_8
from company_name, info_type, movie_companies, movie_info
 where (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%')","create materialized view if not exists mv217 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS movie_companies_note_6, movie_info.info AS movie_info_info_7, movie_info.note AS movie_info_note_8
from company_name, info_type, movie_companies, movie_info
 where (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%')"
218,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, movie_companies.movie_id AS movie_id, movie_companies.note AS movie_companies_note_6, movie_info.info AS movie_info_info_7, movie_info.note AS movie_info_note_8
from company_name, company_type, info_type, movie_companies, movie_info
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%')","create materialized view if not exists mv218 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, movie_companies.movie_id AS movie_id, movie_companies.note AS movie_companies_note_6, movie_info.info AS movie_info_info_7, movie_info.note AS movie_info_note_8
from company_name, company_type, info_type, movie_companies, movie_info
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%')"
219,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, movie_companies.movie_id AS movie_id, movie_companies.note AS movie_companies_note_6, movie_info.info AS movie_info_info_7, movie_info.note AS movie_info_note_8, movie_keyword.keyword_id AS keyword_id
from company_name, company_type, info_type, movie_companies, movie_info, movie_keyword
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.movie_id = movie_info.movie_id)","create materialized view if not exists mv219 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, movie_companies.movie_id AS movie_id, movie_companies.note AS movie_companies_note_6, movie_info.info AS movie_info_info_7, movie_info.note AS movie_info_note_8, movie_keyword.keyword_id AS keyword_id
from company_name, company_type, info_type, movie_companies, movie_info, movie_keyword
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.movie_id = movie_info.movie_id)"
220,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, movie_companies.movie_id AS movie_id, movie_companies.note AS movie_companies_note_6, movie_info.info AS movie_info_info_7, movie_info.note AS movie_info_note_8, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, movie_companies, movie_info, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv220 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, movie_companies.movie_id AS movie_id, movie_companies.note AS movie_companies_note_6, movie_info.info AS movie_info_info_7, movie_info.note AS movie_info_note_8, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, movie_companies, movie_info, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id) And (title.id = movie_keyword.movie_id)"
221,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, movie_companies.movie_id AS movie_id, movie_companies.note AS movie_companies_note_7, movie_info.info AS movie_info_info_8, movie_info.note AS movie_info_note_9, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, keyword, movie_companies, movie_info, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv221 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, movie_companies.movie_id AS movie_id, movie_companies.note AS movie_companies_note_7, movie_info.info AS movie_info_info_8, movie_info.note AS movie_info_note_9, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, keyword, movie_companies, movie_info, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id) And (title.id = movie_keyword.movie_id)"
222,"select aka_title.movie_id AS aka_title_movie_id_0, company_name.country_code AS country_code, company_name.id AS company_name_id_2, company_type.id AS company_type_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, movie_companies.movie_id AS movie_companies_movie_id_7, movie_companies.note AS movie_companies_note_8, movie_info.info AS movie_info_info_9, movie_info.note AS movie_info_note_10, title.production_year AS production_year, title.title AS title
from aka_title, company_name, company_type, info_type, keyword, movie_companies, movie_info, movie_keyword, title
 where (aka_title.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv222 as select aka_title.movie_id AS aka_title_movie_id_0, company_name.country_code AS country_code, company_name.id AS company_name_id_2, company_type.id AS company_type_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, movie_companies.movie_id AS movie_companies_movie_id_7, movie_companies.note AS movie_companies_note_8, movie_info.info AS movie_info_info_9, movie_info.note AS movie_info_note_10, title.production_year AS production_year, title.title AS title
from aka_title, company_name, company_type, info_type, keyword, movie_companies, movie_info, movie_keyword, title
 where (aka_title.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id) And (title.id = movie_keyword.movie_id)"
223,"select aka_title.movie_id AS movie_id, info_type.id AS id, info_type.info AS info_type_info_2, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS movie_companies_note_5, movie_info.info AS movie_info_info_6, movie_info.note AS movie_info_note_7
from aka_title, info_type, movie_companies, movie_info
 where (aka_title.movie_id = movie_info.movie_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%')","create materialized view if not exists mv223 as select aka_title.movie_id AS movie_id, info_type.id AS id, info_type.info AS info_type_info_2, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS movie_companies_note_5, movie_info.info AS movie_info_info_6, movie_info.note AS movie_info_note_7
from aka_title, info_type, movie_companies, movie_info
 where (aka_title.movie_id = movie_info.movie_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%')"
224,"select aka_title.movie_id AS movie_id, company_name.country_code AS country_code, company_name.id AS company_name_id_2, company_name.name AS name, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_companies.company_type_id AS company_type_id, movie_companies.note AS movie_companies_note_7, movie_info.info AS movie_info_info_8, movie_info.note AS movie_info_note_9
from aka_title, company_name, info_type, movie_companies, movie_info
 where (aka_title.movie_id = movie_info.movie_id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%')","create materialized view if not exists mv224 as select aka_title.movie_id AS movie_id, company_name.country_code AS country_code, company_name.id AS company_name_id_2, company_name.name AS name, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_companies.company_type_id AS company_type_id, movie_companies.note AS movie_companies_note_7, movie_info.info AS movie_info_info_8, movie_info.note AS movie_info_note_9
from aka_title, company_name, info_type, movie_companies, movie_info
 where (aka_title.movie_id = movie_info.movie_id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%')"
225,"select aka_title.movie_id AS movie_id, company_name.country_code AS country_code, company_name.id AS company_name_id_2, company_name.name AS name, company_type.id AS company_type_id_4, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.note AS movie_companies_note_7, movie_info.info AS movie_info_info_8, movie_info.note AS movie_info_note_9
from aka_title, company_name, company_type, info_type, movie_companies, movie_info
 where (aka_title.movie_id = movie_info.movie_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%')","create materialized view if not exists mv225 as select aka_title.movie_id AS movie_id, company_name.country_code AS country_code, company_name.id AS company_name_id_2, company_name.name AS name, company_type.id AS company_type_id_4, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.note AS movie_companies_note_7, movie_info.info AS movie_info_info_8, movie_info.note AS movie_info_note_9
from aka_title, company_name, company_type, info_type, movie_companies, movie_info
 where (aka_title.movie_id = movie_info.movie_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%')"
226,"select aka_title.movie_id AS movie_id, company_name.country_code AS country_code, company_name.id AS company_name_id_2, company_name.name AS name, company_type.id AS company_type_id_4, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.note AS movie_companies_note_7, movie_info.info AS movie_info_info_8, movie_info.note AS movie_info_note_9, title.production_year AS production_year, title.title AS title
from aka_title, company_name, company_type, info_type, movie_companies, movie_info, title
 where (aka_title.movie_id = movie_info.movie_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (title.id = aka_title.movie_id)","create materialized view if not exists mv226 as select aka_title.movie_id AS movie_id, company_name.country_code AS country_code, company_name.id AS company_name_id_2, company_name.name AS name, company_type.id AS company_type_id_4, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.note AS movie_companies_note_7, movie_info.info AS movie_info_info_8, movie_info.note AS movie_info_note_9, title.production_year AS production_year, title.title AS title
from aka_title, company_name, company_type, info_type, movie_companies, movie_info, title
 where (aka_title.movie_id = movie_info.movie_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (title.id = aka_title.movie_id)"
227,"select aka_title.movie_id AS movie_id, company_name.country_code AS country_code, company_name.id AS company_name_id_2, company_name.name AS name, company_type.id AS company_type_id_4, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.note AS movie_companies_note_7, movie_info.info AS movie_info_info_8, movie_info.note AS movie_info_note_9, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from aka_title, company_name, company_type, info_type, movie_companies, movie_info, movie_keyword, title
 where (aka_title.movie_id = movie_info.movie_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.movie_id = title.id) And (title.id = aka_title.movie_id)","create materialized view if not exists mv227 as select aka_title.movie_id AS movie_id, company_name.country_code AS country_code, company_name.id AS company_name_id_2, company_name.name AS name, company_type.id AS company_type_id_4, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.note AS movie_companies_note_7, movie_info.info AS movie_info_info_8, movie_info.note AS movie_info_note_9, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from aka_title, company_name, company_type, info_type, movie_companies, movie_info, movie_keyword, title
 where (aka_title.movie_id = movie_info.movie_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.movie_id = title.id) And (title.id = aka_title.movie_id)"
228,"select aka_title.movie_id AS movie_id, company_name.country_code AS country_code, company_name.id AS company_name_id_2, company_name.name AS name, company_type.id AS company_type_id_4, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, movie_companies.note AS movie_companies_note_8, movie_info.info AS movie_info_info_9, movie_info.note AS movie_info_note_10, title.production_year AS production_year, title.title AS title
from aka_title, company_name, company_type, info_type, keyword, movie_companies, movie_info, movie_keyword, title
 where (aka_title.movie_id = movie_info.movie_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.movie_id = title.id) And (title.id = aka_title.movie_id)","create materialized view if not exists mv228 as select aka_title.movie_id AS movie_id, company_name.country_code AS country_code, company_name.id AS company_name_id_2, company_name.name AS name, company_type.id AS company_type_id_4, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, movie_companies.note AS movie_companies_note_8, movie_info.info AS movie_info_info_9, movie_info.note AS movie_info_note_10, title.production_year AS production_year, title.title AS title
from aka_title, company_name, company_type, info_type, keyword, movie_companies, movie_info, movie_keyword, title
 where (aka_title.movie_id = movie_info.movie_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.movie_id = title.id) And (title.id = aka_title.movie_id)"
229,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info.note AS note
from info_type, movie_info
 where (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id)","create materialized view if not exists mv229 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info.note AS note
from info_type, movie_info
 where (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id)"
230,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info.note AS note, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from info_type, movie_info, title
 where (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv230 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info.note AS note, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from info_type, movie_info, title
 where (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (title.id = movie_info.movie_id)"
231,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_5, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from info_type, movie_companies, movie_info, title
 where (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv231 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_5, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from info_type, movie_companies, movie_info, title
 where (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (title.id = movie_info.movie_id)"
232,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_6, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from company_name, info_type, movie_companies, movie_info, title
 where (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv232 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_6, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from company_name, info_type, movie_companies, movie_info, title
 where (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (title.id = movie_info.movie_id)"
233,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_6, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, movie_companies, movie_info, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv233 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_6, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, movie_companies, movie_info, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (title.id = movie_info.movie_id)"
234,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_6, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, movie_companies, movie_info, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv234 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_6, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, movie_companies, movie_info, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)"
235,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_7, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, keyword, movie_companies, movie_info, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv235 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_7, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, keyword, movie_companies, movie_info, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)"
236,"select aka_title.movie_id AS movie_id, company_name.country_code AS country_code, company_name.id AS company_name_id_2, company_type.id AS company_type_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, movie_info.info AS movie_info_info_7, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from aka_title, company_name, company_type, info_type, keyword, movie_companies, movie_info, movie_keyword, title
 where (aka_title.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv236 as select aka_title.movie_id AS movie_id, company_name.country_code AS country_code, company_name.id AS company_name_id_2, company_type.id AS company_type_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, movie_info.info AS movie_info_info_7, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from aka_title, company_name, company_type, info_type, keyword, movie_companies, movie_info, movie_keyword, title
 where (aka_title.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)"
237,"select info_type.id AS id, info_type.info AS info, movie_info.movie_id AS movie_id, movie_info.note AS note
from info_type, movie_info
 where (info_type.info = 'release dates') And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')","create materialized view if not exists mv237 as select info_type.id AS id, info_type.info AS info, movie_info.movie_id AS movie_id, movie_info.note AS note
from info_type, movie_info
 where (info_type.info = 'release dates') And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')"
238,"select info_type.id AS id, info_type.info AS info, movie_info.movie_id AS movie_id, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from info_type, movie_info, title
 where (info_type.info = 'release dates') And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%') And (title.id = movie_info.movie_id)","create materialized view if not exists mv238 as select info_type.id AS id, info_type.info AS info, movie_info.movie_id AS movie_id, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from info_type, movie_info, title
 where (info_type.info = 'release dates') And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%') And (title.id = movie_info.movie_id)"
239,"select info_type.id AS id, info_type.info AS info, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from info_type, movie_companies, movie_info, title
 where (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%') And (title.id = movie_info.movie_id)","create materialized view if not exists mv239 as select info_type.id AS id, info_type.info AS info, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from info_type, movie_companies, movie_info, title
 where (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%') And (title.id = movie_info.movie_id)"
240,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from company_name, info_type, movie_companies, movie_info, title
 where (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%') And (title.id = movie_info.movie_id)","create materialized view if not exists mv240 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from company_name, info_type, movie_companies, movie_info, title
 where (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%') And (title.id = movie_info.movie_id)"
241,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, info_type.id AS info_type_id_3, info_type.info AS info, movie_companies.movie_id AS movie_id, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, movie_companies, movie_info, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%') And (title.id = movie_info.movie_id)","create materialized view if not exists mv241 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, info_type.id AS info_type_id_3, info_type.info AS info, movie_companies.movie_id AS movie_id, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, movie_companies, movie_info, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%') And (title.id = movie_info.movie_id)"
242,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, info_type.id AS info_type_id_3, info_type.info AS info, movie_companies.movie_id AS movie_id, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, movie_companies, movie_info, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%') And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv242 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, info_type.id AS info_type_id_3, info_type.info AS info, movie_companies.movie_id AS movie_id, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, movie_companies, movie_info, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%') And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)"
243,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, info_type.id AS info_type_id_3, info_type.info AS info, keyword.id AS keyword_id_5, movie_companies.movie_id AS movie_id, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, keyword, movie_companies, movie_info, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%') And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv243 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, info_type.id AS info_type_id_3, info_type.info AS info, keyword.id AS keyword_id_5, movie_companies.movie_id AS movie_id, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, keyword, movie_companies, movie_info, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%') And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)"
244,"select aka_title.movie_id AS aka_title_movie_id_0, aka_title.title AS aka_title_title_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_type.id AS company_type_id_4, info_type.id AS info_type_id_5, info_type.info AS info, keyword.id AS keyword_id_7, movie_info.movie_id AS movie_info_movie_id_8, movie_info.note AS note, title.production_year AS production_year, title.title AS title_title_11
from aka_title, company_name, company_type, info_type, keyword, movie_companies, movie_info, movie_keyword, title
 where (aka_title.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%') And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv244 as select aka_title.movie_id AS aka_title_movie_id_0, aka_title.title AS aka_title_title_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_type.id AS company_type_id_4, info_type.id AS info_type_id_5, info_type.info AS info, keyword.id AS keyword_id_7, movie_info.movie_id AS movie_info_movie_id_8, movie_info.note AS note, title.production_year AS production_year, title.title AS title_title_11
from aka_title, company_name, company_type, info_type, keyword, movie_companies, movie_info, movie_keyword, title
 where (aka_title.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%') And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)"
245,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, company_name.country_code AS country_code, company_name.id AS company_name_id_3, keyword.id AS keyword_id_4, keyword.keyword AS keyword, movie_companies.movie_id AS movie_companies_movie_id_6, title.episode_nr AS episode_nr, title.title AS title
from cast_info, company_name, keyword, movie_companies, movie_keyword, title
 where (cast_info.movie_id = title.id) And (company_name.country_code = '[us]') And (keyword.keyword = 'character-name-in-title') And (movie_companies.company_id = company_name.id) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv245 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, company_name.country_code AS country_code, company_name.id AS company_name_id_3, keyword.id AS keyword_id_4, keyword.keyword AS keyword, movie_companies.movie_id AS movie_companies_movie_id_6, title.episode_nr AS episode_nr, title.title AS title
from cast_info, company_name, keyword, movie_companies, movie_keyword, title
 where (cast_info.movie_id = title.id) And (company_name.country_code = '[us]') And (keyword.keyword = 'character-name-in-title') And (movie_companies.company_id = company_name.id) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id) And (title.id = movie_keyword.movie_id)"
246,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, company_name.country_code AS country_code, company_name.id AS company_name_id_3, keyword.id AS keyword_id_4, keyword.keyword AS keyword, movie_companies.movie_id AS movie_companies_movie_id_6, name.name AS name, title.episode_nr AS episode_nr, title.title AS title
from cast_info, company_name, keyword, movie_companies, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (company_name.country_code = '[us]') And (keyword.keyword = 'character-name-in-title') And (movie_companies.company_id = company_name.id) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id) And (name.id = cast_info.person_id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv246 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, company_name.country_code AS country_code, company_name.id AS company_name_id_3, keyword.id AS keyword_id_4, keyword.keyword AS keyword, movie_companies.movie_id AS movie_companies_movie_id_6, name.name AS name, title.episode_nr AS episode_nr, title.title AS title
from cast_info, company_name, keyword, movie_companies, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (company_name.country_code = '[us]') And (keyword.keyword = 'character-name-in-title') And (movie_companies.company_id = company_name.id) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id) And (name.id = cast_info.person_id) And (title.id = movie_keyword.movie_id)"
247,"select aka_name.name AS name, aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_2, company_name.country_code AS country_code, company_name.id AS company_name_id_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_companies.movie_id AS movie_companies_movie_id_7, title.episode_nr AS episode_nr, title.title AS title
from aka_name, cast_info, company_name, keyword, movie_companies, movie_keyword, name, title
 where (aka_name.person_id = name.id) And (cast_info.movie_id = title.id) And (company_name.country_code = '[us]') And (keyword.keyword = 'character-name-in-title') And (movie_companies.company_id = company_name.id) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id) And (name.id = cast_info.person_id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv247 as select aka_name.name AS name, aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_2, company_name.country_code AS country_code, company_name.id AS company_name_id_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_companies.movie_id AS movie_companies_movie_id_7, title.episode_nr AS episode_nr, title.title AS title
from aka_name, cast_info, company_name, keyword, movie_companies, movie_keyword, name, title
 where (aka_name.person_id = name.id) And (cast_info.movie_id = title.id) And (company_name.country_code = '[us]') And (keyword.keyword = 'character-name-in-title') And (movie_companies.company_id = company_name.id) And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_companies.movie_id) And (name.id = cast_info.person_id) And (title.id = movie_keyword.movie_id)"
248,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, name.name AS name
from cast_info, name
 where (cast_info.person_id = name.id) And (name.name = '__LIKE__Z%')","create materialized view if not exists mv248 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, name.name AS name
from cast_info, name
 where (cast_info.person_id = name.id) And (name.name = '__LIKE__Z%')"
249,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
from keyword, movie_keyword, title
 where (keyword.keyword = 'character-name-in-title') And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv249 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
from keyword, movie_keyword, title
 where (keyword.keyword = 'character-name-in-title') And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id)"
250,"select keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id
from keyword, movie_companies, movie_keyword, title
 where (keyword.keyword = 'character-name-in-title') And (movie_companies.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv250 as select keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id
from keyword, movie_companies, movie_keyword, title
 where (keyword.keyword = 'character-name-in-title') And (movie_companies.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id)"
251,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_keyword.movie_id AS movie_keyword_movie_id_5, name.name AS name
from cast_info, keyword, movie_companies, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.person_id = name.id) And (keyword.keyword = 'character-name-in-title') And (movie_companies.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (name.name = '__LIKE__Z%') And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv251 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_keyword.movie_id AS movie_keyword_movie_id_5, name.name AS name
from cast_info, keyword, movie_companies, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.person_id = name.id) And (keyword.keyword = 'character-name-in-title') And (movie_companies.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (name.name = '__LIKE__Z%') And (title.id = movie_keyword.movie_id)"
252,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, company_name.id AS company_name_id_2, keyword.id AS keyword_id_3, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_keyword_movie_id_5, name.name AS name
from cast_info, company_name, keyword, movie_companies, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.person_id = name.id) And (company_name.id = movie_companies.company_id) And (keyword.keyword = 'character-name-in-title') And (movie_companies.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (name.name = '__LIKE__Z%') And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv252 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, company_name.id AS company_name_id_2, keyword.id AS keyword_id_3, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_keyword_movie_id_5, name.name AS name
from cast_info, company_name, keyword, movie_companies, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.person_id = name.id) And (company_name.id = movie_companies.company_id) And (keyword.keyword = 'character-name-in-title') And (movie_companies.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (name.name = '__LIKE__Z%') And (title.id = movie_keyword.movie_id)"
253,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, name.name AS name
from cast_info, name
 where (cast_info.person_id = name.id) And (name.name = '__LIKE__X%')","create materialized view if not exists mv253 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, name.name AS name
from cast_info, name
 where (cast_info.person_id = name.id) And (name.name = '__LIKE__X%')"
254,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_keyword.movie_id AS movie_keyword_movie_id_5, name.name AS name
from cast_info, keyword, movie_companies, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.person_id = name.id) And (keyword.keyword = 'character-name-in-title') And (movie_companies.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (name.name = '__LIKE__X%') And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv254 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_keyword.movie_id AS movie_keyword_movie_id_5, name.name AS name
from cast_info, keyword, movie_companies, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.person_id = name.id) And (keyword.keyword = 'character-name-in-title') And (movie_companies.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (name.name = '__LIKE__X%') And (title.id = movie_keyword.movie_id)"
255,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, company_name.id AS company_name_id_2, keyword.id AS keyword_id_3, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_keyword_movie_id_5, name.name AS name
from cast_info, company_name, keyword, movie_companies, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.person_id = name.id) And (company_name.id = movie_companies.company_id) And (keyword.keyword = 'character-name-in-title') And (movie_companies.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (name.name = '__LIKE__X%') And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv255 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, company_name.id AS company_name_id_2, keyword.id AS keyword_id_3, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_keyword_movie_id_5, name.name AS name
from cast_info, company_name, keyword, movie_companies, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.person_id = name.id) And (company_name.id = movie_companies.company_id) And (keyword.keyword = 'character-name-in-title') And (movie_companies.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (name.name = '__LIKE__X%') And (title.id = movie_keyword.movie_id)"
256,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, name.name AS name
from cast_info, name
 where (cast_info.person_id = name.id) And (name.name like '%Bert%')","create materialized view if not exists mv256 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, name.name AS name
from cast_info, name
 where (cast_info.person_id = name.id) And (name.name like '%Bert%')"
257,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_keyword.movie_id AS movie_keyword_movie_id_5, name.name AS name
from cast_info, keyword, movie_companies, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.person_id = name.id) And (keyword.keyword = 'character-name-in-title') And (movie_companies.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (name.name like '%Bert%') And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv257 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_keyword.movie_id AS movie_keyword_movie_id_5, name.name AS name
from cast_info, keyword, movie_companies, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.person_id = name.id) And (keyword.keyword = 'character-name-in-title') And (movie_companies.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (name.name like '%Bert%') And (title.id = movie_keyword.movie_id)"
258,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, company_name.id AS company_name_id_2, keyword.id AS keyword_id_3, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_keyword_movie_id_5, name.name AS name
from cast_info, company_name, keyword, movie_companies, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.person_id = name.id) And (company_name.id = movie_companies.company_id) And (keyword.keyword = 'character-name-in-title') And (movie_companies.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (name.name like '%Bert%') And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv258 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, company_name.id AS company_name_id_2, keyword.id AS keyword_id_3, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_keyword_movie_id_5, name.name AS name
from cast_info, company_name, keyword, movie_companies, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.person_id = name.id) And (company_name.id = movie_companies.company_id) And (keyword.keyword = 'character-name-in-title') And (movie_companies.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (name.name like '%Bert%') And (title.id = movie_keyword.movie_id)"
259,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword
from cast_info, keyword, movie_keyword, title
 where (cast_info.movie_id = title.id) And (keyword.keyword = 'character-name-in-title') And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv259 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword
from cast_info, keyword, movie_keyword, title
 where (cast_info.movie_id = title.id) And (keyword.keyword = 'character-name-in-title') And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id)"
260,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, name.name AS name
from cast_info, keyword, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.person_id = name.id) And (keyword.keyword = 'character-name-in-title') And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = title.id) And (name.name like '%B%') And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv260 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, name.name AS name
from cast_info, keyword, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.person_id = name.id) And (keyword.keyword = 'character-name-in-title') And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = title.id) And (name.name like '%B%') And (title.id = movie_keyword.movie_id)"
261,"select company_name.id AS id, movie_companies.movie_id AS movie_id
from company_name, movie_companies
 where (movie_companies.company_id = company_name.id)","create materialized view if not exists mv261 as select company_name.id AS id, movie_companies.movie_id AS movie_id
from company_name, movie_companies
 where (movie_companies.company_id = company_name.id)"
262,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, company_name.id AS company_name_id_2, keyword.id AS keyword_id_3, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_keyword_movie_id_5, name.name AS name
from cast_info, company_name, keyword, movie_companies, movie_keyword, name, title
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.movie_id = title.id) And (cast_info.person_id = name.id) And (keyword.keyword = 'character-name-in-title') And (movie_companies.company_id = company_name.id) And (movie_keyword.keyword_id = keyword.id) And (name.name like '%B%') And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv262 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, company_name.id AS company_name_id_2, keyword.id AS keyword_id_3, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_keyword_movie_id_5, name.name AS name
from cast_info, company_name, keyword, movie_companies, movie_keyword, name, title
 where (cast_info.movie_id = movie_companies.movie_id) And (cast_info.movie_id = title.id) And (cast_info.person_id = name.id) And (keyword.keyword = 'character-name-in-title') And (movie_companies.company_id = company_name.id) And (movie_keyword.keyword_id = keyword.id) And (name.name like '%B%') And (title.id = movie_keyword.movie_id)"
263,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'votes') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv263 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'votes') And (movie_info_idx.info_type_id = info_type.id)"
264,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'budget') And (info_type.info = 'votes') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv264 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'budget') And (info_type.info = 'votes') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)"
265,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id
from cast_info, info_type, movie_info, movie_info_idx
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(producer)', '(executive producer)')) And (info_type.info = 'budget') And (info_type.info = 'votes') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv265 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id
from cast_info, info_type, movie_info, movie_info_idx
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(producer)', '(executive producer)')) And (info_type.info = 'budget') And (info_type.info = 'votes') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)"
266,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender, name.name AS name
from cast_info, info_type, movie_info, movie_info_idx, name
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(producer)', '(executive producer)')) And (info_type.info = 'budget') And (info_type.info = 'votes') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id)","create materialized view if not exists mv266 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender, name.name AS name
from cast_info, info_type, movie_info, movie_info_idx, name
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(producer)', '(executive producer)')) And (info_type.info = 'budget') And (info_type.info = 'votes') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id)"
267,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender, name.name AS name, title.title AS title
from cast_info, info_type, movie_info, movie_info_idx, name, title
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(producer)', '(executive producer)')) And (info_type.info = 'budget') And (info_type.info = 'votes') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv267 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender, name.name AS name, title.title AS title
from cast_info, info_type, movie_info, movie_info_idx, name, title
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(producer)', '(executive producer)')) And (info_type.info = 'budget') And (info_type.info = 'votes') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (title.id = movie_info.movie_id)"
268,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info.note AS note
from info_type, movie_info
 where (info_type.info = 'genres') And (movie_info.info_type_id = info_type.id) And (movie_info.note IS NULL)  And  (movie_info.info in ('Horror', 'Thriller'))","create materialized view if not exists mv268 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info.note AS note
from info_type, movie_info
 where (info_type.info = 'genres') And (movie_info.info_type_id = info_type.id) And (movie_info.note IS NULL)  And  (movie_info.info in ('Horror', 'Thriller'))"
269,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info.note AS note, movie_info_idx.info AS movie_info_idx_info_5, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'genres') And (info_type.info = 'rating') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.note IS NULL)  And  (movie_info.info in ('Horror', 'Thriller')) And (movie_info_idx.info > '8.0') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv269 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info.note AS note, movie_info_idx.info AS movie_info_idx_info_5, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'genres') And (info_type.info = 'rating') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.note IS NULL)  And  (movie_info.info in ('Horror', 'Thriller')) And (movie_info_idx.info > '8.0') And (movie_info_idx.info_type_id = info_type.id)"
270,"select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info.note AS movie_info_note_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id
from cast_info, info_type, movie_info, movie_info_idx
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'rating') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.note IS NULL)  And  (movie_info.info in ('Horror', 'Thriller')) And (movie_info_idx.info > '8.0') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv270 as select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info.note AS movie_info_note_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id
from cast_info, info_type, movie_info, movie_info_idx
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'rating') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.note IS NULL)  And  (movie_info.info in ('Horror', 'Thriller')) And (movie_info_idx.info > '8.0') And (movie_info_idx.info_type_id = info_type.id)"
271,"select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info.note AS movie_info_note_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender
from cast_info, info_type, movie_info, movie_info_idx, name
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'rating') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.note IS NULL)  And  (movie_info.info in ('Horror', 'Thriller')) And (movie_info_idx.info > '8.0') And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id)","create materialized view if not exists mv271 as select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info.note AS movie_info_note_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender
from cast_info, info_type, movie_info, movie_info_idx, name
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'rating') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.note IS NULL)  And  (movie_info.info in ('Horror', 'Thriller')) And (movie_info_idx.info > '8.0') And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id)"
272,"select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info.note AS movie_info_note_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender, title.production_year AS production_year, title.title AS title
from cast_info, info_type, movie_info, movie_info_idx, name, title
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'rating') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info.note IS NULL)  And  (movie_info.info in ('Horror', 'Thriller')) And (movie_info_idx.info > '8.0') And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (title.id = cast_info.movie_id)","create materialized view if not exists mv272 as select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info.note AS movie_info_note_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender, title.production_year AS production_year, title.title AS title
from cast_info, info_type, movie_info, movie_info_idx, name, title
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'rating') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info.note IS NULL)  And  (movie_info.info in ('Horror', 'Thriller')) And (movie_info_idx.info > '8.0') And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (title.id = cast_info.movie_id)"
273,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
from info_type, movie_info
 where (info_type.info = 'genres') And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id)","create materialized view if not exists mv273 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
from info_type, movie_info
 where (info_type.info = 'genres') And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id)"
274,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv274 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)"
275,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id, title.title AS title
from info_type, movie_info, movie_info_idx, title
 where (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv275 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id, title.title AS title
from info_type, movie_info, movie_info_idx, title
 where (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id) And (title.id = movie_info_idx.movie_id)"
276,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info.movie_id AS movie_info_movie_id_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id, title.title AS title
from cast_info, info_type, movie_info, movie_info_idx, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv276 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info.movie_id AS movie_info_movie_id_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id, title.title AS title
from cast_info, info_type, movie_info, movie_info_idx, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)"
277,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info.movie_id AS movie_info_movie_id_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender, title.title AS title
from cast_info, info_type, movie_info, movie_info_idx, name, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv277 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info.movie_id AS movie_info_movie_id_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender, title.title AS title
from cast_info, info_type, movie_info, movie_info_idx, name, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (title.id = movie_info_idx.movie_id)"
278,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
from info_type, movie_info
 where (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id)","create materialized view if not exists mv278 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
from info_type, movie_info
 where (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id)"
279,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info_type_info_6, movie_info.info AS movie_info_info_7, role_type.role AS role
from cast_info, info_type, movie_info, role_type
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress')","create materialized view if not exists mv279 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info_type_info_6, movie_info.info AS movie_info_info_7, role_type.role AS role
from cast_info, info_type, movie_info, role_type
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress')"
280,"select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info_type_info_6, movie_companies.company_id AS company_id, movie_companies.note AS movie_companies_note_8, movie_info.info AS movie_info_info_9, role_type.role AS role
from cast_info, info_type, movie_companies, movie_info, role_type
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress')","create materialized view if not exists mv280 as select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info_type_info_6, movie_companies.company_id AS company_id, movie_companies.note AS movie_companies_note_8, movie_info.info AS movie_info_info_9, role_type.role AS role
from cast_info, info_type, movie_companies, movie_info, role_type
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress')"
281,"select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, role_type.role AS role
from cast_info, company_name, info_type, movie_companies, movie_info, role_type
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress')","create materialized view if not exists mv281 as select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, role_type.role AS role
from cast_info, company_name, info_type, movie_companies, movie_info, role_type
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress')"
282,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_2, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, role_type.role AS role
from aka_name, cast_info, company_name, info_type, movie_companies, movie_info, role_type
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress')","create materialized view if not exists mv282 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_2, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, role_type.role AS role
from aka_name, cast_info, company_name, info_type, movie_companies, movie_info, role_type
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress')"
283,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_2, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, role_type.role AS role
from aka_name, cast_info, char_name, company_name, info_type, movie_companies, movie_info, role_type
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress')","create materialized view if not exists mv283 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_2, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, role_type.role AS role
from aka_name, cast_info, char_name, company_name, info_type, movie_companies, movie_info, role_type
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress')"
284,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS cast_info_note_1, cast_info.role_id AS role_id, char_name.id AS char_name_id_3, company_name.country_code AS country_code, company_name.id AS company_name_id_5, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, movie_companies.movie_id AS movie_companies_movie_id_8, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, name.gender AS gender, name.name AS name, role_type.role AS role
from aka_name, cast_info, char_name, company_name, info_type, movie_companies, movie_info, name, role_type
 where (aka_name.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (name.id = aka_name.person_id) And (name.id = cast_info.person_id) And (role_type.role = 'actress')","create materialized view if not exists mv284 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS cast_info_note_1, cast_info.role_id AS role_id, char_name.id AS char_name_id_3, company_name.country_code AS country_code, company_name.id AS company_name_id_5, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, movie_companies.movie_id AS movie_companies_movie_id_8, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, name.gender AS gender, name.name AS name, role_type.role AS role
from aka_name, cast_info, char_name, company_name, info_type, movie_companies, movie_info, name, role_type
 where (aka_name.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (name.id = aka_name.person_id) And (name.id = cast_info.person_id) And (role_type.role = 'actress')"
285,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_2, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, company_name, info_type, movie_companies, movie_info, name, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (name.id = aka_name.person_id) And (name.id = cast_info.person_id) And (role_type.role = 'actress') And (title.id = cast_info.movie_id)","create materialized view if not exists mv285 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_2, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, company_name, info_type, movie_companies, movie_info, name, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (name.id = aka_name.person_id) And (name.id = cast_info.person_id) And (role_type.role = 'actress') And (title.id = cast_info.movie_id)"
286,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
from info_type, movie_info
 where (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%2007%')) Or ((movie_info.info = '__LIKE__USA:%2008%'))) And (movie_info.info_type_id = info_type.id)","create materialized view if not exists mv286 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
from info_type, movie_info
 where (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%2007%')) Or ((movie_info.info = '__LIKE__USA:%2008%'))) And (movie_info.info_type_id = info_type.id)"
287,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info_type_info_6, movie_info.info AS movie_info_info_7, role_type.role AS role
from cast_info, info_type, movie_info, role_type
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note = '(voice)') And (cast_info.role_id = role_type.id) And (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%2007%')) Or ((movie_info.info = '__LIKE__USA:%2008%'))) And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress')","create materialized view if not exists mv287 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info_type_info_6, movie_info.info AS movie_info_info_7, role_type.role AS role
from cast_info, info_type, movie_info, role_type
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note = '(voice)') And (cast_info.role_id = role_type.id) And (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%2007%')) Or ((movie_info.info = '__LIKE__USA:%2008%'))) And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress')"
288,"select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info_type_info_6, movie_companies.company_id AS company_id, movie_companies.note AS movie_companies_note_8, movie_info.info AS movie_info_info_9, role_type.role AS role
from cast_info, info_type, movie_companies, movie_info, role_type
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note = '(voice)') And (cast_info.role_id = role_type.id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%2007%')) Or ((movie_info.info = '__LIKE__USA:%2008%'))) And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress')","create materialized view if not exists mv288 as select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info_type_info_6, movie_companies.company_id AS company_id, movie_companies.note AS movie_companies_note_8, movie_info.info AS movie_info_info_9, role_type.role AS role
from cast_info, info_type, movie_companies, movie_info, role_type
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note = '(voice)') And (cast_info.role_id = role_type.id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%2007%')) Or ((movie_info.info = '__LIKE__USA:%2008%'))) And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress')"
289,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_2, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info_type_info_6, movie_companies.company_id AS company_id, movie_companies.note AS movie_companies_note_8, movie_info.info AS movie_info_info_9, role_type.role AS role
from aka_name, cast_info, info_type, movie_companies, movie_info, role_type
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_info.movie_id) And (cast_info.note = '(voice)') And (cast_info.role_id = role_type.id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%2007%')) Or ((movie_info.info = '__LIKE__USA:%2008%'))) And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress')","create materialized view if not exists mv289 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_2, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info_type_info_6, movie_companies.company_id AS company_id, movie_companies.note AS movie_companies_note_8, movie_info.info AS movie_info_info_9, role_type.role AS role
from aka_name, cast_info, info_type, movie_companies, movie_info, role_type
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_info.movie_id) And (cast_info.note = '(voice)') And (cast_info.role_id = role_type.id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%2007%')) Or ((movie_info.info = '__LIKE__USA:%2008%'))) And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress')"
290,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_2, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info_type_info_6, movie_companies.company_id AS company_id, movie_companies.note AS movie_companies_note_8, movie_info.info AS movie_info_info_9, role_type.role AS role
from aka_name, cast_info, char_name, info_type, movie_companies, movie_info, role_type
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_info.movie_id) And (cast_info.note = '(voice)') And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%2007%')) Or ((movie_info.info = '__LIKE__USA:%2008%'))) And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress')","create materialized view if not exists mv290 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_2, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info_type_info_6, movie_companies.company_id AS company_id, movie_companies.note AS movie_companies_note_8, movie_info.info AS movie_info_info_9, role_type.role AS role
from aka_name, cast_info, char_name, info_type, movie_companies, movie_info, role_type
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_info.movie_id) And (cast_info.note = '(voice)') And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%2007%')) Or ((movie_info.info = '__LIKE__USA:%2008%'))) And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress')"
291,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_2, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, role_type.role AS role
from aka_name, cast_info, char_name, company_name, info_type, movie_companies, movie_info, role_type
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_info.movie_id) And (cast_info.note = '(voice)') And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%2007%')) Or ((movie_info.info = '__LIKE__USA:%2008%'))) And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress')","create materialized view if not exists mv291 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_2, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, role_type.role AS role
from aka_name, cast_info, char_name, company_name, info_type, movie_companies, movie_info, role_type
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_info.movie_id) And (cast_info.note = '(voice)') And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%2007%')) Or ((movie_info.info = '__LIKE__USA:%2008%'))) And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress')"
292,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_2, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, name.gender AS gender, name.name AS name, role_type.role AS role
from aka_name, cast_info, char_name, company_name, info_type, movie_companies, movie_info, name, role_type
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_info.movie_id) And (cast_info.note = '(voice)') And (cast_info.person_id = name.id) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%2007%')) Or ((movie_info.info = '__LIKE__USA:%2008%'))) And (movie_info.info_type_id = info_type.id) And (name.id = aka_name.person_id) And (role_type.role = 'actress')","create materialized view if not exists mv292 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_2, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, name.gender AS gender, name.name AS name, role_type.role AS role
from aka_name, cast_info, char_name, company_name, info_type, movie_companies, movie_info, name, role_type
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_info.movie_id) And (cast_info.note = '(voice)') And (cast_info.person_id = name.id) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%2007%')) Or ((movie_info.info = '__LIKE__USA:%2008%'))) And (movie_info.info_type_id = info_type.id) And (name.id = aka_name.person_id) And (role_type.role = 'actress')"
293,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_2, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, company_name, info_type, movie_companies, movie_info, name, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_info.movie_id) And (cast_info.note = '(voice)') And (cast_info.person_id = name.id) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%2007%')) Or ((movie_info.info = '__LIKE__USA:%2008%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (name.id = aka_name.person_id) And (role_type.role = 'actress') And (title.id = movie_info.movie_id)","create materialized view if not exists mv293 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_2, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, company_name, info_type, movie_companies, movie_info, name, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_info.movie_id) And (cast_info.note = '(voice)') And (cast_info.person_id = name.id) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%2007%')) Or ((movie_info.info = '__LIKE__USA:%2008%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (name.id = aka_name.person_id) And (role_type.role = 'actress') And (title.id = movie_info.movie_id)"
294,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info_type_info_6, movie_info.info AS movie_info_info_7, name.gender AS gender, name.name AS name, role_type.role AS role
from cast_info, info_type, movie_info, name, role_type
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (role_type.role = 'actress')","create materialized view if not exists mv294 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info_type_info_6, movie_info.info AS movie_info_info_7, name.gender AS gender, name.name AS name, role_type.role AS role
from cast_info, info_type, movie_info, name, role_type
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (role_type.role = 'actress')"
295,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info_type_info_6, movie_companies.company_id AS company_id, movie_info.info AS movie_info_info_8, name.gender AS gender, name.name AS name, role_type.role AS role
from cast_info, info_type, movie_companies, movie_info, name, role_type
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (role_type.role = 'actress')","create materialized view if not exists mv295 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info_type_info_6, movie_companies.company_id AS company_id, movie_info.info AS movie_info_info_8, name.gender AS gender, name.name AS name, role_type.role AS role
from cast_info, info_type, movie_companies, movie_info, name, role_type
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (role_type.role = 'actress')"
296,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_info.info AS movie_info_info_9, name.gender AS gender, name.name AS name, role_type.role AS role
from cast_info, company_name, info_type, movie_companies, movie_info, name, role_type
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (role_type.role = 'actress')","create materialized view if not exists mv296 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_info.info AS movie_info_info_9, name.gender AS gender, name.name AS name, role_type.role AS role
from cast_info, company_name, info_type, movie_companies, movie_info, name, role_type
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (role_type.role = 'actress')"
297,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_info.info AS movie_info_info_9, name.gender AS gender, name.name AS name, role_type.role AS role
from aka_name, cast_info, company_name, info_type, movie_companies, movie_info, name, role_type
 where (aka_name.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (role_type.role = 'actress')","create materialized view if not exists mv297 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_info.info AS movie_info_info_9, name.gender AS gender, name.name AS name, role_type.role AS role
from aka_name, cast_info, company_name, info_type, movie_companies, movie_info, name, role_type
 where (aka_name.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (role_type.role = 'actress')"
298,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.role_id AS role_id, char_name.id AS char_name_id_3, company_name.country_code AS country_code, company_name.id AS company_name_id_5, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, movie_companies.movie_id AS movie_companies_movie_id_8, movie_info.info AS movie_info_info_9, name.gender AS gender, name.name AS name, role_type.role AS role
from aka_name, cast_info, char_name, company_name, info_type, movie_companies, movie_info, name, role_type
 where (aka_name.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (name.id = aka_name.person_id) And (name.id = cast_info.person_id) And (role_type.role = 'actress')","create materialized view if not exists mv298 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.role_id AS role_id, char_name.id AS char_name_id_3, company_name.country_code AS country_code, company_name.id AS company_name_id_5, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, movie_companies.movie_id AS movie_companies_movie_id_8, movie_info.info AS movie_info_info_9, name.gender AS gender, name.name AS name, role_type.role AS role
from aka_name, cast_info, char_name, company_name, info_type, movie_companies, movie_info, name, role_type
 where (aka_name.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (name.id = aka_name.person_id) And (name.id = cast_info.person_id) And (role_type.role = 'actress')"
299,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.role_id AS role_id, char_name.id AS char_name_id_3, company_name.country_code AS country_code, company_name.id AS company_name_id_5, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, movie_companies.movie_id AS movie_companies_movie_id_8, movie_info.info AS movie_info_info_9, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, company_name, info_type, movie_companies, movie_info, name, role_type, title
 where (aka_name.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (name.id = aka_name.person_id) And (name.id = cast_info.person_id) And (role_type.role = 'actress') And (title.id = movie_companies.movie_id)","create materialized view if not exists mv299 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.role_id AS role_id, char_name.id AS char_name_id_3, company_name.country_code AS country_code, company_name.id AS company_name_id_5, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, movie_companies.movie_id AS movie_companies_movie_id_8, movie_info.info AS movie_info_info_9, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, company_name, info_type, movie_companies, movie_info, name, role_type, title
 where (aka_name.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (name.id = aka_name.person_id) And (name.id = cast_info.person_id) And (role_type.role = 'actress') And (title.id = movie_companies.movie_id)"
300,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info, role_type.role AS role
from cast_info, info_type, movie_info, role_type
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (info_type.info = 'release dates') And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress')","create materialized view if not exists mv300 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info, role_type.role AS role
from cast_info, info_type, movie_info, role_type
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (info_type.info = 'release dates') And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress')"
301,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info, name.gender AS gender, name.name AS name, role_type.role AS role
from cast_info, info_type, movie_info, name, role_type
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (info_type.info = 'release dates') And (movie_info.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (role_type.role = 'actress')","create materialized view if not exists mv301 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info, name.gender AS gender, name.name AS name, role_type.role AS role
from cast_info, info_type, movie_info, name, role_type
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (info_type.info = 'release dates') And (movie_info.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (role_type.role = 'actress')"
302,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
from cast_info, info_type, movie_info, name, role_type, title
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (info_type.info = 'release dates') And (movie_info.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (role_type.role = 'actress') And (title.id = movie_info.movie_id)","create materialized view if not exists mv302 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
from cast_info, info_type, movie_info, name, role_type, title
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (info_type.info = 'release dates') And (movie_info.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (role_type.role = 'actress') And (title.id = movie_info.movie_id)"
303,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_companies_movie_id_8, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
from cast_info, info_type, movie_companies, movie_info, name, role_type, title
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (role_type.role = 'actress') And (title.id = movie_info.movie_id)","create materialized view if not exists mv303 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_companies_movie_id_8, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
from cast_info, info_type, movie_companies, movie_info, name, role_type, title
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (role_type.role = 'actress') And (title.id = movie_info.movie_id)"
304,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info, movie_companies.movie_id AS movie_companies_movie_id_9, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
from cast_info, company_name, info_type, movie_companies, movie_info, name, role_type, title
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (role_type.role = 'actress') And (title.id = movie_info.movie_id)","create materialized view if not exists mv304 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info, movie_companies.movie_id AS movie_companies_movie_id_9, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
from cast_info, company_name, info_type, movie_companies, movie_info, name, role_type, title
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (role_type.role = 'actress') And (title.id = movie_info.movie_id)"
305,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info, movie_companies.movie_id AS movie_companies_movie_id_9, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
from cast_info, char_name, company_name, info_type, movie_companies, movie_info, name, role_type, title
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (role_type.role = 'actress') And (title.id = movie_info.movie_id)","create materialized view if not exists mv305 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info, movie_companies.movie_id AS movie_companies_movie_id_9, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
from cast_info, char_name, company_name, info_type, movie_companies, movie_info, name, role_type, title
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (role_type.role = 'actress') And (title.id = movie_info.movie_id)"
306,"select cast_info.note AS note, cast_info.role_id AS role_id, char_name.id AS char_name_id_2, company_name.country_code AS country_code, company_name.id AS company_name_id_4, info_type.id AS info_type_id_5, info_type.info AS info, movie_companies.movie_id AS movie_companies_movie_id_7, movie_info.movie_id AS movie_info_movie_id_8, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, company_name, info_type, movie_companies, movie_info, name, role_type, title
 where (aka_name.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (name.id = aka_name.person_id) And (name.id = cast_info.person_id) And (role_type.role = 'actress') And (title.id = movie_info.movie_id)","create materialized view if not exists mv306 as select cast_info.note AS note, cast_info.role_id AS role_id, char_name.id AS char_name_id_2, company_name.country_code AS country_code, company_name.id AS company_name_id_4, info_type.id AS info_type_id_5, info_type.info AS info, movie_companies.movie_id AS movie_companies_movie_id_7, movie_info.movie_id AS movie_info_movie_id_8, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, company_name, info_type, movie_companies, movie_info, name, role_type, title
 where (aka_name.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (name.id = aka_name.person_id) And (name.id = cast_info.person_id) And (role_type.role = 'actress') And (title.id = movie_info.movie_id)"
307,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id
from comp_cast_type, complete_cast
 where (comp_cast_type.kind = 'cast') And (complete_cast.subject_id = comp_cast_type.id)","create materialized view if not exists mv307 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id
from comp_cast_type, complete_cast
 where (comp_cast_type.kind = 'cast') And (complete_cast.subject_id = comp_cast_type.id)"
308,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id
from comp_cast_type, complete_cast
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id)","create materialized view if not exists mv308 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id
from comp_cast_type, complete_cast
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id)"
309,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, title
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv309 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, title
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (title.id = complete_cast.movie_id)"
310,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, kind_type.id AS kind_type_id_4, kind_type.kind AS kind_type_kind_5, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, kind_type, title
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (kind_type.id = title.kind_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv310 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, kind_type.id AS kind_type_id_4, kind_type.kind AS kind_type_kind_5, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, kind_type, title
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (kind_type.id = title.kind_id) And (title.id = complete_cast.movie_id)"
311,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS comp_cast_type_kind_4, complete_cast.subject_id AS subject_id, kind_type.id AS kind_type_id_6, kind_type.kind AS kind_type_kind_7, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, kind_type, title
 where (cast_info.movie_id = title.id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (kind_type.id = title.kind_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv311 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS comp_cast_type_kind_4, complete_cast.subject_id AS subject_id, kind_type.id AS kind_type_id_6, kind_type.kind AS kind_type_kind_7, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, kind_type, title
 where (cast_info.movie_id = title.id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (kind_type.id = title.kind_id) And (title.id = complete_cast.movie_id)"
312,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, complete_cast.subject_id AS subject_id, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, complete_cast, kind_type, title
 where (cast_info.movie_id = title.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (kind_type.id = title.kind_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv312 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, complete_cast.subject_id AS subject_id, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, complete_cast, kind_type, title
 where (cast_info.movie_id = title.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (kind_type.id = title.kind_id) And (title.id = complete_cast.movie_id)"
313,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, complete_cast.subject_id AS subject_id, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, complete_cast, kind_type, movie_keyword, title
 where (cast_info.movie_id = title.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (kind_type.id = title.kind_id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv313 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, complete_cast.subject_id AS subject_id, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, complete_cast, kind_type, movie_keyword, title
 where (cast_info.movie_id = title.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (kind_type.id = title.kind_id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)"
314,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_7, keyword.keyword AS keyword, kind_type.id AS kind_type_id_9, kind_type.kind AS kind_type_kind_10, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, complete_cast, keyword, kind_type, movie_keyword, title
 where (cast_info.movie_id = title.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv314 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_7, keyword.keyword AS keyword, kind_type.id AS kind_type_id_9, kind_type.kind AS kind_type_kind_10, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, complete_cast, keyword, kind_type, movie_keyword, title
 where (cast_info.movie_id = title.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)"
315,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS char_name_name_3, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_7, keyword.keyword AS keyword, kind_type.id AS kind_type_id_9, kind_type.kind AS kind_type_kind_10, name.name AS name_name_11, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, complete_cast, keyword, kind_type, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv315 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS char_name_name_3, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_7, keyword.keyword AS keyword, kind_type.id AS kind_type_id_9, kind_type.kind AS kind_type_kind_10, name.name AS name_name_11, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, complete_cast, keyword, kind_type, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = complete_cast.movie_id)"
316,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS comp_cast_type_kind_4, complete_cast.subject_id AS subject_id, kind_type.id AS kind_type_id_6, kind_type.kind AS kind_type_kind_7, name.name AS name, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, kind_type, name, title
 where (cast_info.movie_id = title.id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (kind_type.id = title.kind_id) And (name.id = cast_info.person_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv316 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS comp_cast_type_kind_4, complete_cast.subject_id AS subject_id, kind_type.id AS kind_type_id_6, kind_type.kind AS kind_type_kind_7, name.name AS name, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, kind_type, name, title
 where (cast_info.movie_id = title.id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (kind_type.id = title.kind_id) And (name.id = cast_info.person_id) And (title.id = complete_cast.movie_id)"
317,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS char_name_name_3, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, complete_cast.subject_id AS subject_id, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, name.name AS name_name_9, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, complete_cast, kind_type, name, title
 where (cast_info.movie_id = title.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (kind_type.id = title.kind_id) And (name.id = cast_info.person_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv317 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS char_name_name_3, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, complete_cast.subject_id AS subject_id, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, name.name AS name_name_9, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, complete_cast, kind_type, name, title
 where (cast_info.movie_id = title.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (kind_type.id = title.kind_id) And (name.id = cast_info.person_id) And (title.id = complete_cast.movie_id)"
318,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS char_name_name_3, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, complete_cast.subject_id AS subject_id, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_keyword.keyword_id AS keyword_id, name.name AS name_name_10, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, complete_cast, kind_type, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (kind_type.id = title.kind_id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv318 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS char_name_name_3, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, complete_cast.subject_id AS subject_id, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_keyword.keyword_id AS keyword_id, name.name AS name_name_10, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, complete_cast, kind_type, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (kind_type.id = title.kind_id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = complete_cast.movie_id)"
319,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, kind_type.id AS kind_type_id_4, kind_type.kind AS kind_type_kind_5, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, kind_type, movie_keyword, title
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (kind_type.id = title.kind_id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv319 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, kind_type.id AS kind_type_id_4, kind_type.kind AS kind_type_kind_5, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, kind_type, movie_keyword, title
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (kind_type.id = title.kind_id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)"
320,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, kind_type.id AS kind_type_id_6, kind_type.kind AS kind_type_kind_7, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, keyword, kind_type, movie_keyword, title
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv320 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, kind_type.id AS kind_type_id_6, kind_type.kind AS kind_type_kind_7, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, keyword, kind_type, movie_keyword, title
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)"
321,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS comp_cast_type_kind_4, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, keyword, kind_type, movie_keyword, title
 where (cast_info.movie_id = title.id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv321 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS comp_cast_type_kind_4, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, keyword, kind_type, movie_keyword, title
 where (cast_info.movie_id = title.id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)"
322,"select company_type.id AS id, company_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info
from company_type, movie_companies, movie_info
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')) And (movie_info.movie_id = movie_companies.movie_id)","create materialized view if not exists mv322 as select company_type.id AS id, company_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info
from company_type, movie_companies, movie_info
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')) And (movie_info.movie_id = movie_companies.movie_id)"
323,"select company_type.id AS company_type_id_0, company_type.kind AS kind, link_type.id AS link_type_id_2, link_type.link AS link, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info
from company_type, link_type, movie_companies, movie_info, movie_link
 where (company_type.kind = 'production companies') And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')) And (movie_info.movie_id = movie_companies.movie_id) And (movie_link.link_type_id = link_type.id)","create materialized view if not exists mv323 as select company_type.id AS company_type_id_0, company_type.kind AS kind, link_type.id AS link_type_id_2, link_type.link AS link, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info
from company_type, link_type, movie_companies, movie_info, movie_link
 where (company_type.kind = 'production companies') And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')) And (movie_info.movie_id = movie_companies.movie_id) And (movie_link.link_type_id = link_type.id)"
324,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, link_type.id AS link_type_id_5, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info
from company_name, company_type, link_type, movie_companies, movie_info, movie_link
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')) And (movie_info.movie_id = movie_companies.movie_id) And (movie_link.link_type_id = link_type.id)","create materialized view if not exists mv324 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, link_type.id AS link_type_id_5, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info
from company_name, company_type, link_type, movie_companies, movie_info, movie_link
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')) And (movie_info.movie_id = movie_companies.movie_id) And (movie_link.link_type_id = link_type.id)"
325,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, link_type.id AS link_type_id_5, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.production_year AS production_year, title.title AS title
from company_name, company_type, link_type, movie_companies, movie_info, movie_link, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')) And (movie_info.movie_id = movie_companies.movie_id) And (movie_link.link_type_id = link_type.id) And (movie_link.movie_id = title.id) And (title.id = movie_companies.movie_id)","create materialized view if not exists mv325 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, link_type.id AS link_type_id_5, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.production_year AS production_year, title.title AS title
from company_name, company_type, link_type, movie_companies, movie_info, movie_link, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')) And (movie_info.movie_id = movie_companies.movie_id) And (movie_link.link_type_id = link_type.id) And (movie_link.movie_id = title.id) And (title.id = movie_companies.movie_id)"
326,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, link_type.id AS link_type_id_5, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, movie_keyword.keyword_id AS keyword_id, title.id AS title_id_11, title.production_year AS production_year, title.title AS title
from company_name, company_type, link_type, movie_companies, movie_info, movie_keyword, movie_link, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')) And (movie_info.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id) And (movie_link.movie_id = title.id) And (title.id = movie_companies.movie_id)","create materialized view if not exists mv326 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, link_type.id AS link_type_id_5, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, movie_keyword.keyword_id AS keyword_id, title.id AS title_id_11, title.production_year AS production_year, title.title AS title
from company_name, company_type, link_type, movie_companies, movie_info, movie_keyword, movie_link, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')) And (movie_info.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id) And (movie_link.movie_id = title.id) And (title.id = movie_companies.movie_id)"
327,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.id AS title_id_12, title.production_year AS production_year, title.title AS title
from company_name, company_type, keyword, link_type, movie_companies, movie_info, movie_keyword, movie_link, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (keyword.id = movie_keyword.keyword_id) And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')) And (movie_info.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id) And (movie_link.movie_id = title.id) And (title.id = movie_companies.movie_id)","create materialized view if not exists mv327 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.id AS title_id_12, title.production_year AS production_year, title.title AS title
from company_name, company_type, keyword, link_type, movie_companies, movie_info, movie_keyword, movie_link, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (keyword.id = movie_keyword.keyword_id) And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')) And (movie_info.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id) And (movie_link.movie_id = title.id) And (title.id = movie_companies.movie_id)"
328,"select company_type.id AS id, company_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info
from company_type, movie_companies, movie_info
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (movie_info.info in ('Germany', 'German')) And (movie_info.movie_id = movie_companies.movie_id)","create materialized view if not exists mv328 as select company_type.id AS id, company_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info
from company_type, movie_companies, movie_info
 where (company_type.kind = 'production companies') And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (movie_info.info in ('Germany', 'German')) And (movie_info.movie_id = movie_companies.movie_id)"
329,"select company_type.id AS company_type_id_0, company_type.kind AS kind, link_type.id AS link_type_id_2, link_type.link AS link, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info
from company_type, link_type, movie_companies, movie_info, movie_link
 where (company_type.kind = 'production companies') And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Germany', 'German')) And (movie_info.movie_id = movie_companies.movie_id) And (movie_link.link_type_id = link_type.id)","create materialized view if not exists mv329 as select company_type.id AS company_type_id_0, company_type.kind AS kind, link_type.id AS link_type_id_2, link_type.link AS link, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info
from company_type, link_type, movie_companies, movie_info, movie_link
 where (company_type.kind = 'production companies') And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Germany', 'German')) And (movie_info.movie_id = movie_companies.movie_id) And (movie_link.link_type_id = link_type.id)"
330,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, link_type.id AS link_type_id_5, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info
from company_name, company_type, link_type, movie_companies, movie_info, movie_link
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Germany', 'German')) And (movie_info.movie_id = movie_companies.movie_id) And (movie_link.link_type_id = link_type.id)","create materialized view if not exists mv330 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, link_type.id AS link_type_id_5, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info
from company_name, company_type, link_type, movie_companies, movie_info, movie_link
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Germany', 'German')) And (movie_info.movie_id = movie_companies.movie_id) And (movie_link.link_type_id = link_type.id)"
331,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, link_type.id AS link_type_id_5, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.production_year AS production_year, title.title AS title
from company_name, company_type, link_type, movie_companies, movie_info, movie_link, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Germany', 'German')) And (movie_info.movie_id = movie_companies.movie_id) And (movie_link.link_type_id = link_type.id) And (movie_link.movie_id = title.id) And (title.id = movie_companies.movie_id)","create materialized view if not exists mv331 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, link_type.id AS link_type_id_5, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.production_year AS production_year, title.title AS title
from company_name, company_type, link_type, movie_companies, movie_info, movie_link, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Germany', 'German')) And (movie_info.movie_id = movie_companies.movie_id) And (movie_link.link_type_id = link_type.id) And (movie_link.movie_id = title.id) And (title.id = movie_companies.movie_id)"
332,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, link_type.id AS link_type_id_5, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, movie_keyword.keyword_id AS keyword_id, title.id AS title_id_11, title.production_year AS production_year, title.title AS title
from company_name, company_type, link_type, movie_companies, movie_info, movie_keyword, movie_link, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Germany', 'German')) And (movie_info.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id) And (movie_link.movie_id = title.id) And (title.id = movie_companies.movie_id)","create materialized view if not exists mv332 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, link_type.id AS link_type_id_5, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, movie_keyword.keyword_id AS keyword_id, title.id AS title_id_11, title.production_year AS production_year, title.title AS title
from company_name, company_type, link_type, movie_companies, movie_info, movie_keyword, movie_link, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Germany', 'German')) And (movie_info.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id) And (movie_link.movie_id = title.id) And (title.id = movie_companies.movie_id)"
333,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.id AS title_id_12, title.production_year AS production_year, title.title AS title
from company_name, company_type, keyword, link_type, movie_companies, movie_info, movie_keyword, movie_link, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (keyword.id = movie_keyword.keyword_id) And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Germany', 'German')) And (movie_info.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id) And (movie_link.movie_id = title.id) And (title.id = movie_companies.movie_id)","create materialized view if not exists mv333 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.id AS title_id_12, title.production_year AS production_year, title.title AS title
from company_name, company_type, keyword, link_type, movie_companies, movie_info, movie_keyword, movie_link, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (keyword.id = movie_keyword.keyword_id) And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Germany', 'German')) And (movie_info.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id) And (movie_link.movie_id = title.id) And (title.id = movie_companies.movie_id)"
334,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, link_type.id AS link_type_id_5, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from company_name, company_type, link_type, movie_companies, movie_keyword, movie_link, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id) And (movie_link.movie_id = title.id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv334 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, link_type.id AS link_type_id_5, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from company_name, company_type, link_type, movie_companies, movie_keyword, movie_link, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id) And (movie_link.movie_id = title.id) And (title.id = movie_keyword.movie_id)"
335,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, link_type.id AS link_type_id_5, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from company_name, company_type, link_type, movie_companies, movie_info, movie_keyword, movie_link, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')) And (movie_info.movie_id = movie_link.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id) And (movie_link.movie_id = title.id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv335 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, link_type.id AS link_type_id_5, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from company_name, company_type, link_type, movie_companies, movie_info, movie_keyword, movie_link, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')) And (movie_info.movie_id = movie_link.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id) And (movie_link.movie_id = title.id) And (title.id = movie_keyword.movie_id)"
336,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.production_year AS production_year, title.title AS title
from company_name, company_type, keyword, link_type, movie_companies, movie_info, movie_keyword, movie_link, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (keyword.id = movie_keyword.keyword_id) And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')) And (movie_info.movie_id = movie_link.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id) And (movie_link.movie_id = title.id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv336 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.production_year AS production_year, title.title AS title
from company_name, company_type, keyword, link_type, movie_companies, movie_info, movie_keyword, movie_link, title
 where (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (keyword.id = movie_keyword.keyword_id) And (link_type.link like '%follow%') And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')) And (movie_info.movie_id = movie_link.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id) And (movie_link.movie_id = title.id) And (title.id = movie_keyword.movie_id)"
337,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
from info_type, movie_info
 where (info_type.info = 'countries') And (movie_info.info in ('Germany', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id)","create materialized view if not exists mv337 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
from info_type, movie_info
 where (info_type.info = 'countries') And (movie_info.info in ('Germany', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id)"
338,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'rating') And (movie_info_idx.info < '7.0') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv338 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'rating') And (movie_info_idx.info < '7.0') And (movie_info_idx.info_type_id = info_type.id)"
339,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_info.info in ('Germany', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '7.0') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv339 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_info.info in ('Germany', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '7.0') And (movie_info_idx.info_type_id = info_type.id)"
340,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS movie_info_info_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_companies, movie_info, movie_info_idx
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Germany', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '7.0') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv340 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS movie_info_info_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_companies, movie_info, movie_info_idx
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Germany', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '7.0') And (movie_info_idx.info_type_id = info_type.id)"
341,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS movie_info_info_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id, title.id AS title_id_9, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from info_type, movie_companies, movie_info, movie_info_idx, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Germany', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '7.0') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv341 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS movie_info_info_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id, title.id AS title_id_9, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from info_type, movie_companies, movie_info, movie_info_idx, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Germany', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '7.0') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)"
342,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id, title.id AS title_id_11, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_companies, movie_info, movie_info_idx, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Germany', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '7.0') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv342 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id, title.id AS title_id_11, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_companies, movie_info, movie_info_idx, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Germany', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '7.0') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)"
343,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS movie_info_info_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, title.id AS title_id_13, title.production_year AS production_year, title.title AS title
from company_name, info_type, kind_type, movie_companies, movie_info, movie_info_idx, title
 where (company_name.id = movie_companies.company_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Germany', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '7.0') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv343 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS movie_info_info_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, title.id AS title_id_13, title.production_year AS production_year, title.title AS title
from company_name, info_type, kind_type, movie_companies, movie_info, movie_info_idx, title
 where (company_name.id = movie_companies.company_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Germany', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '7.0') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)"
344,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, kind_type.id AS kind_type_id_6, kind_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS movie_info_info_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, title.id AS title_id_13, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, kind_type, movie_companies, movie_info, movie_info_idx, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Germany', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '7.0') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv344 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, kind_type.id AS kind_type_id_6, kind_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS movie_info_info_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, title.id AS title_id_13, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, kind_type, movie_companies, movie_info, movie_info_idx, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Germany', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '7.0') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)"
345,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, kind_type.id AS kind_type_id_6, kind_type.kind AS kind, movie_companies.movie_id AS movie_companies_movie_id_8, movie_companies.note AS note, movie_info.info AS movie_info_info_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_14, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, kind_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Germany', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '7.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv345 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, kind_type.id AS kind_type_id_6, kind_type.kind AS kind, movie_companies.movie_id AS movie_companies_movie_id_8, movie_companies.note AS note, movie_info.info AS movie_info_info_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_14, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, kind_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Germany', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '7.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)"
346,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind, movie_companies.movie_id AS movie_companies_movie_id_10, movie_companies.note AS note, movie_info.info AS movie_info_info_12, movie_info_idx.info AS movie_info_idx_info_13, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_15, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, keyword, kind_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Germany', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '7.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv346 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind, movie_companies.movie_id AS movie_companies_movie_id_10, movie_companies.note AS note, movie_info.info AS movie_info_info_12, movie_info_idx.info AS movie_info_idx_info_13, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_15, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, keyword, kind_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Germany', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '7.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)"
347,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS movie_info_info_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_companies, movie_info, movie_info_idx
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv347 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS movie_info_info_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_companies, movie_info, movie_info_idx
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id)"
348,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS movie_info_info_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id, title.id AS title_id_9, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from info_type, movie_companies, movie_info, movie_info_idx, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv348 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS movie_info_info_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id, title.id AS title_id_9, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from info_type, movie_companies, movie_info, movie_info_idx, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)"
349,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id, title.id AS title_id_11, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_companies, movie_info, movie_info_idx, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv349 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id, title.id AS title_id_11, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_companies, movie_info, movie_info_idx, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)"
350,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS movie_info_info_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, title.id AS title_id_13, title.production_year AS production_year, title.title AS title
from company_name, info_type, kind_type, movie_companies, movie_info, movie_info_idx, title
 where (company_name.id = movie_companies.company_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv350 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS movie_info_info_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, title.id AS title_id_13, title.production_year AS production_year, title.title AS title
from company_name, info_type, kind_type, movie_companies, movie_info, movie_info_idx, title
 where (company_name.id = movie_companies.company_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)"
351,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, kind_type.id AS kind_type_id_6, kind_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS movie_info_info_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, title.id AS title_id_13, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, kind_type, movie_companies, movie_info, movie_info_idx, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv351 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, kind_type.id AS kind_type_id_6, kind_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS movie_info_info_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, title.id AS title_id_13, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, kind_type, movie_companies, movie_info, movie_info_idx, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)"
352,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, kind_type.id AS kind_type_id_6, kind_type.kind AS kind, movie_companies.movie_id AS movie_companies_movie_id_8, movie_companies.note AS note, movie_info.info AS movie_info_info_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_14, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, kind_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv352 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, kind_type.id AS kind_type_id_6, kind_type.kind AS kind, movie_companies.movie_id AS movie_companies_movie_id_8, movie_companies.note AS note, movie_info.info AS movie_info_info_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_14, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, kind_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)"
353,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind, movie_companies.movie_id AS movie_companies_movie_id_10, movie_companies.note AS note, movie_info.info AS movie_info_info_12, movie_info_idx.info AS movie_info_idx_info_13, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_15, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, keyword, kind_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv353 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind, movie_companies.movie_id AS movie_companies_movie_id_10, movie_companies.note AS note, movie_info.info AS movie_info_info_12, movie_info_idx.info AS movie_info_idx_info_13, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_15, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, keyword, kind_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)"
354,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_companies_movie_id_8, movie_info.info AS movie_info_info_9, movie_info.movie_id AS movie_info_movie_id_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from info_type, keyword, kind_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv354 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_companies_movie_id_8, movie_info.info AS movie_info_info_9, movie_info.movie_id AS movie_info_movie_id_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from info_type, keyword, kind_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)"
355,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, kind_type.id AS kind_type_id_7, kind_type.kind AS kind, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_companies_movie_id_10, movie_info.info AS movie_info_info_11, movie_info.movie_id AS movie_info_movie_id_12, movie_info_idx.info AS movie_info_idx_info_13, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from company_name, info_type, keyword, kind_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv355 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, kind_type.id AS kind_type_id_7, kind_type.kind AS kind, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_companies_movie_id_10, movie_info.info AS movie_info_info_11, movie_info.movie_id AS movie_info_movie_id_12, movie_info_idx.info AS movie_info_idx_info_13, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from company_name, info_type, keyword, kind_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)"
356,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind, movie_companies.movie_id AS movie_companies_movie_id_10, movie_info.info AS movie_info_info_11, movie_info.movie_id AS movie_info_movie_id_12, movie_info_idx.info AS movie_info_idx_info_13, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, keyword, kind_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv356 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind, movie_companies.movie_id AS movie_companies_movie_id_10, movie_info.info AS movie_info_info_11, movie_info.movie_id AS movie_info_movie_id_12, movie_info_idx.info AS movie_info_idx_info_13, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from company_name, company_type, info_type, keyword, kind_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)"
357,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_info.info AS movie_info_info_4, movie_info.movie_id AS movie_id, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_info, title
 where (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv357 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_info.info AS movie_info_info_4, movie_info.movie_id AS movie_id, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_info, title
 where (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (title.id = movie_info.movie_id)"
358,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_7, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_companies, movie_info, title
 where (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv358 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_7, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_companies, movie_info, title
 where (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (title.id = movie_info.movie_id)"
359,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_7, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_companies, movie_info, movie_keyword, title
 where (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv359 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_7, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_companies, movie_info, movie_keyword, title
 where (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)"
360,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id
from comp_cast_type, complete_cast
 where (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id)","create materialized view if not exists mv360 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id
from comp_cast_type, complete_cast
 where (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id)"
361,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind_type_kind_6, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_info.info AS movie_info_info_9, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, info_type, kind_type, movie_companies, movie_info, movie_keyword, title
 where (comp_cast_type.kind = 'completeverified') And (complete_cast.movie_id = title.id) And (complete_cast.status_id = comp_cast_type.id) And (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv361 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind_type_kind_6, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_info.info AS movie_info_info_9, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, info_type, kind_type, movie_companies, movie_info, movie_keyword, title
 where (comp_cast_type.kind = 'completeverified') And (complete_cast.movie_id = title.id) And (complete_cast.status_id = comp_cast_type.id) And (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)"
362,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, complete_cast.movie_id AS movie_id, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_companies.company_type_id AS company_type_id, movie_info.info AS movie_info_info_10, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, complete_cast, info_type, kind_type, movie_companies, movie_info, movie_keyword, title
 where (comp_cast_type.kind = 'completeverified') And (company_name.id = movie_companies.company_id) And (complete_cast.movie_id = title.id) And (complete_cast.status_id = comp_cast_type.id) And (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv362 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, complete_cast.movie_id AS movie_id, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_companies.company_type_id AS company_type_id, movie_info.info AS movie_info_info_10, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, complete_cast, info_type, kind_type, movie_companies, movie_info, movie_keyword, title
 where (comp_cast_type.kind = 'completeverified') And (company_name.id = movie_companies.company_id) And (complete_cast.movie_id = title.id) And (complete_cast.status_id = comp_cast_type.id) And (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)"
363,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_type.id AS company_type_id_4, complete_cast.movie_id AS movie_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, movie_info.info AS movie_info_info_10, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, info_type, kind_type, movie_companies, movie_info, movie_keyword, title
 where (comp_cast_type.kind = 'completeverified') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.movie_id = title.id) And (complete_cast.status_id = comp_cast_type.id) And (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv363 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_type.id AS company_type_id_4, complete_cast.movie_id AS movie_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, movie_info.info AS movie_info_info_10, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, info_type, kind_type, movie_companies, movie_info, movie_keyword, title
 where (comp_cast_type.kind = 'completeverified') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.movie_id = title.id) And (complete_cast.status_id = comp_cast_type.id) And (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)"
364,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_type.id AS company_type_id_4, complete_cast.movie_id AS movie_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, kind_type.id AS kind_type_id_9, kind_type.kind AS kind_type_kind_10, movie_info.info AS movie_info_info_11, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, info_type, keyword, kind_type, movie_companies, movie_info, movie_keyword, title
 where (comp_cast_type.kind = 'completeverified') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.movie_id = title.id) And (complete_cast.status_id = comp_cast_type.id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv364 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_type.id AS company_type_id_4, complete_cast.movie_id AS movie_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, kind_type.id AS kind_type_id_9, kind_type.kind AS kind_type_kind_10, movie_info.info AS movie_info_info_11, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, info_type, keyword, kind_type, movie_companies, movie_info, movie_keyword, title
 where (comp_cast_type.kind = 'completeverified') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.movie_id = title.id) And (complete_cast.status_id = comp_cast_type.id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)"
365,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info.note AS note, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from info_type, movie_info, title
 where (info_type.info = 'release dates') And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (title.id = movie_info.movie_id)","create materialized view if not exists mv365 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info.note AS note, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from info_type, movie_info, title
 where (info_type.info = 'release dates') And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (title.id = movie_info.movie_id)"
366,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_info.info AS movie_info_info_4, movie_info.movie_id AS movie_id, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_info, title
 where (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (title.id = movie_info.movie_id)","create materialized view if not exists mv366 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_info.info AS movie_info_info_4, movie_info.movie_id AS movie_id, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_info, title
 where (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (title.id = movie_info.movie_id)"
367,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_7, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_companies, movie_info, title
 where (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (title.id = movie_info.movie_id)","create materialized view if not exists mv367 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_7, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_companies, movie_info, title
 where (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (title.id = movie_info.movie_id)"
368,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_7, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_companies, movie_info, movie_keyword, title
 where (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv368 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_7, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_companies, movie_info, movie_keyword, title
 where (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)"
369,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind_type_kind_6, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_info.info AS movie_info_info_9, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, info_type, kind_type, movie_companies, movie_info, movie_keyword, title
 where (comp_cast_type.kind = 'completeverified') And (complete_cast.movie_id = title.id) And (complete_cast.status_id = comp_cast_type.id) And (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv369 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind_type_kind_6, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_info.info AS movie_info_info_9, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, info_type, kind_type, movie_companies, movie_info, movie_keyword, title
 where (comp_cast_type.kind = 'completeverified') And (complete_cast.movie_id = title.id) And (complete_cast.status_id = comp_cast_type.id) And (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)"
370,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, complete_cast.movie_id AS movie_id, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_companies.company_type_id AS company_type_id, movie_info.info AS movie_info_info_10, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, complete_cast, info_type, kind_type, movie_companies, movie_info, movie_keyword, title
 where (comp_cast_type.kind = 'completeverified') And (company_name.id = movie_companies.company_id) And (complete_cast.movie_id = title.id) And (complete_cast.status_id = comp_cast_type.id) And (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv370 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, complete_cast.movie_id AS movie_id, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_companies.company_type_id AS company_type_id, movie_info.info AS movie_info_info_10, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, complete_cast, info_type, kind_type, movie_companies, movie_info, movie_keyword, title
 where (comp_cast_type.kind = 'completeverified') And (company_name.id = movie_companies.company_id) And (complete_cast.movie_id = title.id) And (complete_cast.status_id = comp_cast_type.id) And (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)"
371,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_type.id AS company_type_id_4, complete_cast.movie_id AS movie_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, movie_info.info AS movie_info_info_10, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, info_type, kind_type, movie_companies, movie_info, movie_keyword, title
 where (comp_cast_type.kind = 'completeverified') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.movie_id = title.id) And (complete_cast.status_id = comp_cast_type.id) And (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv371 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_type.id AS company_type_id_4, complete_cast.movie_id AS movie_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, movie_info.info AS movie_info_info_10, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, info_type, kind_type, movie_companies, movie_info, movie_keyword, title
 where (comp_cast_type.kind = 'completeverified') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.movie_id = title.id) And (complete_cast.status_id = comp_cast_type.id) And (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)"
372,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_type.id AS company_type_id_4, complete_cast.movie_id AS movie_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, kind_type.id AS kind_type_id_10, kind_type.kind AS kind_type_kind_11, movie_info.info AS movie_info_info_12, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, info_type, keyword, kind_type, movie_companies, movie_info, movie_keyword, title
 where (comp_cast_type.kind = 'completeverified') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.movie_id = title.id) And (complete_cast.status_id = comp_cast_type.id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv372 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_type.id AS company_type_id_4, complete_cast.movie_id AS movie_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, kind_type.id AS kind_type_id_10, kind_type.kind AS kind_type_kind_11, movie_info.info AS movie_info_info_12, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, info_type, keyword, kind_type, movie_companies, movie_info, movie_keyword, title
 where (comp_cast_type.kind = 'completeverified') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.movie_id = title.id) And (complete_cast.status_id = comp_cast_type.id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)"
373,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_8, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from company_name, info_type, kind_type, movie_companies, movie_info, title
 where (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv373 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_8, movie_info.note AS note, title.production_year AS production_year, title.title AS title
from company_name, info_type, kind_type, movie_companies, movie_info, title
 where (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (title.id = movie_info.movie_id)"
374,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_8, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from company_name, info_type, kind_type, movie_companies, movie_info, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv374 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_8, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from company_name, info_type, kind_type, movie_companies, movie_info, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)"
375,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
from info_type, movie_info
 where (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id)","create materialized view if not exists mv375 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
from info_type, movie_info
 where (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id)"
376,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from info_type, movie_info, title
 where (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv376 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from info_type, movie_info, title
 where (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (title.id = movie_info.movie_id)"
377,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info_type_info_6, movie_info.info AS movie_info_info_7, title.production_year AS production_year, title.title AS title
from cast_info, info_type, movie_info, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv377 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info_type_info_6, movie_info.info AS movie_info_info_7, title.production_year AS production_year, title.title AS title
from cast_info, info_type, movie_info, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (title.id = movie_info.movie_id)"
378,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info_type_info_6, movie_info.info AS movie_info_info_7, role_type.role AS role, title.production_year AS production_year, title.title AS title
from cast_info, info_type, movie_info, role_type, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress') And (title.id = movie_info.movie_id)","create materialized view if not exists mv378 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info_type_info_6, movie_info.info AS movie_info_info_7, role_type.role AS role, title.production_year AS production_year, title.title AS title
from cast_info, info_type, movie_info, role_type, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress') And (title.id = movie_info.movie_id)"
379,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info_type_info_6, movie_info.info AS movie_info_info_7, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, info_type, movie_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress') And (title.id = movie_info.movie_id)","create materialized view if not exists mv379 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info_type_info_6, movie_info.info AS movie_info_info_7, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, info_type, movie_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress') And (title.id = movie_info.movie_id)"
380,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info_type_info_6, movie_companies.company_id AS company_id, movie_info.info AS movie_info_info_8, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, info_type, movie_companies, movie_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress') And (title.id = movie_info.movie_id)","create materialized view if not exists mv380 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, info_type.id AS id, info_type.info AS info_type_info_6, movie_companies.company_id AS company_id, movie_info.info AS movie_info_info_8, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, info_type, movie_companies, movie_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress') And (title.id = movie_info.movie_id)"
381,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_info.info AS movie_info_info_9, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, company_name, info_type, movie_companies, movie_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress') And (title.id = movie_info.movie_id)","create materialized view if not exists mv381 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_info.info AS movie_info_info_9, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, company_name, info_type, movie_companies, movie_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (role_type.role = 'actress') And (title.id = movie_info.movie_id)"
382,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_info.info AS movie_info_info_9, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, company_name, info_type, movie_companies, movie_info, name, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (name.id = aka_name.person_id) And (role_type.role = 'actress') And (title.id = movie_info.movie_id)","create materialized view if not exists mv382 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_info.info AS movie_info_info_9, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, company_name, info_type, movie_companies, movie_info, name, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (name.id = aka_name.person_id) And (role_type.role = 'actress') And (title.id = movie_info.movie_id)"
383,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_info.info AS movie_info_info_9, movie_keyword.keyword_id AS keyword_id, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, company_name, info_type, movie_companies, movie_info, movie_keyword, name, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (role_type.role = 'actress') And (title.id = movie_info.movie_id)","create materialized view if not exists mv383 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_info.info AS movie_info_info_9, movie_keyword.keyword_id AS keyword_id, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, company_name, info_type, movie_companies, movie_info, movie_keyword, name, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (role_type.role = 'actress') And (title.id = movie_info.movie_id)"
384,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info.info AS movie_info_info_11, movie_keyword.movie_id AS movie_keyword_movie_id_12, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, company_name, info_type, keyword, movie_companies, movie_info, movie_keyword, name, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (role_type.role = 'actress') And (title.id = movie_info.movie_id)","create materialized view if not exists mv384 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info.info AS movie_info_info_11, movie_keyword.movie_id AS movie_keyword_movie_id_12, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, company_name, info_type, keyword, movie_companies, movie_info, movie_keyword, name, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (cast_info.role_id = role_type.id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (role_type.role = 'actress') And (title.id = movie_info.movie_id)"
385,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, company_name.country_code AS country_code, company_name.id AS company_name_id_7, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, keyword.id AS keyword_id_10, keyword.keyword AS keyword, movie_info.info AS movie_info_info_12, movie_keyword.movie_id AS movie_keyword_movie_id_13, name.gender AS gender, name.name AS name_name_15, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, company_name, info_type, keyword, movie_companies, movie_info, movie_keyword, name, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (role_type.role = 'actress') And (title.id = movie_info.movie_id)","create materialized view if not exists mv385 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, company_name.country_code AS country_code, company_name.id AS company_name_id_7, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, keyword.id AS keyword_id_10, keyword.keyword AS keyword, movie_info.info AS movie_info_info_12, movie_keyword.movie_id AS movie_keyword_movie_id_13, name.gender AS gender, name.name AS name_name_15, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, company_name, info_type, keyword, movie_companies, movie_info, movie_keyword, name, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (cast_info.role_id = role_type.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (role_type.role = 'actress') And (title.id = movie_info.movie_id)"
386,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, info_type.id AS id, info_type.info AS info_type_info_7, movie_info.info AS movie_info_info_8, title.production_year AS production_year, title.title AS title
from cast_info, char_name, info_type, movie_info, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (char_name.id = cast_info.person_role_id) And (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv386 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, info_type.id AS id, info_type.info AS info_type_info_7, movie_info.info AS movie_info_info_8, title.production_year AS production_year, title.title AS title
from cast_info, char_name, info_type, movie_info, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (char_name.id = cast_info.person_role_id) And (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (title.id = movie_info.movie_id)"
387,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, info_type.id AS id, info_type.info AS info_type_info_7, movie_info.info AS movie_info_info_8, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, info_type, movie_info, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (char_name.id = cast_info.person_role_id) And (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv387 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, info_type.id AS id, info_type.info AS info_type_info_7, movie_info.info AS movie_info_info_8, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, info_type, movie_info, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (char_name.id = cast_info.person_role_id) And (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (title.id = movie_info.movie_id)"
388,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, info_type.id AS id, info_type.info AS info_type_info_7, movie_info.info AS movie_info_info_8, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, info_type, movie_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (char_name.id = cast_info.person_role_id) And (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (role_type.id = cast_info.role_id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv388 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, info_type.id AS id, info_type.info AS info_type_info_7, movie_info.info AS movie_info_info_8, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, info_type, movie_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (char_name.id = cast_info.person_role_id) And (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (role_type.id = cast_info.role_id) And (title.id = movie_info.movie_id)"
389,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, info_type.id AS id, info_type.info AS info_type_info_7, movie_info.info AS movie_info_info_8, movie_keyword.keyword_id AS keyword_id, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, info_type, movie_info, movie_keyword, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (char_name.id = cast_info.person_role_id) And (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (role_type.id = cast_info.role_id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv389 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, info_type.id AS id, info_type.info AS info_type_info_7, movie_info.info AS movie_info_info_8, movie_keyword.keyword_id AS keyword_id, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, info_type, movie_info, movie_keyword, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (char_name.id = cast_info.person_role_id) And (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (role_type.id = cast_info.role_id) And (title.id = movie_info.movie_id)"
390,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_info.info AS movie_info_info_10, movie_keyword.movie_id AS movie_keyword_movie_id_11, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, info_type, keyword, movie_info, movie_keyword, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (char_name.id = cast_info.person_role_id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (role_type.id = cast_info.role_id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv390 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_info.info AS movie_info_info_10, movie_keyword.movie_id AS movie_keyword_movie_id_11, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, info_type, keyword, movie_info, movie_keyword, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (char_name.id = cast_info.person_role_id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (role_type.id = cast_info.role_id) And (title.id = movie_info.movie_id)"
391,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_info.info AS movie_info_info_10, movie_keyword.movie_id AS movie_keyword_movie_id_11, name.gender AS gender, name.name AS name_name_13, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, info_type, keyword, movie_info, movie_keyword, name, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (role_type.id = cast_info.role_id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv391 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_info.info AS movie_info_info_10, movie_keyword.movie_id AS movie_keyword_movie_id_11, name.gender AS gender, name.name AS name_name_13, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, info_type, keyword, movie_info, movie_keyword, name, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (role_type.id = cast_info.role_id) And (title.id = movie_info.movie_id)"
392,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_info.info AS movie_info_info_11, movie_keyword.movie_id AS movie_keyword_movie_id_12, name.gender AS gender, name.name AS name_name_14, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, info_type, keyword, movie_companies, movie_info, movie_keyword, name, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (role_type.id = cast_info.role_id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv392 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_info.info AS movie_info_info_11, movie_keyword.movie_id AS movie_keyword_movie_id_12, name.gender AS gender, name.name AS name_name_14, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, info_type, keyword, movie_companies, movie_info, movie_keyword, name, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (role_type.id = cast_info.role_id) And (title.id = movie_info.movie_id)"
393,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, company_name.country_code AS country_code, company_name.id AS company_name_id_7, company_name.name AS company_name_name_8, info_type.id AS info_type_id_9, info_type.info AS info_type_info_10, keyword.id AS keyword_id_11, keyword.keyword AS keyword, movie_info.info AS movie_info_info_13, movie_keyword.movie_id AS movie_keyword_movie_id_14, name.gender AS gender, name.name AS name_name_16, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, company_name, info_type, keyword, movie_companies, movie_info, movie_keyword, name, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (role_type.id = cast_info.role_id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv393 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, company_name.country_code AS country_code, company_name.id AS company_name_id_7, company_name.name AS company_name_name_8, info_type.id AS info_type_id_9, info_type.info AS info_type_info_10, keyword.id AS keyword_id_11, keyword.keyword AS keyword, movie_info.info AS movie_info_info_13, movie_keyword.movie_id AS movie_keyword_movie_id_14, name.gender AS gender, name.name AS name_name_16, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, company_name, info_type, keyword, movie_companies, movie_info, movie_keyword, name, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (movie_info.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (role_type.id = cast_info.role_id) And (title.id = movie_info.movie_id)"
394,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
from info_type, movie_info
 where (info_type.info = 'genres') And (movie_info.info = 'Horror') And (movie_info.info_type_id = info_type.id)","create materialized view if not exists mv394 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
from info_type, movie_info
 where (info_type.info = 'genres') And (movie_info.info = 'Horror') And (movie_info.info_type_id = info_type.id)"
395,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_info.info = 'Horror') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv395 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_info.info = 'Horror') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)"
396,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id
from info_type, movie_info, movie_info_idx, movie_keyword
 where (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_info.info = 'Horror') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = movie_info.movie_id)","create materialized view if not exists mv396 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id
from info_type, movie_info, movie_info_idx, movie_keyword
 where (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_info.info = 'Horror') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = movie_info.movie_id)"
397,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info.info AS movie_info_info_4, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id
from info_type, keyword, movie_info, movie_info_idx, movie_keyword
 where (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_info.info = 'Horror') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = movie_info.movie_id)","create materialized view if not exists mv397 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info.info AS movie_info_info_4, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id
from info_type, keyword, movie_info, movie_info_idx, movie_keyword
 where (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_info.info = 'Horror') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = movie_info.movie_id)"
398,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_info.info AS movie_info_info_7, movie_info_idx.info AS movie_info_idx_info_8, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_10
from cast_info, info_type, keyword, movie_info, movie_info_idx, movie_keyword
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_info.info = 'Horror') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = movie_info.movie_id)","create materialized view if not exists mv398 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_info.info AS movie_info_info_7, movie_info_idx.info AS movie_info_idx_info_8, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_10
from cast_info, info_type, keyword, movie_info, movie_info_idx, movie_keyword
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_info.info = 'Horror') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = movie_info.movie_id)"
399,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_info.info AS movie_info_info_7, movie_info_idx.info AS movie_info_idx_info_8, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_10, name.gender AS gender, name.name AS name
from cast_info, info_type, keyword, movie_info, movie_info_idx, movie_keyword, name
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_info.info = 'Horror') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = movie_info.movie_id) And (name.id = cast_info.person_id)","create materialized view if not exists mv399 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_info.info AS movie_info_info_7, movie_info_idx.info AS movie_info_idx_info_8, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_10, name.gender AS gender, name.name AS name
from cast_info, info_type, keyword, movie_info, movie_info_idx, movie_keyword, name
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_info.info = 'Horror') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = movie_info.movie_id) And (name.id = cast_info.person_id)"
400,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_info.info AS movie_info_info_7, movie_info_idx.info AS movie_info_idx_info_8, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender, name.name AS name, title.title AS title
from cast_info, info_type, keyword, movie_info, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_info.info = 'Horror') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv400 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_info.info AS movie_info_info_7, movie_info_idx.info AS movie_info_idx_info_8, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender, name.name AS name, title.title AS title
from cast_info, info_type, keyword, movie_info, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_info.info = 'Horror') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_keyword.movie_id)"
401,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from info_type, movie_info, movie_info_idx, title
 where (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_info.info = 'Horror') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv401 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from info_type, movie_info, movie_info_idx, title
 where (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_info.info = 'Horror') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id) And (title.id = movie_info_idx.movie_id)"
402,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info.movie_id AS movie_info_movie_id_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from cast_info, info_type, movie_info, movie_info_idx, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_info.info = 'Horror') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv402 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info.movie_id AS movie_info_movie_id_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from cast_info, info_type, movie_info, movie_info_idx, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_info.info = 'Horror') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)"
403,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info.movie_id AS movie_info_movie_id_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from cast_info, info_type, movie_info, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_info.info = 'Horror') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv403 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info.movie_id AS movie_info_movie_id_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from cast_info, info_type, movie_info, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_info.info = 'Horror') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)"
404,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_info.info AS movie_info_info_7, movie_info.movie_id AS movie_info_movie_id_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from cast_info, info_type, keyword, movie_info, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_info.info = 'Horror') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv404 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_info.info AS movie_info_info_7, movie_info.movie_id AS movie_info_movie_id_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from cast_info, info_type, keyword, movie_info, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_info.info = 'Horror') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)"
405,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_info.info AS movie_info_info_7, movie_info.movie_id AS movie_info_movie_id_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender, name.name AS name, title.production_year AS production_year, title.title AS title
from cast_info, info_type, keyword, movie_info, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_info.info = 'Horror') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv405 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_info.info AS movie_info_info_7, movie_info.movie_id AS movie_info_movie_id_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender, name.name AS name, title.production_year AS production_year, title.title AS title
from cast_info, info_type, keyword, movie_info, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_info.info = 'Horror') And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_info_idx.movie_id)"
406,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id
from info_type, movie_info, movie_info_idx, movie_keyword
 where (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = movie_info.movie_id)","create materialized view if not exists mv406 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id
from info_type, movie_info, movie_info_idx, movie_keyword
 where (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = movie_info.movie_id)"
407,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info.info AS movie_info_info_4, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id
from info_type, keyword, movie_info, movie_info_idx, movie_keyword
 where (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = movie_info.movie_id)","create materialized view if not exists mv407 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info.info AS movie_info_info_4, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id
from info_type, keyword, movie_info, movie_info_idx, movie_keyword
 where (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = movie_info.movie_id)"
408,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info.info AS movie_info_info_4, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id, title.title AS title
from info_type, keyword, movie_info, movie_info_idx, movie_keyword, title
 where (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv408 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info.info AS movie_info_info_4, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id, title.title AS title
from info_type, keyword, movie_info, movie_info_idx, movie_keyword, title
 where (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id) And (title.id = movie_keyword.movie_id)"
409,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_info.info AS movie_info_info_7, movie_info.movie_id AS movie_info_movie_id_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id, title.title AS title
from cast_info, info_type, keyword, movie_info, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv409 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_info.info AS movie_info_info_7, movie_info.movie_id AS movie_info_movie_id_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id, title.title AS title
from cast_info, info_type, keyword, movie_info, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_keyword.movie_id)"
410,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_info.info AS movie_info_info_7, movie_info.movie_id AS movie_info_movie_id_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender, name.name AS name, title.title AS title
from cast_info, info_type, keyword, movie_info, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv410 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_info.info AS movie_info_info_7, movie_info.movie_id AS movie_info_movie_id_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender, name.name AS name, title.title AS title
from cast_info, info_type, keyword, movie_info, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_keyword.movie_id)"
411,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, kind_type.id AS kind_type_id_3, kind_type.kind AS kind_type_kind_4, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, kind_type, movie_info_idx, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (kind_type.id = title.kind_id) And (movie_info_idx.info > '7.0') And (movie_info_idx.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv411 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, kind_type.id AS kind_type_id_3, kind_type.kind AS kind_type_kind_4, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, kind_type, movie_info_idx, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (kind_type.id = title.kind_id) And (movie_info_idx.info > '7.0') And (movie_info_idx.movie_id = title.id) And (title.id = complete_cast.movie_id)"
412,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, kind_type.id AS kind_type_id_3, kind_type.kind AS kind_type_kind_4, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, kind_type, movie_info_idx, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (kind_type.id = title.kind_id) And (movie_info_idx.info > '7.0') And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv412 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, kind_type.id AS kind_type_id_3, kind_type.kind AS kind_type_kind_4, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, kind_type, movie_info_idx, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (kind_type.id = title.kind_id) And (movie_info_idx.info > '7.0') And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)"
413,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS complete_cast_movie_id_2, keyword.id AS keyword_id_3, keyword.keyword AS keyword, kind_type.id AS kind_type_id_5, kind_type.kind AS kind_type_kind_6, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_9, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, keyword, kind_type, movie_info_idx, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info_idx.info > '7.0') And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv413 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS complete_cast_movie_id_2, keyword.id AS keyword_id_3, keyword.keyword AS keyword, kind_type.id AS kind_type_id_5, kind_type.kind AS kind_type_kind_6, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_9, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, keyword, kind_type, movie_info_idx, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info_idx.info > '7.0') And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)"
414,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS complete_cast_movie_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_info_idx.info AS movie_info_idx_info_9, movie_keyword.movie_id AS movie_keyword_movie_id_10, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, info_type, keyword, kind_type, movie_info_idx, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info_idx.info > '7.0') And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv414 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS complete_cast_movie_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_info_idx.info AS movie_info_idx_info_9, movie_keyword.movie_id AS movie_keyword_movie_id_10, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, info_type, keyword, kind_type, movie_info_idx, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info_idx.info > '7.0') And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)"
415,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS comp_cast_type_kind_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, movie_info_idx.info AS movie_info_idx_info_10, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_12, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, info_type, keyword, kind_type, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info_idx.info > '7.0') And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv415 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS comp_cast_type_kind_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, movie_info_idx.info AS movie_info_idx_info_10, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_12, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, info_type, keyword, kind_type, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info_idx.info > '7.0') And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)"
416,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, kind_type.id AS kind_type_id_9, kind_type.kind AS kind_type_kind_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_13, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, complete_cast, info_type, keyword, kind_type, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info_idx.info > '7.0') And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv416 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, kind_type.id AS kind_type_id_9, kind_type.kind AS kind_type_kind_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_13, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, complete_cast, info_type, keyword, kind_type, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info_idx.info > '7.0') And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)"
417,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS char_name_name_3, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, kind_type.id AS kind_type_id_9, kind_type.kind AS kind_type_kind_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_13, name.name AS name_name_14, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, complete_cast, info_type, keyword, kind_type, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info_idx.info > '7.0') And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv417 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS char_name_name_3, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, kind_type.id AS kind_type_id_9, kind_type.kind AS kind_type_kind_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_13, name.name AS name_name_14, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, complete_cast, info_type, keyword, kind_type, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info_idx.info > '7.0') And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = complete_cast.movie_id)"
418,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, kind_type.id AS kind_type_id_3, kind_type.kind AS kind_type_kind_4, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, kind_type, movie_info_idx, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (kind_type.id = title.kind_id) And (movie_info_idx.info > '8.0') And (movie_info_idx.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv418 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, kind_type.id AS kind_type_id_3, kind_type.kind AS kind_type_kind_4, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, kind_type, movie_info_idx, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (kind_type.id = title.kind_id) And (movie_info_idx.info > '8.0') And (movie_info_idx.movie_id = title.id) And (title.id = complete_cast.movie_id)"
419,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind_type_kind_6, movie_info_idx.info AS movie_info_idx_info_7, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, info_type, kind_type, movie_info_idx, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (kind_type.id = title.kind_id) And (movie_info_idx.info > '8.0') And (movie_info_idx.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv419 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind_type_kind_6, movie_info_idx.info AS movie_info_idx_info_7, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, info_type, kind_type, movie_info_idx, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (kind_type.id = title.kind_id) And (movie_info_idx.info > '8.0') And (movie_info_idx.movie_id = title.id) And (title.id = complete_cast.movie_id)"
420,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind_type_kind_6, movie_info_idx.info AS movie_info_idx_info_7, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, info_type, kind_type, movie_info_idx, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (kind_type.id = title.kind_id) And (movie_info_idx.info > '8.0') And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv420 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind_type_kind_6, movie_info_idx.info AS movie_info_idx_info_7, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, info_type, kind_type, movie_info_idx, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (kind_type.id = title.kind_id) And (movie_info_idx.info > '8.0') And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)"
421,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS complete_cast_movie_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_info_idx.info AS movie_info_idx_info_9, movie_keyword.movie_id AS movie_keyword_movie_id_10, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, info_type, keyword, kind_type, movie_info_idx, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info_idx.info > '8.0') And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv421 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS complete_cast_movie_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_info_idx.info AS movie_info_idx_info_9, movie_keyword.movie_id AS movie_keyword_movie_id_10, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, info_type, keyword, kind_type, movie_info_idx, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info_idx.info > '8.0') And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)"
422,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS comp_cast_type_kind_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, movie_info_idx.info AS movie_info_idx_info_10, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_12, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, info_type, keyword, kind_type, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info_idx.info > '8.0') And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv422 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS comp_cast_type_kind_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, movie_info_idx.info AS movie_info_idx_info_10, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_12, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, info_type, keyword, kind_type, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info_idx.info > '8.0') And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)"
423,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, kind_type.id AS kind_type_id_9, kind_type.kind AS kind_type_kind_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_13, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, complete_cast, info_type, keyword, kind_type, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info_idx.info > '8.0') And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv423 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, kind_type.id AS kind_type_id_9, kind_type.kind AS kind_type_kind_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_13, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, complete_cast, info_type, keyword, kind_type, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info_idx.info > '8.0') And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)"
424,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, kind_type.id AS kind_type_id_9, kind_type.kind AS kind_type_kind_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_13, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, complete_cast, info_type, keyword, kind_type, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info_idx.info > '8.0') And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv424 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, kind_type.id AS kind_type_id_9, kind_type.kind AS kind_type_kind_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_13, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, complete_cast, info_type, keyword, kind_type, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info_idx.info > '8.0') And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = complete_cast.movie_id)"
425,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, kind_type.id AS kind_type_id_3, kind_type.kind AS kind_type_kind_4, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, kind_type, movie_info_idx, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (kind_type.id = title.kind_id) And (movie_info_idx.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv425 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, kind_type.id AS kind_type_id_3, kind_type.kind AS kind_type_kind_4, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, kind_type, movie_info_idx, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (kind_type.id = title.kind_id) And (movie_info_idx.movie_id = title.id) And (title.id = complete_cast.movie_id)"
426,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, kind_type.id AS kind_type_id_3, kind_type.kind AS kind_type_kind_4, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, kind_type, movie_info_idx, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (kind_type.id = title.kind_id) And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv426 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, kind_type.id AS kind_type_id_3, kind_type.kind AS kind_type_kind_4, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, kind_type, movie_info_idx, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (kind_type.id = title.kind_id) And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)"
427,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS complete_cast_movie_id_2, keyword.id AS keyword_id_3, keyword.keyword AS keyword, kind_type.id AS kind_type_id_5, kind_type.kind AS kind_type_kind_6, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_9, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, keyword, kind_type, movie_info_idx, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv427 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS complete_cast_movie_id_2, keyword.id AS keyword_id_3, keyword.keyword AS keyword, kind_type.id AS kind_type_id_5, kind_type.kind AS kind_type_kind_6, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_9, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, keyword, kind_type, movie_info_idx, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)"
428,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS complete_cast_movie_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_info_idx.info AS movie_info_idx_info_9, movie_keyword.movie_id AS movie_keyword_movie_id_10, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, info_type, keyword, kind_type, movie_info_idx, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv428 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS complete_cast_movie_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_info_idx.info AS movie_info_idx_info_9, movie_keyword.movie_id AS movie_keyword_movie_id_10, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, info_type, keyword, kind_type, movie_info_idx, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)"
429,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS comp_cast_type_kind_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, movie_info_idx.info AS movie_info_idx_info_10, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_12, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, info_type, keyword, kind_type, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv429 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS comp_cast_type_kind_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, movie_info_idx.info AS movie_info_idx_info_10, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_12, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, info_type, keyword, kind_type, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)"
430,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, kind_type.id AS kind_type_id_9, kind_type.kind AS kind_type_kind_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_13, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, complete_cast, info_type, keyword, kind_type, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv430 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, kind_type.id AS kind_type_id_9, kind_type.kind AS kind_type_kind_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_13, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, complete_cast, info_type, keyword, kind_type, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)"
431,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, kind_type.id AS kind_type_id_9, kind_type.kind AS kind_type_kind_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_13, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, complete_cast, info_type, keyword, kind_type, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv431 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, kind_type.id AS kind_type_id_9, kind_type.kind AS kind_type_kind_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_13, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, complete_cast, info_type, keyword, kind_type, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind like '%complete%') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = complete_cast.movie_id)"
432,"select company_name.country_code AS country_code, company_name.id AS id, company_name.name AS name, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_name, movie_companies
 where (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (movie_companies.company_id = company_name.id) And (movie_companies.note IS NULL)","create materialized view if not exists mv432 as select company_name.country_code AS country_code, company_name.id AS id, company_name.name AS name, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note
from company_name, movie_companies
 where (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (movie_companies.company_id = company_name.id) And (movie_companies.note IS NULL)"
433,"select company_name.country_code AS country_code, company_name.id AS id, company_name.name AS name, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note
from company_name, complete_cast, movie_companies
 where (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL)","create materialized view if not exists mv433 as select company_name.country_code AS country_code, company_name.id AS id, company_name.name AS name, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note
from company_name, complete_cast, movie_companies
 where (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL)"
434,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note
from comp_cast_type, company_name, complete_cast, movie_companies
 where (comp_cast_type.id = complete_cast.status_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL)","create materialized view if not exists mv434 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note
from comp_cast_type, company_name, complete_cast, movie_companies
 where (comp_cast_type.id = complete_cast.status_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL)"
435,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.note AS note
from comp_cast_type, company_name, company_type, complete_cast, movie_companies
 where (comp_cast_type.id = complete_cast.status_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL)","create materialized view if not exists mv435 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.note AS note
from comp_cast_type, company_name, company_type, complete_cast, movie_companies
 where (comp_cast_type.id = complete_cast.status_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL)"
436,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.note AS note, movie_info.info AS info
from comp_cast_type, company_name, company_type, complete_cast, movie_companies, movie_info
 where (comp_cast_type.id = complete_cast.status_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German'))","create materialized view if not exists mv436 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.note AS note, movie_info.info AS info
from comp_cast_type, company_name, company_type, complete_cast, movie_companies, movie_info
 where (comp_cast_type.id = complete_cast.status_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German'))"
437,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.note AS note, movie_info.info AS info, movie_keyword.keyword_id AS keyword_id
from comp_cast_type, company_name, company_type, complete_cast, movie_companies, movie_info, movie_keyword
 where (comp_cast_type.id = complete_cast.status_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German'))","create materialized view if not exists mv437 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.note AS note, movie_info.info AS info, movie_keyword.keyword_id AS keyword_id
from comp_cast_type, company_name, company_type, complete_cast, movie_companies, movie_info, movie_keyword
 where (comp_cast_type.id = complete_cast.status_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German'))"
438,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.note AS note, movie_info.info AS info, movie_keyword.keyword_id AS keyword_id, title.id AS title_id_12, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, movie_companies, movie_info, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv438 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.note AS note, movie_info.info AS info, movie_keyword.keyword_id AS keyword_id, title.id AS title_id_12, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, movie_companies, movie_info, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (title.id = movie_keyword.movie_id)"
439,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, movie_companies.note AS note, movie_info.info AS info, movie_keyword.keyword_id AS keyword_id, movie_link.link_type_id AS link_type_id, movie_link.movie_id AS movie_link_movie_id_13, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, movie_companies, movie_info, movie_keyword, movie_link, title
 where (comp_cast_type.id = complete_cast.status_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (title.id = movie_keyword.movie_id) And (title.id = movie_link.movie_id)","create materialized view if not exists mv439 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, movie_companies.note AS note, movie_info.info AS info, movie_keyword.keyword_id AS keyword_id, movie_link.link_type_id AS link_type_id, movie_link.movie_id AS movie_link_movie_id_13, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, movie_companies, movie_info, movie_keyword, movie_link, title
 where (comp_cast_type.id = complete_cast.status_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (title.id = movie_keyword.movie_id) And (title.id = movie_link.movie_id)"
440,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, movie_companies.note AS note, movie_info.info AS info, movie_keyword.keyword_id AS keyword_id, movie_link.link_type_id AS link_type_id, movie_link.movie_id AS movie_link_movie_id_13, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, movie_companies, movie_info, movie_keyword, movie_link, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (title.id = movie_keyword.movie_id) And (title.id = movie_link.movie_id)","create materialized view if not exists mv440 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, movie_companies.note AS note, movie_info.info AS info, movie_keyword.keyword_id AS keyword_id, movie_link.link_type_id AS link_type_id, movie_link.movie_id AS movie_link_movie_id_13, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, movie_companies, movie_info, movie_keyword, movie_link, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (title.id = movie_keyword.movie_id) And (title.id = movie_link.movie_id)"
441,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_companies.note AS note, movie_info.info AS info, movie_keyword.movie_id AS movie_keyword_movie_id_13, movie_link.link_type_id AS link_type_id, movie_link.movie_id AS movie_link_movie_id_15, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, keyword, movie_companies, movie_info, movie_keyword, movie_link, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (title.id = movie_keyword.movie_id) And (title.id = movie_link.movie_id)","create materialized view if not exists mv441 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_companies.note AS note, movie_info.info AS info, movie_keyword.movie_id AS movie_keyword_movie_id_13, movie_link.link_type_id AS link_type_id, movie_link.movie_id AS movie_link_movie_id_15, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, keyword, movie_companies, movie_info, movie_keyword, movie_link, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (title.id = movie_keyword.movie_id) And (title.id = movie_link.movie_id)"
442,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_9, keyword.keyword AS keyword, link_type.id AS link_type_id_11, link_type.link AS link, movie_companies.note AS note, movie_info.info AS info, movie_keyword.movie_id AS movie_keyword_movie_id_15, movie_link.movie_id AS movie_link_movie_id_16, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, keyword, link_type, movie_companies, movie_info, movie_keyword, movie_link, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (keyword.id = movie_keyword.keyword_id) And (link_type.id = movie_link.link_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (title.id = movie_keyword.movie_id) And (title.id = movie_link.movie_id)","create materialized view if not exists mv442 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_9, keyword.keyword AS keyword, link_type.id AS link_type_id_11, link_type.link AS link, movie_companies.note AS note, movie_info.info AS info, movie_keyword.movie_id AS movie_keyword_movie_id_15, movie_link.movie_id AS movie_link_movie_id_16, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, keyword, link_type, movie_companies, movie_info, movie_keyword, movie_link, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (keyword.id = movie_keyword.keyword_id) And (link_type.id = movie_link.link_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (title.id = movie_keyword.movie_id) And (title.id = movie_link.movie_id)"
443,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, movie_companies.note AS note
from company_name, company_type, complete_cast, movie_companies
 where (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL)","create materialized view if not exists mv443 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, movie_companies.note AS note
from company_name, company_type, complete_cast, movie_companies
 where (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL)"
444,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, movie_companies.note AS note
from comp_cast_type, company_name, company_type, complete_cast, movie_companies
 where (comp_cast_type.id = complete_cast.subject_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL)","create materialized view if not exists mv444 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, movie_companies.note AS note
from comp_cast_type, company_name, company_type, complete_cast, movie_companies
 where (comp_cast_type.id = complete_cast.subject_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL)"
445,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.note AS note
from comp_cast_type, company_name, company_type, complete_cast, movie_companies
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL)","create materialized view if not exists mv445 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.note AS note
from comp_cast_type, company_name, company_type, complete_cast, movie_companies
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL)"
446,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id
from comp_cast_type, company_name, company_type, complete_cast, movie_companies, movie_keyword
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL)","create materialized view if not exists mv446 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id
from comp_cast_type, company_name, company_type, complete_cast, movie_companies, movie_keyword
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL)"
447,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id, movie_link.link_type_id AS link_type_id
from comp_cast_type, company_name, company_type, complete_cast, movie_companies, movie_keyword, movie_link
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL) And (movie_keyword.movie_id = movie_link.movie_id)","create materialized view if not exists mv447 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id, movie_link.link_type_id AS link_type_id
from comp_cast_type, company_name, company_type, complete_cast, movie_companies, movie_keyword, movie_link
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL) And (movie_keyword.movie_id = movie_link.movie_id)"
448,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, movie_companies.note AS note, movie_info.info AS info, movie_info.movie_id AS movie_info_movie_id_11, movie_keyword.keyword_id AS keyword_id, movie_link.link_type_id AS link_type_id
from comp_cast_type, company_name, company_type, complete_cast, movie_companies, movie_info, movie_keyword, movie_link
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.movie_id = movie_link.movie_id) And (movie_keyword.movie_id = movie_link.movie_id)","create materialized view if not exists mv448 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, movie_companies.note AS note, movie_info.info AS info, movie_info.movie_id AS movie_info_movie_id_11, movie_keyword.keyword_id AS keyword_id, movie_link.link_type_id AS link_type_id
from comp_cast_type, company_name, company_type, complete_cast, movie_companies, movie_info, movie_keyword, movie_link
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.movie_id = movie_link.movie_id) And (movie_keyword.movie_id = movie_link.movie_id)"
449,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, link_type.id AS link_type_id_9, link_type.link AS link, movie_companies.note AS note, movie_info.info AS info, movie_info.movie_id AS movie_info_movie_id_13, movie_keyword.keyword_id AS keyword_id
from comp_cast_type, company_name, company_type, complete_cast, link_type, movie_companies, movie_info, movie_keyword, movie_link
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (link_type.id = movie_link.link_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.movie_id = movie_link.movie_id) And (movie_keyword.movie_id = movie_link.movie_id)","create materialized view if not exists mv449 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, link_type.id AS link_type_id_9, link_type.link AS link, movie_companies.note AS note, movie_info.info AS info, movie_info.movie_id AS movie_info_movie_id_13, movie_keyword.keyword_id AS keyword_id
from comp_cast_type, company_name, company_type, complete_cast, link_type, movie_companies, movie_info, movie_keyword, movie_link
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (link_type.id = movie_link.link_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.movie_id = movie_link.movie_id) And (movie_keyword.movie_id = movie_link.movie_id)"
450,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, link_type.id AS link_type_id_9, link_type.link AS link, movie_companies.note AS note, movie_info.info AS info, movie_info.movie_id AS movie_info_movie_id_13, movie_keyword.keyword_id AS keyword_id, title.id AS title_id_15, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, link_type, movie_companies, movie_info, movie_keyword, movie_link, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (link_type.id = movie_link.link_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.movie_id = movie_link.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.movie_id = title.id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv450 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, link_type.id AS link_type_id_9, link_type.link AS link, movie_companies.note AS note, movie_info.info AS info, movie_info.movie_id AS movie_info_movie_id_13, movie_keyword.keyword_id AS keyword_id, title.id AS title_id_15, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, link_type, movie_companies, movie_info, movie_keyword, movie_link, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (link_type.id = movie_link.link_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.movie_id = movie_link.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.movie_id = title.id) And (title.id = movie_keyword.movie_id)"
451,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_9, keyword.keyword AS keyword, link_type.id AS link_type_id_11, link_type.link AS link, movie_companies.note AS note, movie_info.info AS info, movie_info.movie_id AS movie_info_movie_id_15, title.id AS title_id_16, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, keyword, link_type, movie_companies, movie_info, movie_keyword, movie_link, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (keyword.id = movie_keyword.keyword_id) And (link_type.id = movie_link.link_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.movie_id = movie_link.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.movie_id = title.id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv451 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_9, keyword.keyword AS keyword, link_type.id AS link_type_id_11, link_type.link AS link, movie_companies.note AS note, movie_info.info AS info, movie_info.movie_id AS movie_info_movie_id_15, title.id AS title_id_16, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, keyword, link_type, movie_companies, movie_info, movie_keyword, movie_link, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_name.country_code = '__NOTEQUAL__[pl]')  And  (((company_name.name like '%Film%')) Or ((company_name.name like '%Warner%'))) And (company_type.id = movie_companies.company_type_id) And (keyword.id = movie_keyword.keyword_id) And (link_type.id = movie_link.link_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.movie_id = movie_link.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.movie_id = title.id) And (title.id = movie_keyword.movie_id)"
452,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id
from comp_cast_type, complete_cast
 where (comp_cast_type.kind = '__LIKE__complete%') And (comp_cast_type.kind = 'cast') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id)","create materialized view if not exists mv452 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id
from comp_cast_type, complete_cast
 where (comp_cast_type.kind = '__LIKE__complete%') And (comp_cast_type.kind = 'cast') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id)"
453,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note
from comp_cast_type, complete_cast, movie_companies
 where (comp_cast_type.kind = '__LIKE__complete%') And (comp_cast_type.kind = 'cast') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL)","create materialized view if not exists mv453 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note
from comp_cast_type, complete_cast, movie_companies
 where (comp_cast_type.kind = '__LIKE__complete%') And (comp_cast_type.kind = 'cast') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL)"
454,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, company_type.kind AS company_type_kind_3, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.company_id AS company_id, movie_companies.note AS note
from comp_cast_type, company_type, complete_cast, movie_companies
 where (comp_cast_type.kind = '__LIKE__complete%') And (comp_cast_type.kind = 'cast') And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL)","create materialized view if not exists mv454 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, company_type.kind AS company_type_kind_3, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.company_id AS company_id, movie_companies.note AS note
from comp_cast_type, company_type, complete_cast, movie_companies
 where (comp_cast_type.kind = '__LIKE__complete%') And (comp_cast_type.kind = 'cast') And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL)"
455,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, company_type.kind AS company_type_kind_3, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id
from comp_cast_type, company_type, complete_cast, movie_companies, movie_keyword
 where (comp_cast_type.kind = '__LIKE__complete%') And (comp_cast_type.kind = 'cast') And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL) And (movie_keyword.movie_id = movie_companies.movie_id)","create materialized view if not exists mv455 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, company_type.kind AS company_type_kind_3, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id
from comp_cast_type, company_type, complete_cast, movie_companies, movie_keyword
 where (comp_cast_type.kind = '__LIKE__complete%') And (comp_cast_type.kind = 'cast') And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL) And (movie_keyword.movie_id = movie_companies.movie_id)"
456,"select comp_cast_type.kind AS comp_cast_type_kind_0, company_name.country_code AS country_code, company_name.name AS name, company_type.id AS id, company_type.kind AS company_type_kind_4, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id
from comp_cast_type, company_name, company_type, complete_cast, movie_companies, movie_keyword
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = '__LIKE__complete%') And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL)","create materialized view if not exists mv456 as select comp_cast_type.kind AS comp_cast_type_kind_0, company_name.country_code AS country_code, company_name.name AS name, company_type.id AS id, company_type.kind AS company_type_kind_4, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id
from comp_cast_type, company_name, company_type, complete_cast, movie_companies, movie_keyword
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = '__LIKE__complete%') And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL)"
457,"select comp_cast_type.kind AS comp_cast_type_kind_0, company_name.country_code AS country_code, company_name.name AS name, company_type.id AS id, company_type.kind AS company_type_kind_4, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id, movie_link.link_type_id AS link_type_id
from comp_cast_type, company_name, company_type, complete_cast, movie_companies, movie_keyword, movie_link
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = '__LIKE__complete%') And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL) And (movie_keyword.movie_id = movie_link.movie_id)","create materialized view if not exists mv457 as select comp_cast_type.kind AS comp_cast_type_kind_0, company_name.country_code AS country_code, company_name.name AS name, company_type.id AS id, company_type.kind AS company_type_kind_4, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id, movie_link.link_type_id AS link_type_id
from comp_cast_type, company_name, company_type, complete_cast, movie_companies, movie_keyword, movie_link
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = '__LIKE__complete%') And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL) And (movie_keyword.movie_id = movie_link.movie_id)"
458,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, link_type.id AS link_type_id_9, link_type.link AS link, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id, movie_link.movie_id AS movie_link_movie_id_13
from comp_cast_type, company_name, company_type, complete_cast, link_type, movie_companies, movie_keyword, movie_link
 where (comp_cast_type.kind = '__LIKE__complete%') And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (link_type.id = movie_link.link_type_id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_link.movie_id)","create materialized view if not exists mv458 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, link_type.id AS link_type_id_9, link_type.link AS link, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id, movie_link.movie_id AS movie_link_movie_id_13
from comp_cast_type, company_name, company_type, complete_cast, link_type, movie_companies, movie_keyword, movie_link
 where (comp_cast_type.kind = '__LIKE__complete%') And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (link_type.id = movie_link.link_type_id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_link.movie_id)"
459,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, link_type.id AS link_type_id_9, link_type.link AS link, movie_companies.note AS note, movie_info.info AS info, movie_info.movie_id AS movie_info_movie_id_13, movie_keyword.keyword_id AS keyword_id
from comp_cast_type, company_name, company_type, complete_cast, link_type, movie_companies, movie_info, movie_keyword, movie_link
 where (comp_cast_type.kind = '__LIKE__complete%') And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (link_type.id = movie_link.link_type_id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')) And (movie_info.movie_id = movie_link.movie_id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_link.movie_id)","create materialized view if not exists mv459 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, link_type.id AS link_type_id_9, link_type.link AS link, movie_companies.note AS note, movie_info.info AS info, movie_info.movie_id AS movie_info_movie_id_13, movie_keyword.keyword_id AS keyword_id
from comp_cast_type, company_name, company_type, complete_cast, link_type, movie_companies, movie_info, movie_keyword, movie_link
 where (comp_cast_type.kind = '__LIKE__complete%') And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (link_type.id = movie_link.link_type_id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')) And (movie_info.movie_id = movie_link.movie_id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_link.movie_id)"
460,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_9, keyword.keyword AS keyword, link_type.id AS link_type_id_11, link_type.link AS link, movie_companies.note AS note, movie_info.info AS info, movie_info.movie_id AS movie_info_movie_id_15
from comp_cast_type, company_name, company_type, complete_cast, keyword, link_type, movie_companies, movie_info, movie_keyword, movie_link
 where (comp_cast_type.kind = '__LIKE__complete%') And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (link_type.id = movie_link.link_type_id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')) And (movie_info.movie_id = movie_link.movie_id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_link.movie_id)","create materialized view if not exists mv460 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_9, keyword.keyword AS keyword, link_type.id AS link_type_id_11, link_type.link AS link, movie_companies.note AS note, movie_info.info AS info, movie_info.movie_id AS movie_info_movie_id_15
from comp_cast_type, company_name, company_type, complete_cast, keyword, link_type, movie_companies, movie_info, movie_keyword, movie_link
 where (comp_cast_type.kind = '__LIKE__complete%') And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (link_type.id = movie_link.link_type_id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')) And (movie_info.movie_id = movie_link.movie_id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_link.movie_id)"
461,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_9, keyword.keyword AS keyword, link_type.id AS link_type_id_11, link_type.link AS link, movie_companies.note AS note, movie_info.info AS info, movie_info.movie_id AS movie_info_movie_id_15, title.id AS title_id_16, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, keyword, link_type, movie_companies, movie_info, movie_keyword, movie_link, title
 where (comp_cast_type.kind = '__LIKE__complete%') And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (link_type.id = movie_link.link_type_id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')) And (movie_info.movie_id = movie_link.movie_id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.movie_id = title.id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv461 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_9, keyword.keyword AS keyword, link_type.id AS link_type_id_11, link_type.link AS link, movie_companies.note AS note, movie_info.info AS info, movie_info.movie_id AS movie_info_movie_id_15, title.id AS title_id_16, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, keyword, link_type, movie_companies, movie_info, movie_keyword, movie_link, title
 where (comp_cast_type.kind = '__LIKE__complete%') And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (link_type.id = movie_link.link_type_id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note IS NULL) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')) And (movie_info.movie_id = movie_link.movie_id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.movie_id = title.id) And (title.id = movie_keyword.movie_id)"
462,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_5
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'rating') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv462 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_5
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'rating') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id)"
463,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv463 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id)"
464,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from info_type, movie_info, movie_info_idx, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv464 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from info_type, movie_info, movie_info_idx, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id) And (title.id = movie_info_idx.movie_id)"
465,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_info.info AS movie_info_info_4, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_info, movie_info_idx, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv465 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_info.info AS movie_info_info_4, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_info, movie_info_idx, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)"
466,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_companies_movie_id_6, movie_companies.note AS note, movie_info.info AS movie_info_info_8, movie_info.movie_id AS movie_info_movie_id_9, movie_info_idx.info AS movie_info_idx_info_10, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_companies, movie_info, movie_info_idx, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv466 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_companies_movie_id_6, movie_companies.note AS note, movie_info.info AS movie_info_info_8, movie_info.movie_id AS movie_info_movie_id_9, movie_info_idx.info AS movie_info_idx_info_10, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_companies, movie_info, movie_info_idx, title
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)"
467,"select company_type.id AS company_type_id_0, info_type.id AS info_type_id_1, info_type.info AS info_type_info_2, kind_type.id AS kind_type_id_3, kind_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_companies_movie_id_6, movie_companies.note AS note, movie_info.info AS movie_info_info_8, movie_info.movie_id AS movie_info_movie_id_9, movie_info_idx.info AS movie_info_idx_info_10, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from company_type, info_type, kind_type, movie_companies, movie_info, movie_info_idx, title
 where (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv467 as select company_type.id AS company_type_id_0, info_type.id AS info_type_id_1, info_type.info AS info_type_info_2, kind_type.id AS kind_type_id_3, kind_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_companies_movie_id_6, movie_companies.note AS note, movie_info.info AS movie_info_info_8, movie_info.movie_id AS movie_info_movie_id_9, movie_info_idx.info AS movie_info_idx_info_10, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from company_type, info_type, kind_type, movie_companies, movie_info, movie_info_idx, title
 where (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)"
468,"select company_type.id AS company_type_id_0, complete_cast.movie_id AS complete_cast_movie_id_1, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, kind_type.id AS kind_type_id_6, kind_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info.info AS movie_info_info_10, movie_info.movie_id AS movie_info_movie_id_11, movie_info_idx.info AS movie_info_idx_info_12, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from company_type, complete_cast, info_type, kind_type, movie_companies, movie_info, movie_info_idx, title
 where (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = complete_cast.movie_id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv468 as select company_type.id AS company_type_id_0, complete_cast.movie_id AS complete_cast_movie_id_1, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, kind_type.id AS kind_type_id_6, kind_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info.info AS movie_info_info_10, movie_info.movie_id AS movie_info_movie_id_11, movie_info_idx.info AS movie_info_idx_info_12, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from company_type, complete_cast, info_type, kind_type, movie_companies, movie_info, movie_info_idx, title
 where (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = complete_cast.movie_id) And (title.id = movie_info_idx.movie_id)"
469,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, complete_cast.movie_id AS complete_cast_movie_id_3, complete_cast.status_id AS status_id, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info.info AS movie_info_info_11, movie_info.movie_id AS movie_info_movie_id_12, movie_info_idx.info AS movie_info_idx_info_13, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_type, complete_cast, info_type, kind_type, movie_companies, movie_info, movie_info_idx, title
 where (comp_cast_type.id = complete_cast.subject_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = complete_cast.movie_id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv469 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, complete_cast.movie_id AS complete_cast_movie_id_3, complete_cast.status_id AS status_id, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info.info AS movie_info_info_11, movie_info.movie_id AS movie_info_movie_id_12, movie_info_idx.info AS movie_info_idx_info_13, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_type, complete_cast, info_type, kind_type, movie_companies, movie_info, movie_info_idx, title
 where (comp_cast_type.id = complete_cast.subject_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = complete_cast.movie_id) And (title.id = movie_info_idx.movie_id)"
470,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, complete_cast.movie_id AS complete_cast_movie_id_3, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info.info AS movie_info_info_11, movie_info.movie_id AS movie_info_movie_id_12, movie_info_idx.info AS movie_info_idx_info_13, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_type, complete_cast, info_type, kind_type, movie_companies, movie_info, movie_info_idx, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = complete_cast.movie_id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv470 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, complete_cast.movie_id AS complete_cast_movie_id_3, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info.info AS movie_info_info_11, movie_info.movie_id AS movie_info_movie_id_12, movie_info_idx.info AS movie_info_idx_info_13, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_type, complete_cast, info_type, kind_type, movie_companies, movie_info, movie_info_idx, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = complete_cast.movie_id) And (title.id = movie_info_idx.movie_id)"
471,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, complete_cast.movie_id AS complete_cast_movie_id_3, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info.info AS movie_info_info_11, movie_info.movie_id AS movie_info_movie_id_12, movie_info_idx.info AS movie_info_idx_info_13, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_type, complete_cast, info_type, kind_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv471 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, complete_cast.movie_id AS complete_cast_movie_id_3, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info.info AS movie_info_info_11, movie_info.movie_id AS movie_info_movie_id_12, movie_info_idx.info AS movie_info_idx_info_13, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_type, complete_cast, info_type, kind_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id) And (title.id = movie_info_idx.movie_id)"
472,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, complete_cast.movie_id AS complete_cast_movie_id_3, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, kind_type.id AS kind_type_id_9, kind_type.kind AS kind_type_kind_10, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info.info AS movie_info_info_13, movie_info.movie_id AS movie_info_movie_id_14, movie_info_idx.info AS movie_info_idx_info_15, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_type, complete_cast, info_type, keyword, kind_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv472 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, complete_cast.movie_id AS complete_cast_movie_id_3, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, kind_type.id AS kind_type_id_9, kind_type.kind AS kind_type_kind_10, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info.info AS movie_info_info_13, movie_info.movie_id AS movie_info_movie_id_14, movie_info_idx.info AS movie_info_idx_info_15, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_type, complete_cast, info_type, keyword, kind_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id) And (title.id = movie_info_idx.movie_id)"
473,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, complete_cast.movie_id AS complete_cast_movie_id_6, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, keyword.id AS keyword_id_10, keyword.keyword AS keyword, kind_type.id AS kind_type_id_12, kind_type.kind AS kind_type_kind_13, movie_companies.note AS note, movie_info.info AS movie_info_info_15, movie_info.movie_id AS movie_info_movie_id_16, movie_info_idx.info AS movie_info_idx_info_17, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, info_type, keyword, kind_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv473 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, complete_cast.movie_id AS complete_cast_movie_id_6, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, keyword.id AS keyword_id_10, keyword.keyword AS keyword, kind_type.id AS kind_type_id_12, kind_type.kind AS kind_type_kind_13, movie_companies.note AS note, movie_info.info AS movie_info_info_15, movie_info.movie_id AS movie_info_movie_id_16, movie_info_idx.info AS movie_info_idx_info_17, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, info_type, keyword, kind_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = title.id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id) And (title.id = movie_info_idx.movie_id)"
474,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'rating') And (movie_info_idx.info > '6.5') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv474 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'rating') And (movie_info_idx.info > '6.5') And (movie_info_idx.info_type_id = info_type.id)"
475,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_5
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'rating') And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '6.5') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv475 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_5
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'rating') And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '6.5') And (movie_info_idx.info_type_id = info_type.id)"
476,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '6.5') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv476 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '6.5') And (movie_info_idx.info_type_id = info_type.id)"
477,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS movie_info_info_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_companies, movie_info, movie_info_idx
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '6.5') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv477 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS movie_info_info_6, movie_info_idx.info AS movie_info_idx_info_7, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_companies, movie_info, movie_info_idx
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '6.5') And (movie_info_idx.info_type_id = info_type.id)"
478,"select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id
from complete_cast, info_type, movie_companies, movie_info, movie_info_idx
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '6.5') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv478 as select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id
from complete_cast, info_type, movie_companies, movie_info, movie_info_idx
 where (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '6.5') And (movie_info_idx.info_type_id = info_type.id)"
479,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS movie_info_info_9, movie_info_idx.info AS movie_info_idx_info_10, movie_info_idx.info_type_id AS info_type_id
from comp_cast_type, complete_cast, info_type, movie_companies, movie_info, movie_info_idx
 where (comp_cast_type.id = complete_cast.subject_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '6.5') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv479 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS movie_info_info_9, movie_info_idx.info AS movie_info_idx_info_10, movie_info_idx.info_type_id AS info_type_id
from comp_cast_type, complete_cast, info_type, movie_companies, movie_info, movie_info_idx
 where (comp_cast_type.id = complete_cast.subject_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '6.5') And (movie_info_idx.info_type_id = info_type.id)"
480,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS movie_info_info_9, movie_info_idx.info AS movie_info_idx_info_10, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id
from comp_cast_type, complete_cast, info_type, movie_companies, movie_info, movie_info_idx, movie_keyword
 where (comp_cast_type.id = complete_cast.subject_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '6.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = movie_info.movie_id)","create materialized view if not exists mv480 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS movie_info_info_9, movie_info_idx.info AS movie_info_idx_info_10, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id
from comp_cast_type, complete_cast, info_type, movie_companies, movie_info, movie_info_idx, movie_keyword
 where (comp_cast_type.id = complete_cast.subject_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '6.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = movie_info.movie_id)"
481,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.status_id AS status_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS movie_info_info_11, movie_info_idx.info AS movie_info_idx_info_12, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_14
from comp_cast_type, complete_cast, info_type, keyword, movie_companies, movie_info, movie_info_idx, movie_keyword
 where (comp_cast_type.id = complete_cast.subject_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '6.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = movie_info.movie_id)","create materialized view if not exists mv481 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.status_id AS status_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS movie_info_info_11, movie_info_idx.info AS movie_info_idx_info_12, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_14
from comp_cast_type, complete_cast, info_type, keyword, movie_companies, movie_info, movie_info_idx, movie_keyword
 where (comp_cast_type.id = complete_cast.subject_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '6.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = movie_info.movie_id)"
482,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_type.id AS company_type_id_2, complete_cast.movie_id AS complete_cast_movie_id_3, complete_cast.status_id AS status_id, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info.info AS movie_info_info_11, movie_info_idx.info AS movie_info_idx_info_12, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_14
from comp_cast_type, company_type, complete_cast, info_type, keyword, movie_companies, movie_info, movie_info_idx, movie_keyword
 where (comp_cast_type.id = complete_cast.subject_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '6.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = movie_info.movie_id)","create materialized view if not exists mv482 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_type.id AS company_type_id_2, complete_cast.movie_id AS complete_cast_movie_id_3, complete_cast.status_id AS status_id, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info.info AS movie_info_info_11, movie_info_idx.info AS movie_info_idx_info_12, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_14
from comp_cast_type, company_type, complete_cast, info_type, keyword, movie_companies, movie_info, movie_info_idx, movie_keyword
 where (comp_cast_type.id = complete_cast.subject_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '6.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = movie_info.movie_id)"
483,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_type.id AS company_type_id_2, complete_cast.movie_id AS complete_cast_movie_id_3, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info.info AS movie_info_info_11, movie_info_idx.info AS movie_info_idx_info_12, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_14
from comp_cast_type, company_type, complete_cast, info_type, keyword, movie_companies, movie_info, movie_info_idx, movie_keyword
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '6.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = movie_info.movie_id)","create materialized view if not exists mv483 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_type.id AS company_type_id_2, complete_cast.movie_id AS complete_cast_movie_id_3, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info.info AS movie_info_info_11, movie_info_idx.info AS movie_info_idx_info_12, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_14
from comp_cast_type, company_type, complete_cast, info_type, keyword, movie_companies, movie_info, movie_info_idx, movie_keyword
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '6.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = movie_info.movie_id)"
484,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_type.id AS company_type_id_2, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info.info AS movie_info_info_11, movie_info_idx.info AS movie_info_idx_info_12, movie_info_idx.info_type_id AS info_type_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_type, complete_cast, info_type, keyword, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info > '6.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = movie_info.movie_id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv484 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_type.id AS company_type_id_2, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info.info AS movie_info_info_11, movie_info_idx.info AS movie_info_idx_info_12, movie_info_idx.info_type_id AS info_type_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_type, complete_cast, info_type, keyword, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info > '6.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = movie_info.movie_id) And (title.id = movie_keyword.movie_id)"
485,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, kind_type.id AS kind_type_id_9, kind_type.kind AS kind_type_kind_10, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info.info AS movie_info_info_13, movie_info_idx.info AS movie_info_idx_info_14, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_type, complete_cast, info_type, keyword, kind_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info > '6.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv485 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, kind_type.id AS kind_type_id_9, kind_type.kind AS kind_type_kind_10, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info.info AS movie_info_info_13, movie_info_idx.info AS movie_info_idx_info_14, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_type, complete_cast, info_type, keyword, kind_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info > '6.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_keyword.movie_id)"
486,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, keyword.id AS keyword_id_10, keyword.keyword AS keyword, kind_type.id AS kind_type_id_12, kind_type.kind AS kind_type_kind_13, movie_companies.note AS note, movie_info.info AS movie_info_info_15, movie_info_idx.info AS movie_info_idx_info_16, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, info_type, keyword, kind_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info > '6.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv486 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, keyword.id AS keyword_id_10, keyword.keyword AS keyword, kind_type.id AS kind_type_id_12, kind_type.kind AS kind_type_kind_13, movie_companies.note AS note, movie_info.info AS movie_info_info_15, movie_info_idx.info AS movie_info_idx_info_16, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, info_type, keyword, kind_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info > '6.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_keyword.movie_id)"
487,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id
from comp_cast_type, complete_cast
 where (comp_cast_type.kind = 'complete') And (complete_cast.status_id = comp_cast_type.id)","create materialized view if not exists mv487 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id
from comp_cast_type, complete_cast
 where (comp_cast_type.kind = 'complete') And (complete_cast.status_id = comp_cast_type.id)"
488,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id
from comp_cast_type, complete_cast
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id)","create materialized view if not exists mv488 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id
from comp_cast_type, complete_cast
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id)"
489,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_info.info AS info, movie_info.info_type_id AS info_type_id
from comp_cast_type, complete_cast, movie_info
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = complete_cast.movie_id)","create materialized view if not exists mv489 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_info.info AS info, movie_info.info_type_id AS info_type_id
from comp_cast_type, complete_cast, movie_info
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = complete_cast.movie_id)"
490,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS info, movie_info.info_type_id AS info_type_id
from comp_cast_type, complete_cast, movie_companies, movie_info
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = complete_cast.movie_id)","create materialized view if not exists mv490 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS info, movie_info.info_type_id AS info_type_id
from comp_cast_type, complete_cast, movie_companies, movie_info
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = complete_cast.movie_id)"
491,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS info, movie_info.info_type_id AS info_type_id
from comp_cast_type, company_name, complete_cast, movie_companies, movie_info
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete') And (company_name.id = movie_companies.company_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = complete_cast.movie_id)","create materialized view if not exists mv491 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS info, movie_info.info_type_id AS info_type_id
from comp_cast_type, company_name, complete_cast, movie_companies, movie_info
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete') And (company_name.id = movie_companies.company_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = complete_cast.movie_id)"
492,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS movie_info_info_11
from comp_cast_type, company_name, complete_cast, info_type, movie_companies, movie_info
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete') And (company_name.id = movie_companies.company_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = complete_cast.movie_id)","create materialized view if not exists mv492 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS movie_info_info_11
from comp_cast_type, company_name, complete_cast, info_type, movie_companies, movie_info
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete') And (company_name.id = movie_companies.company_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = complete_cast.movie_id)"
493,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, movie_companies.note AS note, movie_info.info AS movie_info_info_11
from comp_cast_type, company_name, company_type, complete_cast, info_type, movie_companies, movie_info
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = complete_cast.movie_id)","create materialized view if not exists mv493 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, movie_companies.note AS note, movie_info.info AS movie_info_info_11
from comp_cast_type, company_name, company_type, complete_cast, info_type, movie_companies, movie_info
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = complete_cast.movie_id)"
494,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, movie_companies.note AS note, movie_info.info AS movie_info_info_11, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, info_type, movie_companies, movie_info, title
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = complete_cast.movie_id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv494 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, movie_companies.note AS note, movie_info.info AS movie_info_info_11, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, info_type, movie_companies, movie_info, title
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = complete_cast.movie_id) And (title.id = movie_info.movie_id)"
495,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, kind_type.id AS kind_type_id_10, kind_type.kind AS kind_type_kind_11, movie_companies.note AS note, movie_info.info AS movie_info_info_13, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, info_type, kind_type, movie_companies, movie_info, title
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = complete_cast.movie_id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv495 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, kind_type.id AS kind_type_id_10, kind_type.kind AS kind_type_kind_11, movie_companies.note AS note, movie_info.info AS movie_info_info_13, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, info_type, kind_type, movie_companies, movie_info, title
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = complete_cast.movie_id) And (title.id = movie_info.movie_id)"
496,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, complete_cast.movie_id AS complete_cast_movie_id_6, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, kind_type.id AS kind_type_id_10, kind_type.kind AS kind_type_kind_11, movie_companies.note AS note, movie_info.info AS movie_info_info_13, movie_info_idx.info AS movie_info_idx_info_14, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_16, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, info_type, kind_type, movie_companies, movie_info, movie_info_idx, title
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info_idx.info < '8.5') And (movie_info_idx.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv496 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, complete_cast.movie_id AS complete_cast_movie_id_6, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, kind_type.id AS kind_type_id_10, kind_type.kind AS kind_type_kind_11, movie_companies.note AS note, movie_info.info AS movie_info_info_13, movie_info_idx.info AS movie_info_idx_info_14, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_16, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, info_type, kind_type, movie_companies, movie_info, movie_info_idx, title
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info_idx.info < '8.5') And (movie_info_idx.movie_id = title.id) And (title.id = movie_info.movie_id)"
497,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, complete_cast.movie_id AS complete_cast_movie_id_6, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, kind_type.id AS kind_type_id_10, kind_type.kind AS kind_type_kind_11, movie_companies.note AS note, movie_info.info AS movie_info_info_13, movie_info_idx.info AS movie_info_idx_info_14, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_16, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, info_type, kind_type, movie_companies, movie_info, movie_info_idx, title
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (info_type.id = movie_info_idx.info_type_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info_idx.info < '8.5') And (movie_info_idx.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv497 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, complete_cast.movie_id AS complete_cast_movie_id_6, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, kind_type.id AS kind_type_id_10, kind_type.kind AS kind_type_kind_11, movie_companies.note AS note, movie_info.info AS movie_info_info_13, movie_info_idx.info AS movie_info_idx_info_14, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_16, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, info_type, kind_type, movie_companies, movie_info, movie_info_idx, title
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (info_type.id = movie_info_idx.info_type_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info_idx.info < '8.5') And (movie_info_idx.movie_id = title.id) And (title.id = movie_info.movie_id)"
498,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, complete_cast.movie_id AS complete_cast_movie_id_6, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, kind_type.id AS kind_type_id_10, kind_type.kind AS kind_type_kind_11, movie_companies.note AS note, movie_info.info AS movie_info_info_13, movie_info_idx.info AS movie_info_idx_info_14, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_16, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, info_type, kind_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (info_type.id = movie_info_idx.info_type_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info_idx.info < '8.5') And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv498 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, complete_cast.movie_id AS complete_cast_movie_id_6, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, kind_type.id AS kind_type_id_10, kind_type.kind AS kind_type_kind_11, movie_companies.note AS note, movie_info.info AS movie_info_info_13, movie_info_idx.info AS movie_info_idx_info_14, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_16, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, info_type, kind_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (info_type.id = movie_info_idx.info_type_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info_idx.info < '8.5') And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)"
499,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, complete_cast.movie_id AS complete_cast_movie_id_6, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, keyword.id AS keyword_id_10, keyword.keyword AS keyword, kind_type.id AS kind_type_id_12, kind_type.kind AS kind_type_kind_13, movie_companies.note AS note, movie_info.info AS movie_info_info_15, movie_info_idx.info AS movie_info_idx_info_16, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_18, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, info_type, keyword, kind_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info_idx.info < '8.5') And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv499 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, complete_cast.movie_id AS complete_cast_movie_id_6, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, keyword.id AS keyword_id_10, keyword.keyword AS keyword, kind_type.id AS kind_type_id_12, kind_type.kind AS kind_type_kind_13, movie_companies.note AS note, movie_info.info AS movie_info_info_15, movie_info_idx.info AS movie_info_idx_info_16, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_18, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, company_type, complete_cast, info_type, keyword, kind_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (kind_type.id = title.kind_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info_idx.info < '8.5') And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)"
500,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, title
 where (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv500 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, title
 where (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (title.id = complete_cast.movie_id)"
501,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, title
 where (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv501 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, title
 where (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (title.id = complete_cast.movie_id)"
502,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, movie_keyword, title
 where (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv502 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, movie_keyword, title
 where (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)"
503,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, keyword.id AS keyword_id_3, keyword.keyword AS keyword, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, keyword, movie_keyword, title
 where (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv503 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, keyword.id AS keyword_id_3, keyword.keyword AS keyword, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, keyword, movie_keyword, title
 where (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)"
504,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, comp_cast_type.id AS id, comp_cast_type.kind AS kind, keyword.keyword AS keyword, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_9, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, keyword, movie_keyword, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv504 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, comp_cast_type.id AS id, comp_cast_type.kind AS kind, keyword.keyword AS keyword, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_9, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, keyword, movie_keyword, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)"
505,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, comp_cast_type.id AS id, comp_cast_type.kind AS kind, keyword.keyword AS keyword, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_10, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, complete_cast, keyword, movie_keyword, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv505 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, comp_cast_type.id AS id, comp_cast_type.kind AS kind, keyword.keyword AS keyword, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_10, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, complete_cast, keyword, movie_keyword, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)"
506,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, comp_cast_type.id AS id, comp_cast_type.kind AS kind, keyword.keyword AS keyword, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_10, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, complete_cast, keyword, movie_keyword, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv506 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, comp_cast_type.id AS id, comp_cast_type.kind AS kind, keyword.keyword AS keyword, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_10, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, complete_cast, keyword, movie_keyword, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)"
507,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, comp_cast_type.id AS id, comp_cast_type.kind AS kind, keyword.keyword AS keyword, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_10, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, complete_cast, keyword, movie_keyword, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (movie_keyword.movie_id = title.id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv507 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, comp_cast_type.id AS id, comp_cast_type.kind AS kind, keyword.keyword AS keyword, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_10, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, complete_cast, keyword, movie_keyword, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (movie_keyword.movie_id = title.id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)"
508,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS id, comp_cast_type.kind AS kind, keyword.keyword AS keyword, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_10, name.gender AS gender, name.name AS name_name_12, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, complete_cast, keyword, movie_keyword, name, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv508 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS id, comp_cast_type.kind AS kind, keyword.keyword AS keyword, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_10, name.gender AS gender, name.name AS name_name_12, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, complete_cast, keyword, movie_keyword, name, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)"
509,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS id, comp_cast_type.kind AS kind, keyword.keyword AS keyword, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_10, name.gender AS gender, name.name AS name_name_12, person_info.info_type_id AS info_type_id, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, complete_cast, keyword, movie_keyword, name, person_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (person_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv509 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS id, comp_cast_type.kind AS kind, keyword.keyword AS keyword, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_10, name.gender AS gender, name.name AS name_name_12, person_info.info_type_id AS info_type_id, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, complete_cast, keyword, movie_keyword, name, person_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (person_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)"
510,"select aka_name.person_id AS aka_name_person_id_0, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, info_type.info AS info, keyword.id AS keyword_id_9, keyword.keyword AS keyword, name.gender AS gender, name.name AS name_name_12, person_info.info_type_id AS info_type_id, person_info.person_id AS person_info_person_id_14, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, complete_cast, info_type, keyword, movie_keyword, name, person_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (info_type.id = person_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (person_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv510 as select aka_name.person_id AS aka_name_person_id_0, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, info_type.info AS info, keyword.id AS keyword_id_9, keyword.keyword AS keyword, name.gender AS gender, name.name AS name_name_12, person_info.info_type_id AS info_type_id, person_info.person_id AS person_info_person_id_14, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, complete_cast, info_type, keyword, movie_keyword, name, person_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (info_type.id = person_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (person_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)"
511,"select aka_name.person_id AS aka_name_person_id_0, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info.info AS movie_info_info_11, movie_info.info_type_id AS movie_info_info_type_id_12, movie_keyword.movie_id AS movie_keyword_movie_id_13, name.gender AS gender, name.name AS name_name_15, person_info.info_type_id AS person_info_info_type_id_16, person_info.person_id AS person_info_person_id_17, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, complete_cast, info_type, keyword, movie_info, movie_keyword, name, person_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (info_type.id = person_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (person_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv511 as select aka_name.person_id AS aka_name_person_id_0, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info.info AS movie_info_info_11, movie_info.info_type_id AS movie_info_info_type_id_12, movie_keyword.movie_id AS movie_keyword_movie_id_13, name.gender AS gender, name.name AS name_name_15, person_info.info_type_id AS person_info_info_type_id_16, person_info.person_id AS person_info_person_id_17, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, complete_cast, info_type, keyword, movie_info, movie_keyword, name, person_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (info_type.id = person_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (person_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)"
512,"select aka_name.person_id AS aka_name_person_id_0, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info.info AS movie_info_info_11, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_13, name.gender AS gender, name.name AS name_name_15, person_info.person_id AS person_info_person_id_16, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, complete_cast, info_type, keyword, movie_info, movie_keyword, name, person_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (info_type.id = person_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (person_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv512 as select aka_name.person_id AS aka_name_person_id_0, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info.info AS movie_info_info_11, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_13, name.gender AS gender, name.name AS name_name_15, person_info.person_id AS person_info_person_id_16, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, complete_cast, info_type, keyword, movie_info, movie_keyword, name, person_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (info_type.id = person_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (person_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)"
513,"select aka_name.person_id AS aka_name_person_id_0, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_info.info AS movie_info_info_12, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_14, name.gender AS gender, name.name AS name_name_16, person_info.person_id AS person_info_person_id_17, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, complete_cast, info_type, keyword, movie_companies, movie_info, movie_keyword, name, person_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (info_type.id = person_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (person_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv513 as select aka_name.person_id AS aka_name_person_id_0, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_info.info AS movie_info_info_12, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_14, name.gender AS gender, name.name AS name_name_16, person_info.person_id AS person_info_person_id_17, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, complete_cast, info_type, keyword, movie_companies, movie_info, movie_keyword, name, person_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (info_type.id = person_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (person_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)"
514,"select aka_name.person_id AS aka_name_person_id_0, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, info_type.info AS info_type_info_10, keyword.id AS keyword_id_11, keyword.keyword AS keyword, movie_info.info AS movie_info_info_13, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_15, name.gender AS gender, name.name AS name_name_17, person_info.person_id AS person_info_person_id_18, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, company_name, complete_cast, info_type, keyword, movie_companies, movie_info, movie_keyword, name, person_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (company_name.id = movie_companies.company_id) And (complete_cast.status_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (info_type.id = person_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (person_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv514 as select aka_name.person_id AS aka_name_person_id_0, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, info_type.info AS info_type_info_10, keyword.id AS keyword_id_11, keyword.keyword AS keyword, movie_info.info AS movie_info_info_13, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_15, name.gender AS gender, name.name AS name_name_17, person_info.person_id AS person_info_person_id_18, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, company_name, complete_cast, info_type, keyword, movie_companies, movie_info, movie_keyword, name, person_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (company_name.id = movie_companies.company_id) And (complete_cast.status_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (info_type.id = person_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (person_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)"
515,"select aka_name.person_id AS aka_name_person_id_0, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info.info AS movie_info_info_11, movie_info.info_type_id AS movie_info_info_type_id_12, movie_keyword.movie_id AS movie_keyword_movie_id_13, name.gender AS gender, name.name AS name_name_15, person_info.info_type_id AS person_info_info_type_id_16, person_info.person_id AS person_info_person_id_17, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, complete_cast, info_type, keyword, movie_info, movie_keyword, name, person_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (info_type.id = person_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info.info = '__LIKE__USA:%200%') And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (person_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv515 as select aka_name.person_id AS aka_name_person_id_0, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info.info AS movie_info_info_11, movie_info.info_type_id AS movie_info_info_type_id_12, movie_keyword.movie_id AS movie_keyword_movie_id_13, name.gender AS gender, name.name AS name_name_15, person_info.info_type_id AS person_info_info_type_id_16, person_info.person_id AS person_info_person_id_17, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, complete_cast, info_type, keyword, movie_info, movie_keyword, name, person_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (info_type.id = person_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info.info = '__LIKE__USA:%200%') And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (person_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)"
516,"select aka_name.person_id AS aka_name_person_id_0, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info.info AS movie_info_info_11, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_13, name.gender AS gender, name.name AS name_name_15, person_info.person_id AS person_info_person_id_16, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, complete_cast, info_type, keyword, movie_info, movie_keyword, name, person_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (info_type.id = person_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info.info = '__LIKE__USA:%200%') And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (person_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv516 as select aka_name.person_id AS aka_name_person_id_0, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info.info AS movie_info_info_11, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_13, name.gender AS gender, name.name AS name_name_15, person_info.person_id AS person_info_person_id_16, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, complete_cast, info_type, keyword, movie_info, movie_keyword, name, person_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (info_type.id = person_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info.info = '__LIKE__USA:%200%') And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (person_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)"
517,"select aka_name.person_id AS aka_name_person_id_0, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_info.info AS movie_info_info_12, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_14, name.gender AS gender, name.name AS name_name_16, person_info.person_id AS person_info_person_id_17, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, complete_cast, info_type, keyword, movie_companies, movie_info, movie_keyword, name, person_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (info_type.id = person_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = title.id) And (movie_info.info = '__LIKE__USA:%200%') And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (person_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv517 as select aka_name.person_id AS aka_name_person_id_0, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_info.info AS movie_info_info_12, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_14, name.gender AS gender, name.name AS name_name_16, person_info.person_id AS person_info_person_id_17, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, complete_cast, info_type, keyword, movie_companies, movie_info, movie_keyword, name, person_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (info_type.id = person_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = title.id) And (movie_info.info = '__LIKE__USA:%200%') And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (person_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)"
518,"select aka_name.person_id AS aka_name_person_id_0, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, info_type.info AS info_type_info_10, keyword.id AS keyword_id_11, keyword.keyword AS keyword, movie_info.info AS movie_info_info_13, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_15, name.gender AS gender, name.name AS name_name_17, person_info.person_id AS person_info_person_id_18, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, company_name, complete_cast, info_type, keyword, movie_companies, movie_info, movie_keyword, name, person_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (company_name.id = movie_companies.company_id) And (complete_cast.status_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (info_type.id = person_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = title.id) And (movie_info.info = '__LIKE__USA:%200%') And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (person_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv518 as select aka_name.person_id AS aka_name_person_id_0, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, info_type.info AS info_type_info_10, keyword.id AS keyword_id_11, keyword.keyword AS keyword, movie_info.info AS movie_info_info_13, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_15, name.gender AS gender, name.name AS name_name_17, person_info.person_id AS person_info_person_id_18, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, company_name, complete_cast, info_type, keyword, movie_companies, movie_info, movie_keyword, name, person_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'completeverified') And (company_name.id = movie_companies.company_id) And (complete_cast.status_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (info_type.id = person_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = title.id) And (movie_info.info = '__LIKE__USA:%200%') And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = aka_name.person_id) And (person_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)"
519,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, title
 where (comp_cast_type.kind = 'cast') And (complete_cast.subject_id = comp_cast_type.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv519 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, title
 where (comp_cast_type.kind = 'cast') And (complete_cast.subject_id = comp_cast_type.id) And (title.id = complete_cast.movie_id)"
520,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, movie_info.info AS info, movie_info.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, movie_info, title
 where (comp_cast_type.kind = 'cast') And (complete_cast.subject_id = comp_cast_type.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv520 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, movie_info.info AS info, movie_info.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, movie_info, title
 where (comp_cast_type.kind = 'cast') And (complete_cast.subject_id = comp_cast_type.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.movie_id = title.id) And (title.id = complete_cast.movie_id)"
521,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_info.info AS movie_info_info_6, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, info_type, movie_info, title
 where (comp_cast_type.kind = 'cast') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv521 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_info.info AS movie_info_info_6, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, info_type, movie_info, title
 where (comp_cast_type.kind = 'cast') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.info = 'release dates') And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (title.id = complete_cast.movie_id)"
522,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_companies.company_id AS company_id, movie_info.info AS movie_info_info_7, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, info_type, movie_companies, movie_info, title
 where (comp_cast_type.kind = 'cast') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv522 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_companies.company_id AS company_id, movie_info.info AS movie_info_info_7, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, info_type, movie_companies, movie_info, title
 where (comp_cast_type.kind = 'cast') And (complete_cast.subject_id = comp_cast_type.id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (title.id = complete_cast.movie_id)"
523,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_3, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, movie_info.info AS movie_info_info_8, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, complete_cast, info_type, movie_companies, movie_info, title
 where (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv523 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_3, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, movie_info.info AS movie_info_info_8, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, complete_cast, info_type, movie_companies, movie_info, title
 where (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (title.id = complete_cast.movie_id)"
524,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_3, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, movie_info.info AS movie_info_info_8, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, complete_cast, info_type, movie_companies, movie_info, movie_keyword, title
 where (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv524 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_3, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, movie_info.info AS movie_info_info_8, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, company_name, complete_cast, info_type, movie_companies, movie_info, movie_keyword, title
 where (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)"
525,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, comp_cast_type.id AS comp_cast_type_id_5, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_8, complete_cast.status_id AS status_id, info_type.id AS info_type_id_10, info_type.info AS info_type_info_11, movie_info.info AS movie_info_info_12, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, company_name, complete_cast, info_type, movie_companies, movie_info, movie_keyword, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv525 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, comp_cast_type.id AS comp_cast_type_id_5, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_8, complete_cast.status_id AS status_id, info_type.id AS info_type_id_10, info_type.info AS info_type_info_11, movie_info.info AS movie_info_info_12, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, company_name, complete_cast, info_type, movie_companies, movie_info, movie_keyword, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)"
526,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, complete_cast.status_id AS status_id, info_type.id AS info_type_id_11, info_type.info AS info_type_info_12, movie_info.info AS movie_info_info_13, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, company_name, complete_cast, info_type, movie_companies, movie_info, movie_keyword, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv526 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, complete_cast.status_id AS status_id, info_type.id AS info_type_id_11, info_type.info AS info_type_info_12, movie_info.info AS movie_info_info_13, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, company_name, complete_cast, info_type, movie_companies, movie_info, movie_keyword, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (title.id = complete_cast.movie_id)"
527,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, complete_cast.status_id AS status_id, info_type.id AS info_type_id_11, info_type.info AS info_type_info_12, movie_info.info AS movie_info_info_13, movie_keyword.keyword_id AS keyword_id, role_type.role AS role, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, company_name, complete_cast, info_type, movie_companies, movie_info, movie_keyword, role_type, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv527 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, complete_cast.status_id AS status_id, info_type.id AS info_type_id_11, info_type.info AS info_type_info_12, movie_info.info AS movie_info_info_13, movie_keyword.keyword_id AS keyword_id, role_type.role AS role, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, company_name, complete_cast, info_type, movie_companies, movie_info, movie_keyword, role_type, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)"
528,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, info_type.info AS info_type_info_10, movie_info.info AS movie_info_info_11, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_13, movie_keyword.keyword_id AS keyword_id, role_type.role AS role, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, company_name, complete_cast, info_type, movie_companies, movie_info, movie_keyword, role_type, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv528 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, info_type.info AS info_type_info_10, movie_info.info AS movie_info_info_11, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_13, movie_keyword.keyword_id AS keyword_id, role_type.role AS role, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, company_name, complete_cast, info_type, movie_companies, movie_info, movie_keyword, role_type, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)"
529,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, info_type.info AS info_type_info_10, movie_info.info AS movie_info_info_11, movie_info.info_type_id AS movie_info_info_type_id_12, movie_info.movie_id AS movie_info_movie_id_13, movie_keyword.keyword_id AS keyword_id, person_info.info_type_id AS person_info_info_type_id_15, role_type.role AS role, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, company_name, complete_cast, info_type, movie_companies, movie_info, movie_keyword, person_info, role_type, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (person_info.person_id = cast_info.person_id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv529 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, info_type.info AS info_type_info_10, movie_info.info AS movie_info_info_11, movie_info.info_type_id AS movie_info_info_type_id_12, movie_info.movie_id AS movie_info_movie_id_13, movie_keyword.keyword_id AS keyword_id, person_info.info_type_id AS person_info_info_type_id_15, role_type.role AS role, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, company_name, complete_cast, info_type, movie_companies, movie_info, movie_keyword, person_info, role_type, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (person_info.person_id = cast_info.person_id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)"
530,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, info_type.info AS info_type_info_10, movie_info.info AS movie_info_info_11, movie_info.info_type_id AS movie_info_info_type_id_12, movie_info.movie_id AS movie_info_movie_id_13, movie_keyword.keyword_id AS keyword_id, person_info.info_type_id AS person_info_info_type_id_15, role_type.role AS role, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, company_name, complete_cast, info_type, movie_companies, movie_info, movie_keyword, person_info, role_type, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = person_info.info_type_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (person_info.person_id = cast_info.person_id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv530 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, info_type.info AS info_type_info_10, movie_info.info AS movie_info_info_11, movie_info.info_type_id AS movie_info_info_type_id_12, movie_info.movie_id AS movie_info_movie_id_13, movie_keyword.keyword_id AS keyword_id, person_info.info_type_id AS person_info_info_type_id_15, role_type.role AS role, title.production_year AS production_year, title.title AS title
from cast_info, char_name, comp_cast_type, company_name, complete_cast, info_type, movie_companies, movie_info, movie_keyword, person_info, role_type, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = person_info.info_type_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (person_info.person_id = cast_info.person_id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)"
531,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, info_type.info AS info_type_info_10, movie_info.info AS movie_info_info_11, movie_info.info_type_id AS movie_info_info_type_id_12, movie_info.movie_id AS movie_info_movie_id_13, movie_keyword.keyword_id AS keyword_id, person_info.info_type_id AS person_info_info_type_id_15, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, company_name, complete_cast, info_type, movie_companies, movie_info, movie_keyword, person_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = person_info.info_type_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (person_info.person_id = cast_info.person_id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv531 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, info_type.info AS info_type_info_10, movie_info.info AS movie_info_info_11, movie_info.info_type_id AS movie_info_info_type_id_12, movie_info.movie_id AS movie_info_movie_id_13, movie_keyword.keyword_id AS keyword_id, person_info.info_type_id AS person_info_info_type_id_15, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, company_name, complete_cast, info_type, movie_companies, movie_info, movie_keyword, person_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = person_info.info_type_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (person_info.person_id = cast_info.person_id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)"
532,"select aka_name.person_id AS aka_name_person_id_0, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, info_type.info AS info_type_info_10, movie_info.info AS movie_info_info_11, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_13, movie_keyword.keyword_id AS keyword_id, name.gender AS gender, name.name AS name_name_16, person_info.person_id AS person_info_person_id_17, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, company_name, complete_cast, info_type, movie_companies, movie_info, movie_keyword, name, person_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = person_info.info_type_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv532 as select aka_name.person_id AS aka_name_person_id_0, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, info_type.info AS info_type_info_10, movie_info.info AS movie_info_info_11, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_13, movie_keyword.keyword_id AS keyword_id, name.gender AS gender, name.name AS name_name_16, person_info.person_id AS person_info_person_id_17, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, company_name, complete_cast, info_type, movie_companies, movie_info, movie_keyword, name, person_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = person_info.info_type_id) And (info_type.info = 'release dates') And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)"
533,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_8, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_10, info_type.info AS info_type_info_11, keyword.id AS keyword_id_12, keyword.keyword AS keyword, movie_info.info AS movie_info_info_14, movie_keyword.movie_id AS movie_keyword_movie_id_15, name.gender AS gender, name.name AS name_name_17, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, company_name, complete_cast, info_type, keyword, movie_companies, movie_info, movie_keyword, name, person_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = person_info.info_type_id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)","create materialized view if not exists mv533 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_8, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_10, info_type.info AS info_type_info_11, keyword.id AS keyword_id_12, keyword.keyword AS keyword, movie_info.info AS movie_info_info_14, movie_keyword.movie_id AS movie_keyword_movie_id_15, name.gender AS gender, name.name AS name_name_17, role_type.role AS role, title.production_year AS production_year, title.title AS title
from aka_name, cast_info, char_name, comp_cast_type, company_name, complete_cast, info_type, keyword, movie_companies, movie_info, movie_keyword, name, person_info, role_type, title
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.person_id = name.id) And (char_name.id = cast_info.person_role_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.kind = 'cast') And (company_name.id = movie_companies.company_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = person_info.info_type_id) And (info_type.info = 'release dates') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (role_type.id = cast_info.role_id) And (title.id = complete_cast.movie_id)"
534,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id
from comp_cast_type, complete_cast
 where (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.subject_id = comp_cast_type.id)","create materialized view if not exists mv534 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id
from comp_cast_type, complete_cast
 where (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.subject_id = comp_cast_type.id)"
535,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id
from comp_cast_type, complete_cast
 where (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id)","create materialized view if not exists mv535 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id
from comp_cast_type, complete_cast
 where (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id)"
536,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id
from comp_cast_type, complete_cast, movie_info_idx
 where (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (movie_info_idx.movie_id = complete_cast.movie_id)","create materialized view if not exists mv536 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id
from comp_cast_type, complete_cast, movie_info_idx
 where (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (movie_info_idx.movie_id = complete_cast.movie_id)"
537,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, movie_info_idx, title
 where (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv537 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, movie_info_idx, title
 where (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (title.id = movie_info_idx.movie_id)"
538,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, movie_info_idx, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv538 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, movie_info_idx, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (title.id = movie_info_idx.movie_id)"
539,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv539 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)"
540,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_7, keyword.keyword AS keyword, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, keyword, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv540 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_7, keyword.keyword AS keyword, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, keyword, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (keyword.id = movie_keyword.keyword_id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)"
541,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_11, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, info_type, keyword, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv541 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_11, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, info_type, keyword, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)"
542,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info.info AS movie_info_info_11, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_13, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, info_type, keyword, movie_info, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.movie_id = title.id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv542 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info.info AS movie_info_info_11, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_13, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, info_type, keyword, movie_info, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.movie_id = title.id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)"
543,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info.info AS movie_info_info_11, movie_info_idx.info AS movie_info_idx_info_12, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, info_type, keyword, movie_info, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.movie_id = title.id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv543 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info.info AS movie_info_info_11, movie_info_idx.info AS movie_info_idx_info_12, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, info_type, keyword, movie_info, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.movie_id = title.id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)"
544,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info.info AS movie_info_info_11, movie_info_idx.info AS movie_info_idx_info_12, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender, name.name AS name, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, info_type, keyword, movie_info, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.movie_id = title.id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv544 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info.info AS movie_info_info_11, movie_info_idx.info AS movie_info_idx_info_12, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender, name.name AS name, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, info_type, keyword, movie_info, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.movie_id = title.id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_info_idx.movie_id)"
545,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_info_idx.info AS movie_info_idx_info_6
from comp_cast_type, complete_cast, info_type, movie_info_idx
 where (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (movie_info_idx.movie_id = complete_cast.movie_id)","create materialized view if not exists mv545 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_info_idx.info AS movie_info_idx_info_6
from comp_cast_type, complete_cast, info_type, movie_info_idx
 where (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (movie_info_idx.movie_id = complete_cast.movie_id)"
546,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_info_idx.info AS movie_info_idx_info_6, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, info_type, movie_info_idx, title
 where (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv546 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_info_idx.info AS movie_info_idx_info_6, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, info_type, movie_info_idx, title
 where (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (title.id = movie_info_idx.movie_id)"
547,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_info_idx.info AS movie_info_idx_info_6, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_8, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, info_type, movie_info_idx, movie_keyword, title
 where (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv547 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_info_idx.info AS movie_info_idx_info_6, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_8, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, info_type, movie_info_idx, movie_keyword, title
 where (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)"
548,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_8, movie_keyword.movie_id AS movie_keyword_movie_id_9, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, info_type, keyword, movie_info_idx, movie_keyword, title
 where (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv548 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_8, movie_keyword.movie_id AS movie_keyword_movie_id_9, title.production_year AS production_year, title.title AS title
from comp_cast_type, complete_cast, info_type, keyword, movie_info_idx, movie_keyword, title
 where (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)"
549,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_11, name.gender AS gender, name.name AS name, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, info_type, keyword, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv549 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_11, name.gender AS gender, name.name AS name, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, info_type, keyword, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_info_idx.movie_id)"
550,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info.info AS movie_info_info_11, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_13, name.gender AS gender, name.name AS name, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, info_type, keyword, movie_info, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.movie_id = title.id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv550 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info.info AS movie_info_info_11, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_13, name.gender AS gender, name.name AS name, title.production_year AS production_year, title.title AS title
from cast_info, comp_cast_type, complete_cast, info_type, keyword, movie_info, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (comp_cast_type.kind = 'completeverified') And (comp_cast_type.kind in ('cast', 'crew')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.movie_id = title.id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_info_idx.movie_id)"
551,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id
from comp_cast_type, complete_cast
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id)","create materialized view if not exists mv551 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id
from comp_cast_type, complete_cast
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id)"
552,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_info.info AS info, movie_info.info_type_id AS info_type_id
from comp_cast_type, complete_cast, movie_info
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.movie_id = complete_cast.movie_id)","create materialized view if not exists mv552 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_info.info AS info, movie_info.info_type_id AS info_type_id
from comp_cast_type, complete_cast, movie_info
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.movie_id = complete_cast.movie_id)"
553,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_info.info AS movie_info_info_6
from comp_cast_type, complete_cast, info_type, movie_info
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.movie_id = complete_cast.movie_id)","create materialized view if not exists mv553 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_info.info AS movie_info_info_6
from comp_cast_type, complete_cast, info_type, movie_info
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.movie_id = complete_cast.movie_id)"
554,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, title.title AS title
from comp_cast_type, complete_cast, info_type, movie_info, title
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv554 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, title.title AS title
from comp_cast_type, complete_cast, info_type, movie_info, title
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info.movie_id = title.id) And (title.id = movie_info.movie_id)"
555,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_info.info AS movie_info_info_6, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_8, title.title AS title
from comp_cast_type, complete_cast, info_type, movie_info, movie_keyword, title
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv555 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_info.info AS movie_info_info_6, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_8, title.title AS title
from comp_cast_type, complete_cast, info_type, movie_info, movie_keyword, title
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)"
556,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, movie_info.info AS movie_info_info_8, movie_keyword.movie_id AS movie_keyword_movie_id_9, title.title AS title
from comp_cast_type, complete_cast, info_type, keyword, movie_info, movie_keyword, title
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv556 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, movie_info.info AS movie_info_info_8, movie_keyword.movie_id AS movie_keyword_movie_id_9, title.title AS title
from comp_cast_type, complete_cast, info_type, keyword, movie_info, movie_keyword, title
 where (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)"
557,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info.info AS movie_info_info_11, title.title AS title
from cast_info, comp_cast_type, complete_cast, info_type, keyword, movie_info, movie_keyword, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv557 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info.info AS movie_info_info_11, title.title AS title
from cast_info, comp_cast_type, complete_cast, info_type, keyword, movie_info, movie_keyword, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info.movie_id)"
558,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info.info AS movie_info_info_11, name.gender AS gender, name.name AS name, title.title AS title
from cast_info, comp_cast_type, complete_cast, info_type, keyword, movie_info, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv558 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info.info AS movie_info_info_11, name.gender AS gender, name.name AS name, title.title AS title
from cast_info, comp_cast_type, complete_cast, info_type, keyword, movie_info, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_info.movie_id)"
559,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info.info AS movie_info_info_11, movie_info_idx.info AS movie_info_idx_info_12, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_14, name.gender AS gender, name.name AS name, title.title AS title
from cast_info, comp_cast_type, complete_cast, info_type, keyword, movie_info, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv559 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info.info AS movie_info_info_11, movie_info_idx.info AS movie_info_idx_info_12, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_14, name.gender AS gender, name.name AS name, title.title AS title
from cast_info, comp_cast_type, complete_cast, info_type, keyword, movie_info, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_info.movie_id)"
560,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info.info AS movie_info_info_11, movie_info_idx.info AS movie_info_idx_info_12, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_14, name.gender AS gender, name.name AS name, title.title AS title
from cast_info, comp_cast_type, complete_cast, info_type, keyword, movie_info, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_info.movie_id)","create materialized view if not exists mv560 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info.info AS movie_info_info_11, movie_info_idx.info AS movie_info_idx_info_12, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_14, name.gender AS gender, name.name AS name, title.title AS title
from cast_info, comp_cast_type, complete_cast, info_type, keyword, movie_info, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'completeverified') And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (info_type.id = movie_info.info_type_id) And (info_type.id = movie_info_idx.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.movie_id = complete_cast.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_info.movie_id)"
561,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
from info_type, movie_info
 where (info_type.info = 'genres') And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id)","create materialized view if not exists mv561 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
from info_type, movie_info
 where (info_type.info = 'genres') And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id)"
562,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv562 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_info, movie_info_idx
 where (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)"
563,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_4, movie_info_idx.info AS movie_info_idx_info_5, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_companies, movie_info, movie_info_idx
 where (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv563 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_4, movie_info_idx.info AS movie_info_idx_info_5, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_companies, movie_info, movie_info_idx
 where (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)"
564,"select company_name.id AS company_name_id_0, company_name.name AS name, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_5, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id
from company_name, info_type, movie_companies, movie_info, movie_info_idx
 where (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv564 as select company_name.id AS company_name_id_0, company_name.name AS name, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_5, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id
from company_name, info_type, movie_companies, movie_info, movie_info_idx
 where (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)"
565,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS name, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_info.info AS movie_info_info_7, movie_info_idx.info AS movie_info_idx_info_8, movie_info_idx.info_type_id AS info_type_id
from cast_info, company_name, info_type, movie_companies, movie_info, movie_info_idx
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv565 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS name, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_info.info AS movie_info_info_7, movie_info_idx.info AS movie_info_idx_info_8, movie_info_idx.info_type_id AS info_type_id
from cast_info, company_name, info_type, movie_companies, movie_info, movie_info_idx
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)"
566,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS company_name_name_4, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_info.info AS movie_info_info_7, movie_info_idx.info AS movie_info_idx_info_8, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender, name.name AS name_name_11
from cast_info, company_name, info_type, movie_companies, movie_info, movie_info_idx, name
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id)","create materialized view if not exists mv566 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS company_name_name_4, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_info.info AS movie_info_info_7, movie_info_idx.info AS movie_info_idx_info_8, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender, name.name AS name_name_11
from cast_info, company_name, info_type, movie_companies, movie_info, movie_info_idx, name
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id)"
567,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS company_name_name_4, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_info.info AS movie_info_info_7, movie_info_idx.info AS movie_info_idx_info_8, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender, name.name AS name_name_11, title.title AS title
from cast_info, company_name, info_type, movie_companies, movie_info, movie_info_idx, name, title
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (title.id = movie_companies.movie_id)","create materialized view if not exists mv567 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS company_name_name_4, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_info.info AS movie_info_info_7, movie_info_idx.info AS movie_info_idx_info_8, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender, name.name AS name_name_11, title.title AS title
from cast_info, company_name, info_type, movie_companies, movie_info, movie_info_idx, name, title
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (title.id = movie_companies.movie_id)"
568,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS company_name_name_4, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_info.info AS movie_info_info_7, movie_info_idx.info AS movie_info_idx_info_8, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id, name.gender AS gender, name.name AS name_name_12, title.title AS title
from cast_info, company_name, info_type, movie_companies, movie_info, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_companies.movie_id)","create materialized view if not exists mv568 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS company_name_name_4, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_info.info AS movie_info_info_7, movie_info_idx.info AS movie_info_idx_info_8, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id, name.gender AS gender, name.name AS name_name_12, title.title AS title
from cast_info, company_name, info_type, movie_companies, movie_info, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_companies.movie_id)"
569,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS company_name_name_4, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, movie_info.info AS movie_info_info_9, movie_info_idx.info AS movie_info_idx_info_10, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_12, name.gender AS gender, name.name AS name_name_14, title.title AS title
from cast_info, company_name, info_type, keyword, movie_companies, movie_info, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_companies.movie_id)","create materialized view if not exists mv569 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS company_name_name_4, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, movie_info.info AS movie_info_info_9, movie_info_idx.info AS movie_info_idx_info_10, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_12, name.gender AS gender, name.name AS name_name_14, title.title AS title
from cast_info, company_name, info_type, keyword, movie_companies, movie_info, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_companies.movie_id)"
570,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info.info AS movie_info_info_4
from info_type, movie_companies, movie_info
 where (info_type.info = 'genres') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(Blu-ray)%') And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_companies.movie_id)","create materialized view if not exists mv570 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info.info AS movie_info_info_4
from info_type, movie_companies, movie_info
 where (info_type.info = 'genres') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(Blu-ray)%') And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_companies.movie_id)"
571,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info.info AS movie_info_info_4, movie_info_idx.info AS movie_info_idx_info_5, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_companies, movie_info, movie_info_idx
 where (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(Blu-ray)%') And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_info.movie_id)","create materialized view if not exists mv571 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info.info AS movie_info_info_4, movie_info_idx.info AS movie_info_idx_info_5, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_companies, movie_info, movie_info_idx
 where (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(Blu-ray)%') And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_info.movie_id)"
572,"select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_companies.company_id AS company_id, movie_companies.note AS movie_companies_note_6, movie_info.info AS movie_info_info_7, movie_info_idx.info AS movie_info_idx_info_8, movie_info_idx.info_type_id AS info_type_id
from cast_info, info_type, movie_companies, movie_info, movie_info_idx
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.note like '%(Blu-ray)%') And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_info.movie_id)","create materialized view if not exists mv572 as select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_companies.company_id AS company_id, movie_companies.note AS movie_companies_note_6, movie_info.info AS movie_info_info_7, movie_info_idx.info AS movie_info_idx_info_8, movie_info_idx.info_type_id AS info_type_id
from cast_info, info_type, movie_companies, movie_info, movie_info_idx
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.note like '%(Blu-ray)%') And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_info.movie_id)"
573,"select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS name, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.note AS movie_companies_note_7, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id
from cast_info, company_name, info_type, movie_companies, movie_info, movie_info_idx
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(Blu-ray)%') And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv573 as select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS name, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.note AS movie_companies_note_7, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id
from cast_info, company_name, info_type, movie_companies, movie_info, movie_info_idx
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(Blu-ray)%') And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)"
574,"select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS name, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.note AS movie_companies_note_7, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from cast_info, company_name, info_type, movie_companies, movie_info, movie_info_idx, title
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.note like '%(Blu-ray)%') And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_info.movie_id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv574 as select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS name, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.note AS movie_companies_note_7, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from cast_info, company_name, info_type, movie_companies, movie_info, movie_info_idx, title
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.note like '%(Blu-ray)%') And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_info.movie_id) And (title.id = movie_info_idx.movie_id)"
575,"select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS name, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.note AS movie_companies_note_7, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from cast_info, company_name, info_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.note like '%(Blu-ray)%') And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_info.movie_id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv575 as select cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS name, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.note AS movie_companies_note_7, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
from cast_info, company_name, info_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.note like '%(Blu-ray)%') And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_info.movie_id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)"
576,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS name, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_13, title.production_year AS production_year, title.title AS title
from cast_info, company_name, info_type, keyword, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(Blu-ray)%') And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_info.movie_id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv576 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS name, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_13, title.production_year AS production_year, title.title AS title
from cast_info, company_name, info_type, keyword, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(Blu-ray)%') And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_info.movie_id) And (movie_keyword.movie_id = title.id) And (title.id = movie_info_idx.movie_id)"
577,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS company_name_name_4, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_13, name.gender AS gender, name.name AS name_name_15, title.production_year AS production_year, title.title AS title
from cast_info, company_name, info_type, keyword, movie_companies, movie_info, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(Blu-ray)%') And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_info.movie_id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv577 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS company_name_name_4, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, movie_info_idx.info AS movie_info_idx_info_11, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_13, name.gender AS gender, name.name AS name_name_15, title.production_year AS production_year, title.title AS title
from cast_info, company_name, info_type, keyword, movie_companies, movie_info, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = movie_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_companies.note like '%(Blu-ray)%') And (movie_info.info in ('Horror', 'Thriller')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_info.movie_id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_info_idx.movie_id)"
578,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_4, movie_info_idx.info AS movie_info_idx_info_5, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_companies, movie_info, movie_info_idx
 where (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv578 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_4, movie_info_idx.info AS movie_info_idx_info_5, movie_info_idx.info_type_id AS info_type_id
from info_type, movie_companies, movie_info, movie_info_idx
 where (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)"
579,"select company_name.id AS company_name_id_0, company_name.name AS name, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_5, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id
from company_name, info_type, movie_companies, movie_info, movie_info_idx
 where (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv579 as select company_name.id AS company_name_id_0, company_name.name AS name, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_5, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id
from company_name, info_type, movie_companies, movie_info, movie_info_idx
 where (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id)"
580,"select company_name.id AS company_name_id_0, company_name.name AS name, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_5, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id, title.title AS title
from company_name, info_type, movie_companies, movie_info, movie_info_idx, title
 where (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_companies.movie_id)","create materialized view if not exists mv580 as select company_name.id AS company_name_id_0, company_name.name AS name, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_5, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id, title.title AS title
from company_name, info_type, movie_companies, movie_info, movie_info_idx, title
 where (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_companies.movie_id)"
581,"select company_name.id AS company_name_id_0, company_name.name AS name, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_5, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id, title.title AS title
from company_name, info_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_companies.movie_id)","create materialized view if not exists mv581 as select company_name.id AS company_name_id_0, company_name.name AS name, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_5, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.info_type_id AS info_type_id, movie_keyword.keyword_id AS keyword_id, title.title AS title
from company_name, info_type, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_companies.movie_id)"
582,"select company_name.id AS company_name_id_0, company_name.name AS name, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, keyword.id AS keyword_id_4, keyword.keyword AS keyword, movie_companies.movie_id AS movie_companies_movie_id_6, movie_info.info AS movie_info_info_7, movie_info_idx.info AS movie_info_idx_info_8, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_10, title.title AS title
from company_name, info_type, keyword, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_companies.movie_id)","create materialized view if not exists mv582 as select company_name.id AS company_name_id_0, company_name.name AS name, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, keyword.id AS keyword_id_4, keyword.keyword AS keyword, movie_companies.movie_id AS movie_companies_movie_id_6, movie_info.info AS movie_info_info_7, movie_info_idx.info AS movie_info_idx_info_8, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_10, title.title AS title
from company_name, info_type, keyword, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_companies.movie_id)"
583,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS name, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, movie_info.info AS movie_info_info_9, movie_info_idx.info AS movie_info_idx_info_10, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_12, title.title AS title
from cast_info, company_name, info_type, keyword, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_companies.movie_id)","create materialized view if not exists mv583 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS name, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, movie_info.info AS movie_info_info_9, movie_info_idx.info AS movie_info_idx_info_10, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_12, title.title AS title
from cast_info, company_name, info_type, keyword, movie_companies, movie_info, movie_info_idx, movie_keyword, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (title.id = movie_companies.movie_id)"
584,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS company_name_name_4, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, movie_info.info AS movie_info_info_9, movie_info_idx.info AS movie_info_idx_info_10, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_12, name.name AS name_name_13, title.title AS title
from cast_info, company_name, info_type, keyword, movie_companies, movie_info, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_companies.movie_id)","create materialized view if not exists mv584 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS company_name_name_4, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, movie_info.info AS movie_info_info_9, movie_info_idx.info AS movie_info_idx_info_10, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_12, name.name AS name_name_13, title.title AS title
from cast_info, company_name, info_type, keyword, movie_companies, movie_info, movie_info_idx, movie_keyword, name, title
 where (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (company_name.id = movie_companies.company_id) And (info_type.info = 'genres') And (info_type.info = 'votes') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info.info_type_id = info_type.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_keyword.movie_id = title.id) And (name.id = cast_info.person_id) And (title.id = movie_companies.movie_id)"
585,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
from keyword, movie_keyword
 where (keyword.keyword = '10,000-mile-club') And (movie_keyword.keyword_id = keyword.id)","create materialized view if not exists mv585 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
from keyword, movie_keyword
 where (keyword.keyword = '10,000-mile-club') And (movie_keyword.keyword_id = keyword.id)"
586,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, movie_link.link_type_id AS link_type_id, movie_link.linked_movie_id AS linked_movie_id
from keyword, movie_keyword, movie_link
 where (keyword.keyword = '10,000-mile-club') And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_link.movie_id)","create materialized view if not exists mv586 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, movie_link.link_type_id AS link_type_id, movie_link.linked_movie_id AS linked_movie_id
from keyword, movie_keyword, movie_link
 where (keyword.keyword = '10,000-mile-club') And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_link.movie_id)"
587,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, movie_link.link_type_id AS link_type_id, movie_link.linked_movie_id AS linked_movie_id, title.title AS title
from keyword, movie_keyword, movie_link, title
 where (keyword.keyword = '10,000-mile-club') And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_link.movie_id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv587 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, movie_link.link_type_id AS link_type_id, movie_link.linked_movie_id AS linked_movie_id, title.title AS title
from keyword, movie_keyword, movie_link, title
 where (keyword.keyword = '10,000-mile-club') And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_link.movie_id) And (title.id = movie_keyword.movie_id)"
588,"select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, link_type.link AS link, movie_keyword.movie_id AS movie_id, movie_link.linked_movie_id AS linked_movie_id, title.title AS title
from keyword, link_type, movie_keyword, movie_link, title
 where (keyword.keyword = '10,000-mile-club') And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv588 as select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, link_type.link AS link, movie_keyword.movie_id AS movie_id, movie_link.linked_movie_id AS linked_movie_id, title.title AS title
from keyword, link_type, movie_keyword, movie_link, title
 where (keyword.keyword = '10,000-mile-club') And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id) And (title.id = movie_keyword.movie_id)"
589,"select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, link_type.link AS link, movie_keyword.movie_id AS movie_id, title.title AS title
from keyword, link_type, movie_keyword, movie_link, title
 where (keyword.keyword = '10,000-mile-club') And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id) And (title.id = movie_keyword.movie_id) And (title.id = movie_link.linked_movie_id)","create materialized view if not exists mv589 as select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, link_type.link AS link, movie_keyword.movie_id AS movie_id, title.title AS title
from keyword, link_type, movie_keyword, movie_link, title
 where (keyword.keyword = '10,000-mile-club') And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id) And (title.id = movie_keyword.movie_id) And (title.id = movie_link.linked_movie_id)"
590,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, movie_link.link_type_id AS link_type_id, movie_link.linked_movie_id AS linked_movie_id
from keyword, movie_keyword, movie_link
 where (keyword.keyword = 'character-name-in-title') And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_link.movie_id)","create materialized view if not exists mv590 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, movie_link.link_type_id AS link_type_id, movie_link.linked_movie_id AS linked_movie_id
from keyword, movie_keyword, movie_link
 where (keyword.keyword = 'character-name-in-title') And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_link.movie_id)"
591,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, movie_link.link_type_id AS link_type_id, movie_link.linked_movie_id AS linked_movie_id, title.title AS title
from keyword, movie_keyword, movie_link, title
 where (keyword.keyword = 'character-name-in-title') And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_link.movie_id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv591 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, movie_link.link_type_id AS link_type_id, movie_link.linked_movie_id AS linked_movie_id, title.title AS title
from keyword, movie_keyword, movie_link, title
 where (keyword.keyword = 'character-name-in-title') And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_link.movie_id) And (title.id = movie_keyword.movie_id)"
592,"select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, link_type.link AS link, movie_keyword.movie_id AS movie_id, movie_link.linked_movie_id AS linked_movie_id, title.title AS title
from keyword, link_type, movie_keyword, movie_link, title
 where (keyword.keyword = 'character-name-in-title') And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id) And (title.id = movie_keyword.movie_id)","create materialized view if not exists mv592 as select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, link_type.link AS link, movie_keyword.movie_id AS movie_id, movie_link.linked_movie_id AS linked_movie_id, title.title AS title
from keyword, link_type, movie_keyword, movie_link, title
 where (keyword.keyword = 'character-name-in-title') And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id) And (title.id = movie_keyword.movie_id)"
593,"select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, link_type.link AS link, movie_keyword.movie_id AS movie_id, title.title AS title
from keyword, link_type, movie_keyword, movie_link, title
 where (keyword.keyword = 'character-name-in-title') And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id) And (title.id = movie_keyword.movie_id) And (title.id = movie_link.linked_movie_id)","create materialized view if not exists mv593 as select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, link_type.link AS link, movie_keyword.movie_id AS movie_id, title.title AS title
from keyword, link_type, movie_keyword, movie_link, title
 where (keyword.keyword = 'character-name-in-title') And (movie_keyword.keyword_id = keyword.id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id) And (title.id = movie_keyword.movie_id) And (title.id = movie_link.linked_movie_id)"
594,"select company_name.country_code AS country_code, company_name.id AS id, company_name.name AS name, movie_companies.movie_id AS movie_id, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id
from company_name, movie_companies, movie_info_idx
 where (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (movie_info_idx.movie_id = movie_companies.movie_id)","create materialized view if not exists mv594 as select company_name.country_code AS country_code, company_name.id AS id, company_name.name AS name, movie_companies.movie_id AS movie_id, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id
from company_name, movie_companies, movie_info_idx
 where (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (movie_info_idx.movie_id = movie_companies.movie_id)"
595,"select company_name.country_code AS country_code, company_name.id AS id, company_name.name AS name, movie_companies.movie_id AS movie_id, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from company_name, movie_companies, movie_info_idx, title
 where (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (movie_info_idx.movie_id = movie_companies.movie_id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv595 as select company_name.country_code AS country_code, company_name.id AS id, company_name.name AS name, movie_companies.movie_id AS movie_id, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from company_name, movie_companies, movie_info_idx, title
 where (company_name.country_code = '[us]') And (movie_companies.company_id = company_name.id) And (movie_info_idx.movie_id = movie_companies.movie_id) And (title.id = movie_info_idx.movie_id)"
596,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'rating') And (movie_info_idx.info < '3.0') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv596 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'rating') And (movie_info_idx.info < '3.0') And (movie_info_idx.info_type_id = info_type.id)"
597,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from info_type, movie_info_idx, title
 where (info_type.info = 'rating') And (movie_info_idx.info < '3.0') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv597 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from info_type, movie_info_idx, title
 where (info_type.info = 'rating') And (movie_info_idx.info < '3.0') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)"
598,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_info_idx, title
 where (info_type.info = 'rating') And (kind_type.kind = 'tv series') And (movie_info_idx.info < '3.0') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id) And (title.kind_id = kind_type.id)","create materialized view if not exists mv598 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_info_idx, title
 where (info_type.info = 'rating') And (kind_type.kind = 'tv series') And (movie_info_idx.info < '3.0') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id) And (title.kind_id = kind_type.id)"
599,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_companies, movie_info_idx, title
 where (info_type.info = 'rating') And (kind_type.kind = 'tv series') And (movie_companies.movie_id = title.id) And (movie_info_idx.info < '3.0') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id) And (title.kind_id = kind_type.id)","create materialized view if not exists mv599 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_companies, movie_info_idx, title
 where (info_type.info = 'rating') And (kind_type.kind = 'tv series') And (movie_companies.movie_id = title.id) And (movie_info_idx.info < '3.0') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id) And (title.kind_id = kind_type.id)"
600,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind, movie_info_idx.info AS movie_info_idx_info_7, title.production_year AS production_year, title.title AS title
from company_name, info_type, kind_type, movie_companies, movie_info_idx, title
 where (company_name.country_code = '[us]') And (info_type.info = 'rating') And (kind_type.kind = 'tv series') And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '3.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_companies.movie_id) And (title.id = movie_info_idx.movie_id) And (title.kind_id = kind_type.id)","create materialized view if not exists mv600 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind, movie_info_idx.info AS movie_info_idx_info_7, title.production_year AS production_year, title.title AS title
from company_name, info_type, kind_type, movie_companies, movie_info_idx, title
 where (company_name.country_code = '[us]') And (info_type.info = 'rating') And (kind_type.kind = 'tv series') And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '3.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_companies.movie_id) And (title.id = movie_info_idx.movie_id) And (title.kind_id = kind_type.id)"
601,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind, movie_companies.movie_id AS movie_companies_movie_id_7, movie_info_idx.info AS movie_info_idx_info_8, movie_link.link_type_id AS link_type_id, movie_link.movie_id AS movie_link_movie_id_10, title.production_year AS production_year, title.title AS title
from company_name, info_type, kind_type, movie_companies, movie_info_idx, movie_link, title
 where (company_name.country_code = '[us]') And (info_type.info = 'rating') And (kind_type.kind = 'tv series') And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = title.id) And (movie_info_idx.info < '3.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_companies.movie_id) And (title.id = movie_info_idx.movie_id) And (title.id = movie_link.linked_movie_id) And (title.kind_id = kind_type.id)","create materialized view if not exists mv601 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind, movie_companies.movie_id AS movie_companies_movie_id_7, movie_info_idx.info AS movie_info_idx_info_8, movie_link.link_type_id AS link_type_id, movie_link.movie_id AS movie_link_movie_id_10, title.production_year AS production_year, title.title AS title
from company_name, info_type, kind_type, movie_companies, movie_info_idx, movie_link, title
 where (company_name.country_code = '[us]') And (info_type.info = 'rating') And (kind_type.kind = 'tv series') And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = title.id) And (movie_info_idx.info < '3.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_companies.movie_id) And (title.id = movie_info_idx.movie_id) And (title.id = movie_link.linked_movie_id) And (title.kind_id = kind_type.id)"
602,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_companies_movie_id_9, movie_info_idx.info AS movie_info_idx_info_10, movie_link.movie_id AS movie_link_movie_id_11, title.production_year AS production_year, title.title AS title
from company_name, info_type, kind_type, link_type, movie_companies, movie_info_idx, movie_link, title
 where (company_name.country_code = '[us]') And (info_type.info = 'rating') And (kind_type.kind = 'tv series') And (link_type.id = movie_link.link_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = title.id) And (movie_info_idx.info < '3.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_companies.movie_id) And (title.id = movie_info_idx.movie_id) And (title.id = movie_link.linked_movie_id) And (title.kind_id = kind_type.id)","create materialized view if not exists mv602 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_companies_movie_id_9, movie_info_idx.info AS movie_info_idx_info_10, movie_link.movie_id AS movie_link_movie_id_11, title.production_year AS production_year, title.title AS title
from company_name, info_type, kind_type, link_type, movie_companies, movie_info_idx, movie_link, title
 where (company_name.country_code = '[us]') And (info_type.info = 'rating') And (kind_type.kind = 'tv series') And (link_type.id = movie_link.link_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = title.id) And (movie_info_idx.info < '3.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_companies.movie_id) And (title.id = movie_info_idx.movie_id) And (title.id = movie_link.linked_movie_id) And (title.kind_id = kind_type.id)"
603,"select company_name.country_code AS country_code, company_name.id AS id, company_name.name AS name, movie_companies.movie_id AS movie_id, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id
from company_name, movie_companies, movie_info_idx
 where (company_name.country_code = '[nl]') And (movie_companies.company_id = company_name.id) And (movie_info_idx.movie_id = movie_companies.movie_id)","create materialized view if not exists mv603 as select company_name.country_code AS country_code, company_name.id AS id, company_name.name AS name, movie_companies.movie_id AS movie_id, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id
from company_name, movie_companies, movie_info_idx
 where (company_name.country_code = '[nl]') And (movie_companies.company_id = company_name.id) And (movie_info_idx.movie_id = movie_companies.movie_id)"
604,"select company_name.country_code AS country_code, company_name.id AS id, company_name.name AS name, movie_companies.movie_id AS movie_id, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from company_name, movie_companies, movie_info_idx, title
 where (company_name.country_code = '[nl]') And (movie_companies.company_id = company_name.id) And (movie_info_idx.movie_id = movie_companies.movie_id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv604 as select company_name.country_code AS country_code, company_name.id AS id, company_name.name AS name, movie_companies.movie_id AS movie_id, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from company_name, movie_companies, movie_info_idx, title
 where (company_name.country_code = '[nl]') And (movie_companies.company_id = company_name.id) And (movie_info_idx.movie_id = movie_companies.movie_id) And (title.id = movie_info_idx.movie_id)"
605,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, kind_type.id AS kind_type_id_3, kind_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from company_name, kind_type, movie_companies, movie_info_idx, title
 where (company_name.country_code = '[nl]') And (kind_type.kind = 'tv series') And (movie_companies.company_id = company_name.id) And (movie_info_idx.movie_id = movie_companies.movie_id) And (title.id = movie_info_idx.movie_id) And (title.kind_id = kind_type.id)","create materialized view if not exists mv605 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, kind_type.id AS kind_type_id_3, kind_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
from company_name, kind_type, movie_companies, movie_info_idx, title
 where (company_name.country_code = '[nl]') And (kind_type.kind = 'tv series') And (movie_companies.company_id = company_name.id) And (movie_info_idx.movie_id = movie_companies.movie_id) And (title.id = movie_info_idx.movie_id) And (title.kind_id = kind_type.id)"
606,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_8, title.production_year AS production_year, title.title AS title
from company_name, info_type, kind_type, movie_companies, movie_info_idx, title
 where (company_name.country_code = '[nl]') And (info_type.info = 'rating') And (kind_type.kind = 'tv series') And (movie_companies.company_id = company_name.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_companies.movie_id) And (title.id = movie_info_idx.movie_id) And (title.kind_id = kind_type.id)","create materialized view if not exists mv606 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_8, title.production_year AS production_year, title.title AS title
from company_name, info_type, kind_type, movie_companies, movie_info_idx, title
 where (company_name.country_code = '[nl]') And (info_type.info = 'rating') And (kind_type.kind = 'tv series') And (movie_companies.company_id = company_name.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_companies.movie_id) And (title.id = movie_info_idx.movie_id) And (title.kind_id = kind_type.id)"
607,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4
from info_type, movie_companies, movie_info_idx
 where (info_type.info = 'rating') And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '3.0') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv607 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4
from info_type, movie_companies, movie_info_idx
 where (info_type.info = 'rating') And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '3.0') And (movie_info_idx.info_type_id = info_type.id)"
608,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind, movie_info_idx.info AS movie_info_idx_info_7, title.production_year AS production_year, title.title AS title
from company_name, info_type, kind_type, movie_companies, movie_info_idx, title
 where (company_name.country_code = '[nl]') And (info_type.info = 'rating') And (kind_type.kind = 'tv series') And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '3.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_companies.movie_id) And (title.id = movie_info_idx.movie_id) And (title.kind_id = kind_type.id)","create materialized view if not exists mv608 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind, movie_info_idx.info AS movie_info_idx_info_7, title.production_year AS production_year, title.title AS title
from company_name, info_type, kind_type, movie_companies, movie_info_idx, title
 where (company_name.country_code = '[nl]') And (info_type.info = 'rating') And (kind_type.kind = 'tv series') And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '3.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_companies.movie_id) And (title.id = movie_info_idx.movie_id) And (title.kind_id = kind_type.id)"
609,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind, movie_info_idx.info AS movie_info_idx_info_7, movie_link.link_type_id AS link_type_id, movie_link.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from company_name, info_type, kind_type, movie_companies, movie_info_idx, movie_link, title
 where (company_name.country_code = '[nl]') And (info_type.info = 'rating') And (kind_type.kind = 'tv series') And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '3.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_companies.movie_id) And (movie_info_idx.movie_id = movie_link.linked_movie_id) And (title.id = movie_info_idx.movie_id) And (title.kind_id = kind_type.id)","create materialized view if not exists mv609 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind, movie_info_idx.info AS movie_info_idx_info_7, movie_link.link_type_id AS link_type_id, movie_link.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from company_name, info_type, kind_type, movie_companies, movie_info_idx, movie_link, title
 where (company_name.country_code = '[nl]') And (info_type.info = 'rating') And (kind_type.kind = 'tv series') And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '3.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_companies.movie_id) And (movie_info_idx.movie_id = movie_link.linked_movie_id) And (title.id = movie_info_idx.movie_id) And (title.kind_id = kind_type.id)"
610,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind, link_type.id AS link_type_id_7, link_type.link AS link, movie_info_idx.info AS movie_info_idx_info_9, movie_link.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from company_name, info_type, kind_type, link_type, movie_companies, movie_info_idx, movie_link, title
 where (company_name.country_code = '[nl]') And (info_type.info = 'rating') And (kind_type.kind = 'tv series') And (link_type.id = movie_link.link_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '3.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_companies.movie_id) And (movie_info_idx.movie_id = movie_link.linked_movie_id) And (title.id = movie_info_idx.movie_id) And (title.kind_id = kind_type.id)","create materialized view if not exists mv610 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind, link_type.id AS link_type_id_7, link_type.link AS link, movie_info_idx.info AS movie_info_idx_info_9, movie_link.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from company_name, info_type, kind_type, link_type, movie_companies, movie_info_idx, movie_link, title
 where (company_name.country_code = '[nl]') And (info_type.info = 'rating') And (kind_type.kind = 'tv series') And (link_type.id = movie_link.link_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '3.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_companies.movie_id) And (movie_info_idx.movie_id = movie_link.linked_movie_id) And (title.id = movie_info_idx.movie_id) And (title.kind_id = kind_type.id)"
611,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_companies_movie_id_9, movie_info_idx.info AS movie_info_idx_info_10, movie_link.movie_id AS movie_link_movie_id_11, title.production_year AS production_year, title.title AS title
from company_name, info_type, kind_type, link_type, movie_companies, movie_info_idx, movie_link, title
 where (company_name.country_code = '[nl]') And (info_type.info = 'rating') And (kind_type.kind = 'tv series') And (link_type.id = movie_link.link_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = title.id) And (movie_info_idx.info < '3.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_companies.movie_id) And (title.id = movie_info_idx.movie_id) And (title.id = movie_link.linked_movie_id) And (title.kind_id = kind_type.id)","create materialized view if not exists mv611 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_companies_movie_id_9, movie_info_idx.info AS movie_info_idx_info_10, movie_link.movie_id AS movie_link_movie_id_11, title.production_year AS production_year, title.title AS title
from company_name, info_type, kind_type, link_type, movie_companies, movie_info_idx, movie_link, title
 where (company_name.country_code = '[nl]') And (info_type.info = 'rating') And (kind_type.kind = 'tv series') And (link_type.id = movie_link.link_type_id) And (movie_companies.company_id = company_name.id) And (movie_companies.movie_id = title.id) And (movie_info_idx.info < '3.0') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_companies.movie_id) And (title.id = movie_info_idx.movie_id) And (title.id = movie_link.linked_movie_id) And (title.kind_id = kind_type.id)"
612,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'rating') And (movie_info_idx.info < '3.5') And (movie_info_idx.info_type_id = info_type.id)","create materialized view if not exists mv612 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
from info_type, movie_info_idx
 where (info_type.info = 'rating') And (movie_info_idx.info < '3.5') And (movie_info_idx.info_type_id = info_type.id)"
613,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from info_type, movie_info_idx, title
 where (info_type.info = 'rating') And (movie_info_idx.info < '3.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)","create materialized view if not exists mv613 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
from info_type, movie_info_idx, title
 where (info_type.info = 'rating') And (movie_info_idx.info < '3.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id)"
614,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_info_idx, title
 where (info_type.info = 'rating') And (kind_type.kind in ('tv series', 'episode')) And (movie_info_idx.info < '3.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id) And (title.kind_id = kind_type.id)","create materialized view if not exists mv614 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_info_idx, title
 where (info_type.info = 'rating') And (kind_type.kind in ('tv series', 'episode')) And (movie_info_idx.info < '3.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id) And (title.kind_id = kind_type.id)"
615,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_info_idx_movie_id_5, movie_link.link_type_id AS link_type_id, movie_link.movie_id AS movie_link_movie_id_7, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_info_idx, movie_link, title
 where (info_type.info = 'rating') And (kind_type.kind in ('tv series', 'episode')) And (movie_info_idx.info < '3.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id) And (title.id = movie_link.linked_movie_id) And (title.kind_id = kind_type.id)","create materialized view if not exists mv615 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_info_idx_movie_id_5, movie_link.link_type_id AS link_type_id, movie_link.movie_id AS movie_link_movie_id_7, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_info_idx, movie_link, title
 where (info_type.info = 'rating') And (kind_type.kind in ('tv series', 'episode')) And (movie_info_idx.info < '3.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id) And (title.id = movie_link.linked_movie_id) And (title.kind_id = kind_type.id)"
616,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_info_idx_movie_id_5, movie_link.link_type_id AS link_type_id, movie_link.movie_id AS movie_link_movie_id_7, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_info_idx, movie_link, title
 where (info_type.info = 'rating') And (kind_type.kind in ('tv series', 'episode')) And (movie_info_idx.info < '3.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id) And (title.id = movie_link.linked_movie_id) And (title.id = movie_link.movie_id) And (title.kind_id = kind_type.id)","create materialized view if not exists mv616 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_info_idx_movie_id_5, movie_link.link_type_id AS link_type_id, movie_link.movie_id AS movie_link_movie_id_7, title.production_year AS production_year, title.title AS title
from info_type, kind_type, movie_info_idx, movie_link, title
 where (info_type.info = 'rating') And (kind_type.kind in ('tv series', 'episode')) And (movie_info_idx.info < '3.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id) And (title.id = movie_link.linked_movie_id) And (title.id = movie_link.movie_id) And (title.kind_id = kind_type.id)"
617,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, link_type.id AS link_type_id_4, link_type.link AS link, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.movie_id AS movie_info_idx_movie_id_7, movie_link.movie_id AS movie_link_movie_id_8, title.production_year AS production_year, title.title AS title
from info_type, kind_type, link_type, movie_info_idx, movie_link, title
 where (info_type.info = 'rating') And (kind_type.kind in ('tv series', 'episode')) And (link_type.id = movie_link.link_type_id) And (movie_info_idx.info < '3.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id) And (title.id = movie_link.linked_movie_id) And (title.id = movie_link.movie_id) And (title.kind_id = kind_type.id)","create materialized view if not exists mv617 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, link_type.id AS link_type_id_4, link_type.link AS link, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.movie_id AS movie_info_idx_movie_id_7, movie_link.movie_id AS movie_link_movie_id_8, title.production_year AS production_year, title.title AS title
from info_type, kind_type, link_type, movie_info_idx, movie_link, title
 where (info_type.info = 'rating') And (kind_type.kind in ('tv series', 'episode')) And (link_type.id = movie_link.link_type_id) And (movie_info_idx.info < '3.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id) And (title.id = movie_link.linked_movie_id) And (title.id = movie_link.movie_id) And (title.kind_id = kind_type.id)"
618,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, link_type.id AS link_type_id_4, link_type.link AS link, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_8, movie_link.linked_movie_id AS linked_movie_id, title.production_year AS production_year, title.title AS title
from info_type, kind_type, link_type, movie_companies, movie_info_idx, movie_link, title
 where (info_type.info = 'rating') And (kind_type.kind in ('tv series', 'episode')) And (link_type.id = movie_link.link_type_id) And (movie_companies.movie_id = title.id) And (movie_info_idx.info < '3.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id) And (title.id = movie_link.linked_movie_id) And (title.id = movie_link.movie_id) And (title.kind_id = kind_type.id)","create materialized view if not exists mv618 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, link_type.id AS link_type_id_4, link_type.link AS link, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_8, movie_link.linked_movie_id AS linked_movie_id, title.production_year AS production_year, title.title AS title
from info_type, kind_type, link_type, movie_companies, movie_info_idx, movie_link, title
 where (info_type.info = 'rating') And (kind_type.kind in ('tv series', 'episode')) And (link_type.id = movie_link.link_type_id) And (movie_companies.movie_id = title.id) And (movie_info_idx.info < '3.5') And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info_idx.movie_id) And (title.id = movie_link.linked_movie_id) And (title.id = movie_link.movie_id) And (title.kind_id = kind_type.id)"
619,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.kind AS kind, link_type.id AS link_type_id_6, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_9, movie_link.linked_movie_id AS linked_movie_id, title.production_year AS production_year, title.title AS title
from company_name, info_type, kind_type, link_type, movie_companies, movie_info_idx, movie_link, title
 where (company_name.id = movie_companies.company_id) And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (kind_type.kind in ('tv series', 'episode')) And (link_type.id = movie_link.link_type_id) And (movie_companies.movie_id = title.id) And (movie_info_idx.info < '3.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = title.id) And (title.id = movie_info_idx.movie_id) And (title.id = movie_link.linked_movie_id) And (title.id = movie_link.movie_id) And (title.kind_id = kind_type.id)","create materialized view if not exists mv619 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.kind AS kind, link_type.id AS link_type_id_6, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_9, movie_link.linked_movie_id AS linked_movie_id, title.production_year AS production_year, title.title AS title
from company_name, info_type, kind_type, link_type, movie_companies, movie_info_idx, movie_link, title
 where (company_name.id = movie_companies.company_id) And (info_type.info = 'rating') And (kind_type.id = title.kind_id) And (kind_type.kind in ('tv series', 'episode')) And (link_type.id = movie_link.link_type_id) And (movie_companies.movie_id = title.id) And (movie_info_idx.info < '3.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = title.id) And (title.id = movie_info_idx.movie_id) And (title.id = movie_link.linked_movie_id) And (title.id = movie_link.movie_id) And (title.kind_id = kind_type.id)"
